{"ast":null,"code":"var mathTrig = require('./math-trig');\nvar statistical = require('./statistical');\nvar engineering = require('./engineering');\nvar dateTime = require('./date-time');\nfunction set(fn, root) {\n  if (root) {\n    for (var i in root) {\n      fn[i] = root[i];\n    }\n  }\n  return fn;\n}\nexports.BETADIST = statistical.BETA.DIST;\nexports.BETAINV = statistical.BETA.INV;\nexports.BINOMDIST = statistical.BINOM.DIST;\nexports.CEILING = exports.ISOCEILING = set(mathTrig.CEILING.MATH, mathTrig.CEILING);\nexports.CEILINGMATH = mathTrig.CEILING.MATH;\nexports.CEILINGPRECISE = mathTrig.CEILING.PRECISE;\nexports.CHIDIST = statistical.CHISQ.DIST;\nexports.CHIDISTRT = statistical.CHISQ.DIST.RT;\nexports.CHIINV = statistical.CHISQ.INV;\nexports.CHIINVRT = statistical.CHISQ.INV.RT;\nexports.CHITEST = statistical.CHISQ.TEST;\nexports.CONFIDENCE = set(statistical.CONFIDENCE.NORM, statistical.CONFIDENCE);\nexports.COVAR = statistical.COVARIANCE.P;\nexports.COVARIANCEP = statistical.COVARIANCE.P;\nexports.COVARIANCES = statistical.COVARIANCE.S;\nexports.CRITBINOM = statistical.BINOM.INV;\nexports.EXPONDIST = statistical.EXPON.DIST;\nexports.ERFCPRECISE = engineering.ERFC.PRECISE;\nexports.ERFPRECISE = engineering.ERF.PRECISE;\nexports.FDIST = statistical.F.DIST;\nexports.FDISTRT = statistical.F.DIST.RT;\nexports.FINVRT = statistical.F.INV.RT;\nexports.FINV = statistical.F.INV;\nexports.FLOOR = set(mathTrig.FLOOR.MATH, mathTrig.FLOOR);\nexports.FLOORMATH = mathTrig.FLOOR.MATH;\nexports.FLOORPRECISE = mathTrig.FLOOR.PRECISE;\nexports.FTEST = statistical.F.TEST;\nexports.GAMMADIST = statistical.GAMMA.DIST;\nexports.GAMMAINV = statistical.GAMMA.INV;\nexports.GAMMALNPRECISE = statistical.GAMMALN.PRECISE;\nexports.HYPGEOMDIST = statistical.HYPGEOM.DIST;\nexports.LOGINV = statistical.LOGNORM.INV;\nexports.LOGNORMINV = statistical.LOGNORM.INV;\nexports.LOGNORMDIST = statistical.LOGNORM.DIST;\nexports.MODE = set(statistical.MODE.SNGL, statistical.MODE);\nexports.MODEMULT = statistical.MODE.MULT;\nexports.MODESNGL = statistical.MODE.SNGL;\nexports.NEGBINOMDIST = statistical.NEGBINOM.DIST;\nexports.NETWORKDAYSINTL = dateTime.NETWORKDAYS.INTL;\nexports.NORMDIST = statistical.NORM.DIST;\nexports.NORMINV = statistical.NORM.INV;\nexports.NORMSDIST = statistical.NORM.S.DIST;\nexports.NORMSINV = statistical.NORM.S.INV;\nexports.PERCENTILE = set(statistical.PERCENTILE.EXC, statistical.PERCENTILE);\nexports.PERCENTILEEXC = statistical.PERCENTILE.EXC;\nexports.PERCENTILEINC = statistical.PERCENTILE.INC;\nexports.PERCENTRANK = set(statistical.PERCENTRANK.INC, statistical.PERCENTRANK);\nexports.PERCENTRANKEXC = statistical.PERCENTRANK.EXC;\nexports.PERCENTRANKINC = statistical.PERCENTRANK.INC;\nexports.POISSON = set(statistical.POISSON.DIST, statistical.POISSON);\nexports.POISSONDIST = statistical.POISSON.DIST;\nexports.QUARTILE = set(statistical.QUARTILE.INC, statistical.QUARTILE);\nexports.QUARTILEEXC = statistical.QUARTILE.EXC;\nexports.QUARTILEINC = statistical.QUARTILE.INC;\nexports.RANK = set(statistical.RANK.EQ, statistical.RANK);\nexports.RANKAVG = statistical.RANK.AVG;\nexports.RANKEQ = statistical.RANK.EQ;\nexports.SKEWP = statistical.SKEW.P;\nexports.STDEV = set(statistical.STDEV.S, statistical.STDEV);\nexports.STDEVP = statistical.STDEV.P;\nexports.STDEVS = statistical.STDEV.S;\nexports.TDIST = statistical.T.DIST;\nexports.TDISTRT = statistical.T.DIST.RT;\nexports.TINV = statistical.T.INV;\nexports.TTEST = statistical.T.TEST;\nexports.VAR = set(statistical.VAR.S, statistical.VAR);\nexports.VARP = statistical.VAR.P;\nexports.VARS = statistical.VAR.S;\nexports.WEIBULL = set(statistical.WEIBULL.DIST, statistical.WEIBULL);\nexports.WEIBULLDIST = statistical.WEIBULL.DIST;\nexports.WORKDAYINTL = dateTime.WORKDAY.INTL;\nexports.ZTEST = statistical.Z.TEST;","map":{"version":3,"names":["mathTrig","require","statistical","engineering","dateTime","set","fn","root","i","exports","BETADIST","BETA","DIST","BETAINV","INV","BINOMDIST","BINOM","CEILING","ISOCEILING","MATH","CEILINGMATH","CEILINGPRECISE","PRECISE","CHIDIST","CHISQ","CHIDISTRT","RT","CHIINV","CHIINVRT","CHITEST","TEST","CONFIDENCE","NORM","COVAR","COVARIANCE","P","COVARIANCEP","COVARIANCES","S","CRITBINOM","EXPONDIST","EXPON","ERFCPRECISE","ERFC","ERFPRECISE","ERF","FDIST","F","FDISTRT","FINVRT","FINV","FLOOR","FLOORMATH","FLOORPRECISE","FTEST","GAMMADIST","GAMMA","GAMMAINV","GAMMALNPRECISE","GAMMALN","HYPGEOMDIST","HYPGEOM","LOGINV","LOGNORM","LOGNORMINV","LOGNORMDIST","MODE","SNGL","MODEMULT","MULT","MODESNGL","NEGBINOMDIST","NEGBINOM","NETWORKDAYSINTL","NETWORKDAYS","INTL","NORMDIST","NORMINV","NORMSDIST","NORMSINV","PERCENTILE","EXC","PERCENTILEEXC","PERCENTILEINC","INC","PERCENTRANK","PERCENTRANKEXC","PERCENTRANKINC","POISSON","POISSONDIST","QUARTILE","QUARTILEEXC","QUARTILEINC","RANK","EQ","RANKAVG","AVG","RANKEQ","SKEWP","SKEW","STDEV","STDEVP","STDEVS","TDIST","T","TDISTRT","TINV","TTEST","VAR","VARP","VARS","WEIBULL","WEIBULLDIST","WORKDAYINTL","WORKDAY","ZTEST","Z"],"sources":["D:/WebNodeJs/node18/trelo_project/front_end/node_modules/@handsontable/formulajs/lib/compatibility.js"],"sourcesContent":["var mathTrig = require('./math-trig');\nvar statistical = require('./statistical');\nvar engineering = require('./engineering');\nvar dateTime = require('./date-time');\n\nfunction set(fn, root) {\n  if (root) {\n    for (var i in root) {\n      fn[i] = root[i];\n    }\n  }\n\n  return fn;\n}\n\nexports.BETADIST = statistical.BETA.DIST;\nexports.BETAINV = statistical.BETA.INV;\nexports.BINOMDIST = statistical.BINOM.DIST;\nexports.CEILING = exports.ISOCEILING = set(mathTrig.CEILING.MATH, mathTrig.CEILING);\nexports.CEILINGMATH = mathTrig.CEILING.MATH;\nexports.CEILINGPRECISE = mathTrig.CEILING.PRECISE;\nexports.CHIDIST = statistical.CHISQ.DIST;\nexports.CHIDISTRT = statistical.CHISQ.DIST.RT;\nexports.CHIINV = statistical.CHISQ.INV;\nexports.CHIINVRT = statistical.CHISQ.INV.RT;\nexports.CHITEST = statistical.CHISQ.TEST;\nexports.CONFIDENCE = set(statistical.CONFIDENCE.NORM, statistical.CONFIDENCE);\nexports.COVAR = statistical.COVARIANCE.P;\nexports.COVARIANCEP = statistical.COVARIANCE.P;\nexports.COVARIANCES = statistical.COVARIANCE.S;\nexports.CRITBINOM = statistical.BINOM.INV;\nexports.EXPONDIST = statistical.EXPON.DIST;\nexports.ERFCPRECISE = engineering.ERFC.PRECISE;\nexports.ERFPRECISE = engineering.ERF.PRECISE;\nexports.FDIST = statistical.F.DIST;\nexports.FDISTRT = statistical.F.DIST.RT;\nexports.FINVRT = statistical.F.INV.RT;\nexports.FINV = statistical.F.INV;\nexports.FLOOR = set(mathTrig.FLOOR.MATH, mathTrig.FLOOR);\nexports.FLOORMATH = mathTrig.FLOOR.MATH;\nexports.FLOORPRECISE = mathTrig.FLOOR.PRECISE;\nexports.FTEST = statistical.F.TEST;\nexports.GAMMADIST = statistical.GAMMA.DIST;\nexports.GAMMAINV = statistical.GAMMA.INV;\nexports.GAMMALNPRECISE = statistical.GAMMALN.PRECISE;\nexports.HYPGEOMDIST = statistical.HYPGEOM.DIST;\nexports.LOGINV = statistical.LOGNORM.INV;\nexports.LOGNORMINV = statistical.LOGNORM.INV;\nexports.LOGNORMDIST = statistical.LOGNORM.DIST;\nexports.MODE = set(statistical.MODE.SNGL, statistical.MODE);\nexports.MODEMULT = statistical.MODE.MULT;\nexports.MODESNGL = statistical.MODE.SNGL;\nexports.NEGBINOMDIST = statistical.NEGBINOM.DIST;\nexports.NETWORKDAYSINTL = dateTime.NETWORKDAYS.INTL;\nexports.NORMDIST = statistical.NORM.DIST;\nexports.NORMINV = statistical.NORM.INV;\nexports.NORMSDIST = statistical.NORM.S.DIST;\nexports.NORMSINV = statistical.NORM.S.INV;\nexports.PERCENTILE = set(statistical.PERCENTILE.EXC, statistical.PERCENTILE);\nexports.PERCENTILEEXC = statistical.PERCENTILE.EXC;\nexports.PERCENTILEINC = statistical.PERCENTILE.INC;\nexports.PERCENTRANK = set(statistical.PERCENTRANK.INC, statistical.PERCENTRANK);\nexports.PERCENTRANKEXC = statistical.PERCENTRANK.EXC;\nexports.PERCENTRANKINC = statistical.PERCENTRANK.INC;\nexports.POISSON = set(statistical.POISSON.DIST, statistical.POISSON);\nexports.POISSONDIST = statistical.POISSON.DIST;\nexports.QUARTILE = set(statistical.QUARTILE.INC, statistical.QUARTILE);\nexports.QUARTILEEXC = statistical.QUARTILE.EXC;\nexports.QUARTILEINC = statistical.QUARTILE.INC;\nexports.RANK = set(statistical.RANK.EQ, statistical.RANK);\nexports.RANKAVG = statistical.RANK.AVG;\nexports.RANKEQ = statistical.RANK.EQ;\nexports.SKEWP = statistical.SKEW.P;\nexports.STDEV = set(statistical.STDEV.S, statistical.STDEV);\nexports.STDEVP = statistical.STDEV.P;\nexports.STDEVS = statistical.STDEV.S;\nexports.TDIST = statistical.T.DIST;\nexports.TDISTRT = statistical.T.DIST.RT;\nexports.TINV = statistical.T.INV;\nexports.TTEST = statistical.T.TEST;\nexports.VAR = set(statistical.VAR.S, statistical.VAR);\nexports.VARP = statistical.VAR.P;\nexports.VARS = statistical.VAR.S;\nexports.WEIBULL = set(statistical.WEIBULL.DIST, statistical.WEIBULL);\nexports.WEIBULLDIST = statistical.WEIBULL.DIST;\nexports.WORKDAYINTL = dateTime.WORKDAY.INTL;\nexports.ZTEST = statistical.Z.TEST;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}