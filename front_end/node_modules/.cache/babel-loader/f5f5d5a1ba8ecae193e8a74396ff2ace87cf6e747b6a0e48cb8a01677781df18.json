{"ast":null,"code":"var utils = require('./utils/common');\nvar error = require('./utils/error');\nvar statistical = require('./statistical');\nvar information = require('./information');\nvar evalExpression = require('./utils/criteria-eval');\nexports.ABS = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.abs(number);\n  return result;\n};\nexports.ACOS = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.acos(number);\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.ACOSH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.log(number + Math.sqrt(number * number - 1));\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.ACOT = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.atan(1 / number);\n  return result;\n};\nexports.ACOTH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = 0.5 * Math.log((number + 1) / (number - 1));\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\n\n//TODO: use options\nexports.AGGREGATE = function (function_num, options, ref1, ref2) {\n  function_num = utils.parseNumber(function_num);\n  options = utils.parseNumber(function_num);\n  if (utils.anyIsError(function_num, options)) {\n    return error.value;\n  }\n  switch (function_num) {\n    case 1:\n      return statistical.AVERAGE(ref1);\n    case 2:\n      return statistical.COUNT(ref1);\n    case 3:\n      return statistical.COUNTA(ref1);\n    case 4:\n      return statistical.MAX(ref1);\n    case 5:\n      return statistical.MIN(ref1);\n    case 6:\n      return exports.PRODUCT(ref1);\n    case 7:\n      return statistical.STDEV.S(ref1);\n    case 8:\n      return statistical.STDEV.P(ref1);\n    case 9:\n      return exports.SUM(ref1);\n    case 10:\n      return statistical.VAR.S(ref1);\n    case 11:\n      return statistical.VAR.P(ref1);\n    case 12:\n      return statistical.MEDIAN(ref1);\n    case 13:\n      return statistical.MODE.SNGL(ref1);\n    case 14:\n      return statistical.LARGE(ref1, ref2);\n    case 15:\n      return statistical.SMALL(ref1, ref2);\n    case 16:\n      return statistical.PERCENTILE.INC(ref1, ref2);\n    case 17:\n      return statistical.QUARTILE.INC(ref1, ref2);\n    case 18:\n      return statistical.PERCENTILE.EXC(ref1, ref2);\n    case 19:\n      return statistical.QUARTILE.EXC(ref1, ref2);\n  }\n};\nexports.ARABIC = function (text) {\n  // Credits: Rafa? Kukawski\n  if (!/^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/.test(text)) {\n    return error.value;\n  }\n  var r = 0;\n  text.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g, function (i) {\n    r += {\n      M: 1000,\n      CM: 900,\n      D: 500,\n      CD: 400,\n      C: 100,\n      XC: 90,\n      L: 50,\n      XL: 40,\n      X: 10,\n      IX: 9,\n      V: 5,\n      IV: 4,\n      I: 1\n    }[i];\n  });\n  return r;\n};\nexports.ASIN = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.asin(number);\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.ASINH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.log(number + Math.sqrt(number * number + 1));\n};\nexports.ATAN = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.atan(number);\n};\nexports.ATAN2 = function (number_x, number_y) {\n  number_x = utils.parseNumber(number_x);\n  number_y = utils.parseNumber(number_y);\n  if (utils.anyIsError(number_x, number_y)) {\n    return error.value;\n  }\n  return Math.atan2(number_x, number_y);\n};\nexports.ATANH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.log((1 + number) / (1 - number)) / 2;\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.BASE = function (number, radix, min_length) {\n  min_length = min_length || 0;\n  number = utils.parseNumber(number);\n  radix = utils.parseNumber(radix);\n  min_length = utils.parseNumber(min_length);\n  if (utils.anyIsError(number, radix, min_length)) {\n    return error.value;\n  }\n  min_length = min_length === undefined ? 0 : min_length;\n  var result = number.toString(radix);\n  return new Array(Math.max(min_length + 1 - result.length, 0)).join('0') + result;\n};\nexports.CEILING = function (number, significance, mode) {\n  significance = significance === undefined ? 1 : Math.abs(significance);\n  mode = mode || 0;\n  number = utils.parseNumber(number);\n  significance = utils.parseNumber(significance);\n  mode = utils.parseNumber(mode);\n  if (utils.anyIsError(number, significance, mode)) {\n    return error.value;\n  }\n  if (significance === 0) {\n    return 0;\n  }\n  var precision = -Math.floor(Math.log(significance) / Math.log(10));\n  if (number >= 0) {\n    return exports.ROUND(Math.ceil(number / significance) * significance, precision);\n  } else {\n    if (mode === 0) {\n      return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);\n    } else {\n      return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);\n    }\n  }\n};\nexports.CEILING.MATH = exports.CEILING;\nexports.CEILING.PRECISE = exports.CEILING;\nexports.COMBIN = function (number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return exports.FACT(number) / (exports.FACT(number_chosen) * exports.FACT(number - number_chosen));\n};\nexports.COMBINA = function (number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return number === 0 && number_chosen === 0 ? 1 : exports.COMBIN(number + number_chosen - 1, number - 1);\n};\nexports.COS = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.cos(number);\n};\nexports.COSH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return (Math.exp(number) + Math.exp(-number)) / 2;\n};\nexports.COT = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 1 / Math.tan(number);\n};\nexports.COTH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var e2 = Math.exp(2 * number);\n  return (e2 + 1) / (e2 - 1);\n};\nexports.CSC = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 1 / Math.sin(number);\n};\nexports.CSCH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 2 / (Math.exp(number) - Math.exp(-number));\n};\nexports.DECIMAL = function (number, radix) {\n  if (arguments.length < 1) {\n    return error.value;\n  }\n  return parseInt(number, radix);\n};\nexports.DEGREES = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return number * 180 / Math.PI;\n};\nexports.EVEN = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return exports.CEILING(number, -2, -1);\n};\nexports.EXP = function (number) {\n  if (arguments.length < 1) {\n    return error.na;\n  }\n  if (typeof number !== 'number' || arguments.length > 1) {\n    return error.error;\n  }\n  number = Math.exp(number);\n  return number;\n};\nvar MEMOIZED_FACT = [];\nexports.FACT = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var n = Math.floor(number);\n  if (n === 0 || n === 1) {\n    return 1;\n  } else if (MEMOIZED_FACT[n] > 0) {\n    return MEMOIZED_FACT[n];\n  } else {\n    MEMOIZED_FACT[n] = exports.FACT(n - 1) * n;\n    return MEMOIZED_FACT[n];\n  }\n};\nexports.FACTDOUBLE = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var n = Math.floor(number);\n  if (n <= 0) {\n    return 1;\n  } else {\n    return n * exports.FACTDOUBLE(n - 2);\n  }\n};\nexports.FLOOR = function (number, significance) {\n  number = utils.parseNumber(number);\n  significance = utils.parseNumber(significance);\n  if (utils.anyIsError(number, significance)) {\n    return error.value;\n  }\n  if (significance === 0) {\n    return 0;\n  }\n  if (!(number > 0 && significance > 0) && !(number < 0 && significance < 0)) {\n    return error.num;\n  }\n  significance = Math.abs(significance);\n  var precision = -Math.floor(Math.log(significance) / Math.log(10));\n  if (number >= 0) {\n    return exports.ROUND(Math.floor(number / significance) * significance, precision);\n  } else {\n    return -exports.ROUND(Math.ceil(Math.abs(number) / significance), precision);\n  }\n};\n\n//TODO: Verify\nexports.FLOOR.MATH = function (number, significance, mode) {\n  significance = significance === undefined ? 1 : significance;\n  mode = mode === undefined ? 0 : mode;\n  number = utils.parseNumber(number);\n  significance = utils.parseNumber(significance);\n  mode = utils.parseNumber(mode);\n  if (utils.anyIsError(number, significance, mode)) {\n    return error.value;\n  }\n  if (significance === 0) {\n    return 0;\n  }\n  significance = significance ? Math.abs(significance) : 1;\n  var precision = -Math.floor(Math.log(significance) / Math.log(10));\n  if (number >= 0) {\n    return exports.ROUND(Math.floor(number / significance) * significance, precision);\n  } else if (mode === 0 || mode === undefined) {\n    return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);\n  }\n  return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);\n};\n\n// Deprecated\nexports.FLOOR.PRECISE = exports.FLOOR.MATH;\n\n// adapted http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript\nexports.GCD = function () {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var n = range.length;\n  var r0 = range[0];\n  var x = r0 < 0 ? -r0 : r0;\n  for (var i = 1; i < n; i++) {\n    var ri = range[i];\n    var y = ri < 0 ? -ri : ri;\n    while (x && y) {\n      if (x > y) {\n        x %= y;\n      } else {\n        y %= x;\n      }\n    }\n    x += y;\n  }\n  return x;\n};\nexports.INT = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.floor(number);\n};\n\n//TODO: verify\nexports.ISO = {\n  CEILING: exports.CEILING\n};\nexports.LCM = function () {\n  // Credits: Jonas Raoni Soares Silva\n  var o = utils.parseNumberArray(utils.flatten(arguments));\n  if (o instanceof Error) {\n    return o;\n  }\n  for (var i, j, n, d, r = 1; (n = o.pop()) !== undefined;) {\n    while (n > 1) {\n      if (n % 2) {\n        for (i = 3, j = Math.floor(Math.sqrt(n)); i <= j && n % i; i += 2) {\n          //empty\n        }\n        d = i <= j ? i : n;\n      } else {\n        d = 2;\n      }\n      for (n /= d, r *= d, i = o.length; i; o[--i] % d === 0 && (o[i] /= d) === 1 && o.splice(i, 1)) {\n        //empty\n      }\n    }\n  }\n  return r;\n};\nexports.LN = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.log(number);\n};\nexports.LN10 = function () {\n  return Math.log(10);\n};\nexports.LN2 = function () {\n  return Math.log(2);\n};\nexports.LOG10E = function () {\n  return Math.LOG10E;\n};\nexports.LOG2E = function () {\n  return Math.LOG2E;\n};\nexports.LOG = function (number, base) {\n  number = utils.parseNumber(number);\n  base = utils.parseNumber(base);\n  if (utils.anyIsError(number, base)) {\n    return error.value;\n  }\n  base = base === undefined ? 10 : base;\n  return Math.log(number) / Math.log(base);\n};\nexports.LOG10 = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.log(number) / Math.log(10);\n};\nexports.MOD = function (dividend, divisor) {\n  dividend = utils.parseNumber(dividend);\n  divisor = utils.parseNumber(divisor);\n  if (utils.anyIsError(dividend, divisor)) {\n    return error.value;\n  }\n  if (divisor === 0) {\n    return error.div0;\n  }\n  var modulus = Math.abs(dividend % divisor);\n  return divisor > 0 ? modulus : -modulus;\n};\nexports.MROUND = function (number, multiple) {\n  number = utils.parseNumber(number);\n  multiple = utils.parseNumber(multiple);\n  if (utils.anyIsError(number, multiple)) {\n    return error.value;\n  }\n  if (number * multiple < 0) {\n    return error.num;\n  }\n  return Math.round(number / multiple) * multiple;\n};\nexports.MULTINOMIAL = function () {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n  var sum = 0;\n  var divisor = 1;\n  for (var i = 0; i < args.length; i++) {\n    sum += args[i];\n    divisor *= exports.FACT(args[i]);\n  }\n  return exports.FACT(sum) / divisor;\n};\nexports.ODD = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var temp = Math.ceil(Math.abs(number));\n  temp = temp & 1 ? temp : temp + 1;\n  return number > 0 ? temp : -temp;\n};\nexports.PI = function () {\n  return Math.PI;\n};\nexports.E = function () {\n  return Math.E;\n};\nexports.POWER = function (number, power) {\n  number = utils.parseNumber(number);\n  power = utils.parseNumber(power);\n  if (utils.anyIsError(number, power)) {\n    return error.value;\n  }\n  var result = Math.pow(number, power);\n  if (isNaN(result)) {\n    return error.num;\n  }\n  return result;\n};\nexports.PRODUCT = function () {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n  var result = 1;\n  for (var i = 0; i < args.length; i++) {\n    result *= args[i];\n  }\n  return result;\n};\nexports.QUOTIENT = function (numerator, denominator) {\n  numerator = utils.parseNumber(numerator);\n  denominator = utils.parseNumber(denominator);\n  if (utils.anyIsError(numerator, denominator)) {\n    return error.value;\n  }\n  return parseInt(numerator / denominator, 10);\n};\nexports.RADIANS = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return number * Math.PI / 180;\n};\nexports.RAND = function () {\n  return Math.random();\n};\nexports.RANDBETWEEN = function (bottom, top) {\n  bottom = utils.parseNumber(bottom);\n  top = utils.parseNumber(top);\n  if (utils.anyIsError(bottom, top)) {\n    return error.value;\n  }\n  // Creative Commons Attribution 3.0 License\n  // Copyright (c) 2012 eqcode\n  return bottom + Math.ceil((top - bottom + 1) * Math.random()) - 1;\n};\n\n// TODO\nexports.ROMAN = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  // The MIT License\n  // Copyright (c) 2008 Steven Levithan\n  var digits = String(number).split('');\n  var key = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  var roman = '';\n  var i = 3;\n  while (i--) {\n    roman = (key[+digits.pop() + i * 10] || '') + roman;\n  }\n  return new Array(+digits.join('') + 1).join('M') + roman;\n};\nexports.ROUND = function (number, digits) {\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  return Math.round(number * Math.pow(10, digits)) / Math.pow(10, digits);\n};\nexports.ROUNDDOWN = function (number, digits) {\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  var sign = number > 0 ? 1 : -1;\n  return sign * Math.floor(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n};\nexports.ROUNDUP = function (number, digits) {\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  var sign = number > 0 ? 1 : -1;\n  return sign * Math.ceil(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n};\nexports.SEC = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 1 / Math.cos(number);\n};\nexports.SECH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 2 / (Math.exp(number) + Math.exp(-number));\n};\nexports.SERIESSUM = function (x, n, m, coefficients) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  m = utils.parseNumber(m);\n  coefficients = utils.parseNumberArray(coefficients);\n  if (utils.anyIsError(x, n, m, coefficients)) {\n    return error.value;\n  }\n  var result = coefficients[0] * Math.pow(x, n);\n  for (var i = 1; i < coefficients.length; i++) {\n    result += coefficients[i] * Math.pow(x, n + i * m);\n  }\n  return result;\n};\nexports.SIGN = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  if (number < 0) {\n    return -1;\n  } else if (number === 0) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\nexports.SIN = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.sin(number);\n};\nexports.SINH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return (Math.exp(number) - Math.exp(-number)) / 2;\n};\nexports.SQRT = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  if (number < 0) {\n    return error.num;\n  }\n  return Math.sqrt(number);\n};\nexports.SQRTPI = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.sqrt(number * Math.PI);\n};\nexports.SQRT1_2 = function () {\n  return 1 / Math.sqrt(2);\n};\nexports.SQRT2 = function () {\n  return Math.sqrt(2);\n};\nexports.SUBTOTAL = function (function_code, ref1) {\n  function_code = utils.parseNumber(function_code);\n  if (function_code instanceof Error) {\n    return function_code;\n  }\n  switch (function_code) {\n    case 1:\n      return statistical.AVERAGE(ref1);\n    case 2:\n      return statistical.COUNT(ref1);\n    case 3:\n      return statistical.COUNTA(ref1);\n    case 4:\n      return statistical.MAX(ref1);\n    case 5:\n      return statistical.MIN(ref1);\n    case 6:\n      return exports.PRODUCT(ref1);\n    case 7:\n      return statistical.STDEV.S(ref1);\n    case 8:\n      return statistical.STDEV.P(ref1);\n    case 9:\n      return exports.SUM(ref1);\n    case 10:\n      return statistical.VAR.S(ref1);\n    case 11:\n      return statistical.VAR.P(ref1);\n    // no hidden values for us\n    case 101:\n      return statistical.AVERAGE(ref1);\n    case 102:\n      return statistical.COUNT(ref1);\n    case 103:\n      return statistical.COUNTA(ref1);\n    case 104:\n      return statistical.MAX(ref1);\n    case 105:\n      return statistical.MIN(ref1);\n    case 106:\n      return exports.PRODUCT(ref1);\n    case 107:\n      return statistical.STDEV.S(ref1);\n    case 108:\n      return statistical.STDEV.P(ref1);\n    case 109:\n      return exports.SUM(ref1);\n    case 110:\n      return statistical.VAR.S(ref1);\n    case 111:\n      return statistical.VAR.P(ref1);\n  }\n};\nexports.ADD = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.value;\n  }\n  return num1 + num2;\n};\nexports.MINUS = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.value;\n  }\n  return num1 - num2;\n};\nexports.DIVIDE = function (dividend, divisor) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  dividend = utils.parseNumber(dividend);\n  divisor = utils.parseNumber(divisor);\n  if (utils.anyIsError(dividend, divisor)) {\n    return error.value;\n  }\n  if (divisor === 0) {\n    return error.div0;\n  }\n  return dividend / divisor;\n};\nexports.MULTIPLY = function (factor1, factor2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  factor1 = utils.parseNumber(factor1);\n  factor2 = utils.parseNumber(factor2);\n  if (utils.anyIsError(factor1, factor2)) {\n    return error.value;\n  }\n  return factor1 * factor2;\n};\nexports.GTE = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.error;\n  }\n  return num1 >= num2;\n};\nexports.LT = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.error;\n  }\n  return num1 < num2;\n};\nexports.LTE = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.error;\n  }\n  return num1 <= num2;\n};\nexports.EQ = function (value1, value2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  return value1 === value2;\n};\nexports.NE = function (value1, value2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  return value1 !== value2;\n};\nexports.POW = function (base, exponent) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  base = utils.parseNumber(base);\n  exponent = utils.parseNumber(exponent);\n  if (utils.anyIsError(base, exponent)) {\n    return error.error;\n  }\n  return exports.POWER(base, exponent);\n};\nexports.SUM = function () {\n  var result = 0;\n  utils.arrayEach(utils.argsToArray(arguments), function (value) {\n    if (typeof value === 'number') {\n      result += value;\n    } else if (typeof value === 'string') {\n      var parsed = parseFloat(value);\n      !isNaN(parsed) && (result += parsed);\n    } else if (Array.isArray(value)) {\n      result += exports.SUM.apply(null, value);\n    }\n  });\n  return result;\n};\nexports.SUMIF = function (range, criteria) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  if (range instanceof Error) {\n    return range;\n  }\n  var result = 0;\n  var isWildcard = criteria === void 0 || criteria === '*';\n  var tokenizedCriteria = isWildcard ? null : evalExpression.parse(criteria + '');\n  for (var i = 0; i < range.length; i++) {\n    var value = range[i];\n    if (isWildcard) {\n      result += value;\n    } else {\n      var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n      result += evalExpression.compute(tokens) ? value : 0;\n    }\n  }\n  return result;\n};\nexports.SUMIFS = function () {\n  var args = utils.argsToArray(arguments);\n  var range = utils.parseNumberArray(utils.flatten(args.shift()));\n  if (range instanceof Error) {\n    return range;\n  }\n  var criterias = args;\n  var n_range_elements = range.length;\n  var criteriaLength = criterias.length;\n  var result = 0;\n  for (var i = 0; i < n_range_elements; i++) {\n    var value = range[i];\n    var isMeetCondition = false;\n    for (var j = 0; j < criteriaLength; j++) {\n      var criteria = criterias[j];\n      var isWildcard = criteria === void 0 || criteria === '*';\n      var computedResult = false;\n      if (isWildcard) {\n        computedResult = true;\n      } else {\n        var tokenizedCriteria = evalExpression.parse(criteria + '');\n        var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n        computedResult = evalExpression.compute(tokens);\n      }\n\n      // Criterias are calculated as AND so any `false` breakes the loop as unmeet condition\n      if (!computedResult) {\n        isMeetCondition = false;\n        break;\n      }\n      isMeetCondition = true;\n    }\n    if (isMeetCondition) {\n      result += value;\n    }\n  }\n  return result;\n};\nexports.SUMPRODUCT = function () {\n  if (!arguments || arguments.length === 0) {\n    return error.value;\n  }\n  var arrays = arguments.length + 1;\n  var result = 0;\n  var product;\n  var k;\n  var _i;\n  var _ij;\n  for (var i = 0; i < arguments[0].length; i++) {\n    if (!(arguments[0][i] instanceof Array)) {\n      product = 1;\n      for (k = 1; k < arrays; k++) {\n        _i = utils.parseNumber(arguments[k - 1][i]);\n        if (_i instanceof Error) {\n          return _i;\n        }\n        product *= _i;\n      }\n      result += product;\n    } else {\n      for (var j = 0; j < arguments[0][i].length; j++) {\n        product = 1;\n        for (k = 1; k < arrays; k++) {\n          _ij = utils.parseNumber(arguments[k - 1][i][j]);\n          if (_ij instanceof Error) {\n            return _ij;\n          }\n          product *= _ij;\n        }\n        result += product;\n      }\n    }\n  }\n  return result;\n};\nexports.SUMSQ = function () {\n  var numbers = utils.parseNumberArray(utils.flatten(arguments));\n  if (numbers instanceof Error) {\n    return numbers;\n  }\n  var result = 0;\n  var length = numbers.length;\n  for (var i = 0; i < length; i++) {\n    result += information.ISNUMBER(numbers[i]) ? numbers[i] * numbers[i] : 0;\n  }\n  return result;\n};\nexports.SUMX2MY2 = function (array_x, array_y) {\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  if (utils.anyIsError(array_x, array_y)) {\n    return error.value;\n  }\n  var result = 0;\n  for (var i = 0; i < array_x.length; i++) {\n    result += array_x[i] * array_x[i] - array_y[i] * array_y[i];\n  }\n  return result;\n};\nexports.SUMX2PY2 = function (array_x, array_y) {\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  if (utils.anyIsError(array_x, array_y)) {\n    return error.value;\n  }\n  var result = 0;\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  for (var i = 0; i < array_x.length; i++) {\n    result += array_x[i] * array_x[i] + array_y[i] * array_y[i];\n  }\n  return result;\n};\nexports.SUMXMY2 = function (array_x, array_y) {\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  if (utils.anyIsError(array_x, array_y)) {\n    return error.value;\n  }\n  var result = 0;\n  array_x = utils.flatten(array_x);\n  array_y = utils.flatten(array_y);\n  for (var i = 0; i < array_x.length; i++) {\n    result += Math.pow(array_x[i] - array_y[i], 2);\n  }\n  return result;\n};\nexports.TAN = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.tan(number);\n};\nexports.TANH = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var e2 = Math.exp(2 * number);\n  return (e2 - 1) / (e2 + 1);\n};\nexports.TRUNC = function (number, digits) {\n  digits = digits === undefined ? 0 : digits;\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  var sign = number > 0 ? 1 : -1;\n  return sign * Math.floor(Math.abs(number) * Math.pow(10, digits)) / Math.pow(10, digits);\n};","map":{"version":3,"names":["utils","require","error","statistical","information","evalExpression","exports","ABS","number","parseNumber","Error","result","Math","abs","ACOS","acos","isNaN","num","ACOSH","log","sqrt","ACOT","atan","ACOTH","AGGREGATE","function_num","options","ref1","ref2","anyIsError","value","AVERAGE","COUNT","COUNTA","MAX","MIN","PRODUCT","STDEV","S","P","SUM","VAR","MEDIAN","MODE","SNGL","LARGE","SMALL","PERCENTILE","INC","QUARTILE","EXC","ARABIC","text","test","r","replace","i","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","ASIN","asin","ASINH","ATAN","ATAN2","number_x","number_y","atan2","ATANH","BASE","radix","min_length","undefined","toString","Array","max","length","join","CEILING","significance","mode","precision","floor","ROUND","ceil","MATH","PRECISE","COMBIN","number_chosen","FACT","COMBINA","COS","cos","COSH","exp","COT","tan","COTH","e2","CSC","sin","CSCH","DECIMAL","arguments","parseInt","DEGREES","PI","EVEN","EXP","na","MEMOIZED_FACT","n","FACTDOUBLE","FLOOR","GCD","range","parseNumberArray","flatten","r0","x","ri","y","INT","ISO","LCM","o","j","d","pop","splice","LN","LN10","LN2","LOG10E","LOG2E","LOG","base","LOG10","MOD","dividend","divisor","div0","modulus","MROUND","multiple","round","MULTINOMIAL","args","sum","ODD","temp","E","POWER","power","pow","QUOTIENT","numerator","denominator","RADIANS","RAND","random","RANDBETWEEN","bottom","top","ROMAN","digits","String","split","key","roman","ROUNDDOWN","sign","ROUNDUP","SEC","SECH","SERIESSUM","m","coefficients","SIGN","SIN","SINH","SQRT","SQRTPI","SQRT1_2","SQRT2","SUBTOTAL","function_code","ADD","num1","num2","MINUS","DIVIDE","MULTIPLY","factor1","factor2","GTE","LT","LTE","EQ","value1","value2","NE","POW","exponent","arrayEach","argsToArray","parsed","parseFloat","isArray","apply","SUMIF","criteria","isWildcard","tokenizedCriteria","parse","tokens","createToken","TOKEN_TYPE_LITERAL","concat","compute","SUMIFS","shift","criterias","n_range_elements","criteriaLength","isMeetCondition","computedResult","SUMPRODUCT","arrays","product","k","_i","_ij","SUMSQ","numbers","ISNUMBER","SUMX2MY2","array_x","array_y","SUMX2PY2","SUMXMY2","TAN","TANH","TRUNC"],"sources":["D:/WebNodeJs/node18/trelo_project/front_end/node_modules/@handsontable/formulajs/lib/math-trig.js"],"sourcesContent":["var utils = require('./utils/common');\nvar error = require('./utils/error');\nvar statistical = require('./statistical');\nvar information = require('./information');\nvar evalExpression = require('./utils/criteria-eval');\n\nexports.ABS = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.abs(number);\n\n  return result;\n};\n\nexports.ACOS = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.acos(number);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.ACOSH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.log(number + Math.sqrt(number * number - 1));\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.ACOT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.atan(1 / number);\n\n  return result;\n};\n\nexports.ACOTH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = 0.5 * Math.log((number + 1) / (number - 1));\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\n//TODO: use options\nexports.AGGREGATE = function(function_num, options, ref1, ref2) {\n  function_num = utils.parseNumber(function_num);\n  options = utils.parseNumber(function_num);\n  if (utils.anyIsError(function_num, options)) {\n    return error.value;\n  }\n  switch (function_num) {\n    case 1:\n      return statistical.AVERAGE(ref1);\n    case 2:\n      return statistical.COUNT(ref1);\n    case 3:\n      return statistical.COUNTA(ref1);\n    case 4:\n      return statistical.MAX(ref1);\n    case 5:\n      return statistical.MIN(ref1);\n    case 6:\n      return exports.PRODUCT(ref1);\n    case 7:\n      return statistical.STDEV.S(ref1);\n    case 8:\n      return statistical.STDEV.P(ref1);\n    case 9:\n      return exports.SUM(ref1);\n    case 10:\n      return statistical.VAR.S(ref1);\n    case 11:\n      return statistical.VAR.P(ref1);\n    case 12:\n      return statistical.MEDIAN(ref1);\n    case 13:\n      return statistical.MODE.SNGL(ref1);\n    case 14:\n      return statistical.LARGE(ref1, ref2);\n    case 15:\n      return statistical.SMALL(ref1, ref2);\n    case 16:\n      return statistical.PERCENTILE.INC(ref1, ref2);\n    case 17:\n      return statistical.QUARTILE.INC(ref1, ref2);\n    case 18:\n      return statistical.PERCENTILE.EXC(ref1, ref2);\n    case 19:\n      return statistical.QUARTILE.EXC(ref1, ref2);\n  }\n};\n\nexports.ARABIC = function(text) {\n  // Credits: Rafa? Kukawski\n  if (!/^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/.test(text)) {\n    return error.value;\n  }\n  var r = 0;\n  text.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g, function(i) {\n    r += {\n      M: 1000,\n      CM: 900,\n      D: 500,\n      CD: 400,\n      C: 100,\n      XC: 90,\n      L: 50,\n      XL: 40,\n      X: 10,\n      IX: 9,\n      V: 5,\n      IV: 4,\n      I: 1\n    }[i];\n  });\n  return r;\n};\n\nexports.ASIN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.asin(number);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.ASINH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.log(number + Math.sqrt(number * number + 1));\n};\n\nexports.ATAN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.atan(number);\n};\n\nexports.ATAN2 = function(number_x, number_y) {\n  number_x = utils.parseNumber(number_x);\n  number_y = utils.parseNumber(number_y);\n  if (utils.anyIsError(number_x, number_y)) {\n    return error.value;\n  }\n  return Math.atan2(number_x, number_y);\n};\n\nexports.ATANH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var result = Math.log((1 + number) / (1 - number)) / 2;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.BASE = function(number, radix, min_length) {\n  min_length = min_length || 0;\n\n  number = utils.parseNumber(number);\n  radix = utils.parseNumber(radix);\n  min_length = utils.parseNumber(min_length);\n  if (utils.anyIsError(number, radix, min_length)) {\n    return error.value;\n  }\n  min_length = (min_length === undefined) ? 0 : min_length;\n  var result = number.toString(radix);\n  return new Array(Math.max(min_length + 1 - result.length, 0)).join('0') + result;\n};\n\nexports.CEILING = function(number, significance, mode) {\n  significance = (significance === undefined) ? 1 : Math.abs(significance);\n  mode = mode || 0;\n\n  number = utils.parseNumber(number);\n  significance = utils.parseNumber(significance);\n  mode = utils.parseNumber(mode);\n  if (utils.anyIsError(number, significance, mode)) {\n    return error.value;\n  }\n  if (significance === 0) {\n    return 0;\n  }\n  var precision = -Math.floor(Math.log(significance) / Math.log(10));\n  if (number >= 0) {\n    return exports.ROUND(Math.ceil(number / significance) * significance, precision);\n  } else {\n    if (mode === 0) {\n      return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);\n    } else {\n      return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);\n    }\n  }\n};\n\nexports.CEILING.MATH = exports.CEILING;\n\nexports.CEILING.PRECISE = exports.CEILING;\n\nexports.COMBIN = function(number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return exports.FACT(number) / (exports.FACT(number_chosen) * exports.FACT(number - number_chosen));\n};\n\nexports.COMBINA = function(number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return (number === 0 && number_chosen === 0) ? 1 : exports.COMBIN(number + number_chosen - 1, number - 1);\n};\n\nexports.COS = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.cos(number);\n};\n\nexports.COSH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return (Math.exp(number) + Math.exp(-number)) / 2;\n};\n\nexports.COT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 1 / Math.tan(number);\n};\n\nexports.COTH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var e2 = Math.exp(2 * number);\n  return (e2 + 1) / (e2 - 1);\n};\n\nexports.CSC = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 1 / Math.sin(number);\n};\n\nexports.CSCH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 2 / (Math.exp(number) - Math.exp(-number));\n};\n\nexports.DECIMAL = function(number, radix) {\n  if (arguments.length < 1) {\n    return error.value;\n  }\n\n  return parseInt(number, radix);\n};\n\nexports.DEGREES = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return number * 180 / Math.PI;\n};\n\nexports.EVEN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return exports.CEILING(number, -2, -1);\n};\n\nexports.EXP = function(number) {\n  if (arguments.length < 1) {\n    return error.na;\n  }\n  if (typeof number !== 'number' || arguments.length > 1) {\n    return error.error;\n  }\n\n  number = Math.exp(number);\n\n  return number;\n};\n\nvar MEMOIZED_FACT = [];\nexports.FACT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var n = Math.floor(number);\n  if (n === 0 || n === 1) {\n    return 1;\n  } else if (MEMOIZED_FACT[n] > 0) {\n    return MEMOIZED_FACT[n];\n  } else {\n    MEMOIZED_FACT[n] = exports.FACT(n - 1) * n;\n    return MEMOIZED_FACT[n];\n  }\n};\n\nexports.FACTDOUBLE = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var n = Math.floor(number);\n  if (n <= 0) {\n    return 1;\n  } else {\n    return n * exports.FACTDOUBLE(n - 2);\n  }\n};\n\nexports.FLOOR = function(number, significance) {\n  number = utils.parseNumber(number);\n  significance = utils.parseNumber(significance);\n  if (utils.anyIsError(number, significance)) {\n    return error.value;\n  }\n  if (significance === 0) {\n    return 0;\n  }\n\n  if (!(number > 0 && significance > 0) && !(number < 0 && significance < 0)) {\n    return error.num;\n  }\n\n  significance = Math.abs(significance);\n  var precision = -Math.floor(Math.log(significance) / Math.log(10));\n  if (number >= 0) {\n    return exports.ROUND(Math.floor(number / significance) * significance, precision);\n  } else {\n    return -exports.ROUND(Math.ceil(Math.abs(number) / significance), precision);\n  }\n};\n\n//TODO: Verify\nexports.FLOOR.MATH = function(number, significance, mode) {\n  significance = (significance === undefined) ? 1 : significance;\n  mode = (mode === undefined) ? 0 : mode;\n\n  number = utils.parseNumber(number);\n  significance = utils.parseNumber(significance);\n  mode = utils.parseNumber(mode);\n  if (utils.anyIsError(number, significance, mode)) {\n    return error.value;\n  }\n  if (significance === 0) {\n    return 0;\n  }\n\n  significance = significance ? Math.abs(significance) : 1;\n  var precision = -Math.floor(Math.log(significance) / Math.log(10));\n  if (number >= 0) {\n    return exports.ROUND(Math.floor(number / significance) * significance, precision);\n  } else if (mode === 0 || mode === undefined) {\n    return -exports.ROUND(Math.ceil(Math.abs(number) / significance) * significance, precision);\n  }\n  return -exports.ROUND(Math.floor(Math.abs(number) / significance) * significance, precision);\n};\n\n// Deprecated\nexports.FLOOR.PRECISE = exports.FLOOR.MATH;\n\n// adapted http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript\nexports.GCD = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var n = range.length;\n  var r0 = range[0];\n  var x = r0 < 0 ? -r0 : r0;\n  for (var i = 1; i < n; i++) {\n    var ri = range[i];\n    var y = ri < 0 ? -ri : ri;\n    while (x && y) {\n      if (x > y) {\n        x %= y;\n      } else {\n        y %= x;\n      }\n    }\n    x += y;\n  }\n  return x;\n};\n\n\nexports.INT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.floor(number);\n};\n\n//TODO: verify\nexports.ISO = {\n  CEILING: exports.CEILING\n};\n\nexports.LCM = function() {\n  // Credits: Jonas Raoni Soares Silva\n  var o = utils.parseNumberArray(utils.flatten(arguments));\n  if (o instanceof Error) {\n    return o;\n  }\n  for (var i, j, n, d, r = 1;\n       (n = o.pop()) !== undefined;) {\n    while (n > 1) {\n      if (n % 2) {\n        for (i = 3, j = Math.floor(Math.sqrt(n)); i <= j && n % i; i += 2) {\n          //empty\n        }\n        d = (i <= j) ? i : n;\n      } else {\n        d = 2;\n      }\n      for (n /= d, r *= d, i = o.length; i;\n           (o[--i] % d) === 0 && (o[i] /= d) === 1 && o.splice(i, 1)) {\n        //empty\n      }\n    }\n  }\n  return r;\n};\n\nexports.LN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.log(number);\n};\n\nexports.LN10 = function() {\n  return Math.log(10);\n};\n\nexports.LN2 = function() {\n  return Math.log(2);\n};\n\nexports.LOG10E = function() {\n  return Math.LOG10E;\n};\n\nexports.LOG2E = function() {\n  return Math.LOG2E;\n};\n\nexports.LOG = function(number, base) {\n  number = utils.parseNumber(number);\n  base = utils.parseNumber(base);\n  if (utils.anyIsError(number, base)) {\n    return error.value;\n  }\n  base = (base === undefined) ? 10 : base;\n  return Math.log(number) / Math.log(base);\n};\n\nexports.LOG10 = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.log(number) / Math.log(10);\n};\n\nexports.MOD = function(dividend, divisor) {\n  dividend = utils.parseNumber(dividend);\n  divisor = utils.parseNumber(divisor);\n  if (utils.anyIsError(dividend, divisor)) {\n    return error.value;\n  }\n  if (divisor === 0) {\n    return error.div0;\n  }\n  var modulus = Math.abs(dividend % divisor);\n  return (divisor > 0) ? modulus : -modulus;\n};\n\nexports.MROUND = function(number, multiple) {\n  number = utils.parseNumber(number);\n  multiple = utils.parseNumber(multiple);\n  if (utils.anyIsError(number, multiple)) {\n    return error.value;\n  }\n  if (number * multiple < 0) {\n    return error.num;\n  }\n\n  return Math.round(number / multiple) * multiple;\n};\n\nexports.MULTINOMIAL = function() {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n  var sum = 0;\n  var divisor = 1;\n  for (var i = 0; i < args.length; i++) {\n    sum += args[i];\n    divisor *= exports.FACT(args[i]);\n  }\n  return exports.FACT(sum) / divisor;\n};\n\nexports.ODD = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var temp = Math.ceil(Math.abs(number));\n  temp = (temp & 1) ? temp : temp + 1;\n  return (number > 0) ? temp : -temp;\n};\n\nexports.PI = function() {\n  return Math.PI;\n};\n\nexports.E = function() {\n  return Math.E;\n};\n\nexports.POWER = function(number, power) {\n  number = utils.parseNumber(number);\n  power = utils.parseNumber(power);\n  if (utils.anyIsError(number, power)) {\n    return error.value;\n  }\n  var result = Math.pow(number, power);\n  if (isNaN(result)) {\n    return error.num;\n  }\n\n  return result;\n};\n\nexports.PRODUCT = function() {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n  var result = 1;\n  for (var i = 0; i < args.length; i++) {\n    result *= args[i];\n  }\n  return result;\n};\n\nexports.QUOTIENT = function(numerator, denominator) {\n  numerator = utils.parseNumber(numerator);\n  denominator = utils.parseNumber(denominator);\n  if (utils.anyIsError(numerator, denominator)) {\n    return error.value;\n  }\n  return parseInt(numerator / denominator, 10);\n};\n\nexports.RADIANS = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return number * Math.PI / 180;\n};\n\nexports.RAND = function() {\n  return Math.random();\n};\n\nexports.RANDBETWEEN = function(bottom, top) {\n  bottom = utils.parseNumber(bottom);\n  top = utils.parseNumber(top);\n  if (utils.anyIsError(bottom, top)) {\n    return error.value;\n  }\n  // Creative Commons Attribution 3.0 License\n  // Copyright (c) 2012 eqcode\n  return bottom + Math.ceil((top - bottom + 1) * Math.random()) - 1;\n};\n\n// TODO\nexports.ROMAN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  // The MIT License\n  // Copyright (c) 2008 Steven Levithan\n  var digits = String(number).split('');\n  var key = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  var roman = '';\n  var i = 3;\n  while (i--) {\n    roman = (key[+digits.pop() + (i * 10)] || '') + roman;\n  }\n  return new Array(+digits.join('') + 1).join('M') + roman;\n};\n\nexports.ROUND = function(number, digits) {\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  return Math.round(number * Math.pow(10, digits)) / Math.pow(10, digits);\n};\n\nexports.ROUNDDOWN = function(number, digits) {\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  var sign = (number > 0) ? 1 : -1;\n  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);\n};\n\nexports.ROUNDUP = function(number, digits) {\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  var sign = (number > 0) ? 1 : -1;\n  return sign * (Math.ceil(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);\n};\n\nexports.SEC = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 1 / Math.cos(number);\n};\n\nexports.SECH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return 2 / (Math.exp(number) + Math.exp(-number));\n};\n\nexports.SERIESSUM = function(x, n, m, coefficients) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  m = utils.parseNumber(m);\n  coefficients = utils.parseNumberArray(coefficients);\n  if (utils.anyIsError(x, n, m, coefficients)) {\n    return error.value;\n  }\n  var result = coefficients[0] * Math.pow(x, n);\n  for (var i = 1; i < coefficients.length; i++) {\n    result += coefficients[i] * Math.pow(x, n + i * m);\n  }\n  return result;\n};\n\nexports.SIGN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  if (number < 0) {\n    return -1;\n  } else if (number === 0) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\n\nexports.SIN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.sin(number);\n};\n\nexports.SINH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return (Math.exp(number) - Math.exp(-number)) / 2;\n};\n\nexports.SQRT = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  if (number < 0) {\n    return error.num;\n  }\n  return Math.sqrt(number);\n};\n\nexports.SQRTPI = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.sqrt(number * Math.PI);\n};\n\nexports.SQRT1_2 = function() {\n  return 1 / Math.sqrt(2);\n};\n\nexports.SQRT2 = function() {\n  return Math.sqrt(2);\n};\n\nexports.SUBTOTAL = function(function_code, ref1) {\n  function_code = utils.parseNumber(function_code);\n  if (function_code instanceof Error) {\n    return function_code;\n  }\n  switch (function_code) {\n    case 1:\n      return statistical.AVERAGE(ref1);\n    case 2:\n      return statistical.COUNT(ref1);\n    case 3:\n      return statistical.COUNTA(ref1);\n    case 4:\n      return statistical.MAX(ref1);\n    case 5:\n      return statistical.MIN(ref1);\n    case 6:\n      return exports.PRODUCT(ref1);\n    case 7:\n      return statistical.STDEV.S(ref1);\n    case 8:\n      return statistical.STDEV.P(ref1);\n    case 9:\n      return exports.SUM(ref1);\n    case 10:\n      return statistical.VAR.S(ref1);\n    case 11:\n      return statistical.VAR.P(ref1);\n    // no hidden values for us\n    case 101:\n      return statistical.AVERAGE(ref1);\n    case 102:\n      return statistical.COUNT(ref1);\n    case 103:\n      return statistical.COUNTA(ref1);\n    case 104:\n      return statistical.MAX(ref1);\n    case 105:\n      return statistical.MIN(ref1);\n    case 106:\n      return exports.PRODUCT(ref1);\n    case 107:\n      return statistical.STDEV.S(ref1);\n    case 108:\n      return statistical.STDEV.P(ref1);\n    case 109:\n      return exports.SUM(ref1);\n    case 110:\n      return statistical.VAR.S(ref1);\n    case 111:\n      return statistical.VAR.P(ref1);\n\n  }\n};\n\nexports.ADD = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.value;\n  }\n\n  return num1 + num2;\n};\n\nexports.MINUS = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.value;\n  }\n\n  return num1 - num2;\n};\n\nexports.DIVIDE = function (dividend, divisor) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  dividend = utils.parseNumber(dividend);\n  divisor = utils.parseNumber(divisor);\n  if (utils.anyIsError(dividend, divisor)) {\n    return error.value;\n  }\n\n  if (divisor === 0) {\n    return error.div0;\n  }\n\n  return dividend / divisor;\n};\n\nexports.MULTIPLY = function (factor1, factor2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  factor1 = utils.parseNumber(factor1);\n  factor2 = utils.parseNumber(factor2);\n  if (utils.anyIsError(factor1, factor2)) {\n    return error.value;\n  }\n\n  return factor1 * factor2;\n};\n\nexports.GTE = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.error;\n  }\n\n  return num1 >= num2;\n};\n\nexports.LT = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.error;\n  }\n\n  return num1 < num2;\n};\n\n\nexports.LTE = function (num1, num2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  num1 = utils.parseNumber(num1);\n  num2 = utils.parseNumber(num2);\n  if (utils.anyIsError(num1, num2)) {\n    return error.error;\n  }\n\n  return num1 <= num2;\n};\n\nexports.EQ = function (value1, value2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  return value1 === value2;\n};\n\nexports.NE = function (value1, value2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  return value1 !== value2;\n};\n\nexports.POW = function (base, exponent) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  base = utils.parseNumber(base);\n  exponent = utils.parseNumber(exponent);\n  if (utils.anyIsError(base, exponent)) {\n    return error.error;\n  }\n\n  return exports.POWER(base, exponent);\n};\n\nexports.SUM = function() {\n  var result = 0;\n\n  utils.arrayEach(utils.argsToArray(arguments), function(value) {\n    if (typeof value === 'number') {\n      result += value;\n\n    } else if (typeof value === 'string') {\n      var parsed = parseFloat(value);\n\n      !isNaN(parsed) && (result += parsed);\n\n    } else if (Array.isArray(value)) {\n      result += exports.SUM.apply(null, value);\n    }\n  });\n\n  return result;\n};\n\nexports.SUMIF = function(range, criteria) {\n  range = utils.parseNumberArray(utils.flatten(range));\n\n  if (range instanceof Error) {\n    return range;\n  }\n  var result = 0;\n  var isWildcard = criteria === void 0 || criteria === '*';\n  var tokenizedCriteria = isWildcard ? null : evalExpression.parse(criteria + '');\n\n  for (var i = 0; i < range.length; i++) {\n    var value = range[i];\n\n    if (isWildcard) {\n      result += value;\n    } else {\n      var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n      result += (evalExpression.compute(tokens) ? value : 0);\n    }\n  }\n\n  return result;\n};\n\nexports.SUMIFS = function() {\n  var args = utils.argsToArray(arguments);\n  var range = utils.parseNumberArray(utils.flatten(args.shift()));\n\n  if (range instanceof Error) {\n    return range;\n  }\n  var criterias = args;\n  var n_range_elements = range.length;\n  var criteriaLength = criterias.length;\n  var result = 0;\n\n  for (var i = 0; i < n_range_elements; i++) {\n    var value = range[i];\n    var isMeetCondition = false;\n\n    for (var j = 0; j < criteriaLength; j++) {\n      var criteria = criterias[j];\n      var isWildcard = criteria === void 0 || criteria === '*';\n      var computedResult = false;\n\n      if (isWildcard) {\n        computedResult = true;\n      } else {\n        var tokenizedCriteria = evalExpression.parse(criteria + '');\n        var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n        computedResult = evalExpression.compute(tokens);\n      }\n\n      // Criterias are calculated as AND so any `false` breakes the loop as unmeet condition\n      if (!computedResult) {\n        isMeetCondition = false;\n        break;\n      }\n\n      isMeetCondition = true;\n    }\n\n    if (isMeetCondition) {\n      result += value;\n    }\n  }\n\n  return result;\n};\n\nexports.SUMPRODUCT = function() {\n  if (!arguments || arguments.length === 0) {\n    return error.value;\n  }\n  var arrays = arguments.length + 1;\n  var result = 0;\n  var product;\n  var k;\n  var _i;\n  var _ij;\n  for (var i = 0; i < arguments[0].length; i++) {\n    if (!(arguments[0][i] instanceof Array)) {\n      product = 1;\n      for (k = 1; k < arrays; k++) {\n        _i = utils.parseNumber(arguments[k - 1][i]);\n        if (_i instanceof Error) {\n          return _i;\n        }\n        product *= _i;\n      }\n      result += product;\n    } else {\n      for (var j = 0; j < arguments[0][i].length; j++) {\n        product = 1;\n        for (k = 1; k < arrays; k++) {\n          _ij = utils.parseNumber(arguments[k - 1][i][j]);\n          if (_ij instanceof Error) {\n            return _ij;\n          }\n          product *= _ij;\n        }\n        result += product;\n      }\n    }\n  }\n  return result;\n};\n\nexports.SUMSQ = function() {\n  var numbers = utils.parseNumberArray(utils.flatten(arguments));\n  if (numbers instanceof Error) {\n    return numbers;\n  }\n  var result = 0;\n  var length = numbers.length;\n  for (var i = 0; i < length; i++) {\n    result += (information.ISNUMBER(numbers[i])) ? numbers[i] * numbers[i] : 0;\n  }\n  return result;\n};\n\nexports.SUMX2MY2 = function(array_x, array_y) {\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  if (utils.anyIsError(array_x, array_y)) {\n    return error.value;\n  }\n  var result = 0;\n  for (var i = 0; i < array_x.length; i++) {\n    result += array_x[i] * array_x[i] - array_y[i] * array_y[i];\n  }\n  return result;\n};\n\nexports.SUMX2PY2 = function(array_x, array_y) {\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  if (utils.anyIsError(array_x, array_y)) {\n    return error.value;\n  }\n  var result = 0;\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  for (var i = 0; i < array_x.length; i++) {\n    result += array_x[i] * array_x[i] + array_y[i] * array_y[i];\n  }\n  return result;\n};\n\nexports.SUMXMY2 = function(array_x, array_y) {\n  array_x = utils.parseNumberArray(utils.flatten(array_x));\n  array_y = utils.parseNumberArray(utils.flatten(array_y));\n  if (utils.anyIsError(array_x, array_y)) {\n    return error.value;\n  }\n  var result = 0;\n  array_x = utils.flatten(array_x);\n  array_y = utils.flatten(array_y);\n  for (var i = 0; i < array_x.length; i++) {\n    result += Math.pow(array_x[i] - array_y[i], 2);\n  }\n  return result;\n};\n\nexports.TAN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return Math.tan(number);\n};\n\nexports.TANH = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  var e2 = Math.exp(2 * number);\n  return (e2 - 1) / (e2 + 1);\n};\n\nexports.TRUNC = function(number, digits) {\n  digits = (digits === undefined) ? 0 : digits;\n  number = utils.parseNumber(number);\n  digits = utils.parseNumber(digits);\n  if (utils.anyIsError(number, digits)) {\n    return error.value;\n  }\n  var sign = (number > 0) ? 1 : -1;\n  return sign * (Math.floor(Math.abs(number) * Math.pow(10, digits))) / Math.pow(10, digits);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}