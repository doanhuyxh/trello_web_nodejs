{"ast":null,"code":"var error = require('./utils/error');\nvar utils = require('./utils/common');\nexports.MATCH = function (lookupValue, lookupArray, matchType) {\n  if (!lookupValue && !lookupArray) {\n    return error.na;\n  }\n  if (arguments.length === 2) {\n    matchType = 1;\n  }\n  if (!(lookupArray instanceof Array)) {\n    return error.na;\n  }\n  if (matchType !== -1 && matchType !== 0 && matchType !== 1) {\n    return error.na;\n  }\n  var index;\n  var indexValue;\n  for (var idx = 0; idx < lookupArray.length; idx++) {\n    if (matchType === 1) {\n      if (lookupArray[idx] === lookupValue) {\n        return idx + 1;\n      } else if (lookupArray[idx] < lookupValue) {\n        if (!indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        } else if (lookupArray[idx] > indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        }\n      }\n    } else if (matchType === 0) {\n      if (typeof lookupValue === 'string') {\n        lookupValue = lookupValue.replace(/\\?/g, '.');\n        if (lookupArray[idx].toLowerCase().match(lookupValue.toLowerCase())) {\n          return idx + 1;\n        }\n      } else {\n        if (lookupArray[idx] === lookupValue) {\n          return idx + 1;\n        }\n      }\n    } else if (matchType === -1) {\n      if (lookupArray[idx] === lookupValue) {\n        return idx + 1;\n      } else if (lookupArray[idx] > lookupValue) {\n        if (!indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        } else if (lookupArray[idx] < indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        }\n      }\n    }\n  }\n  return index ? index : error.na;\n};\nexports.VLOOKUP = function (needle, table, index, rangeLookup) {\n  if (!needle || !table || !index) {\n    return error.na;\n  }\n  rangeLookup = rangeLookup || false;\n  for (var i = 0; i < table.length; i++) {\n    var row = table[i];\n    if (!rangeLookup && row[0] === needle || row[0] === needle || rangeLookup && typeof row[0] === \"string\" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1) {\n      return index < row.length + 1 ? row[index - 1] : error.ref;\n    }\n  }\n  return error.na;\n};\nexports.HLOOKUP = function (needle, table, index, rangeLookup) {\n  if (!needle || !table || !index) {\n    return error.na;\n  }\n  rangeLookup = rangeLookup || false;\n  var transposedTable = utils.transpose(table);\n  for (var i = 0; i < transposedTable.length; i++) {\n    var row = transposedTable[i];\n    if (!rangeLookup && row[0] === needle || row[0] === needle || rangeLookup && typeof row[0] === \"string\" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1) {\n      return index < row.length + 1 ? row[index - 1] : error.ref;\n    }\n  }\n  return error.na;\n};","map":{"version":3,"names":["error","require","utils","exports","MATCH","lookupValue","lookupArray","matchType","na","arguments","length","Array","index","indexValue","idx","replace","toLowerCase","match","VLOOKUP","needle","table","rangeLookup","i","row","indexOf","ref","HLOOKUP","transposedTable","transpose"],"sources":["D:/WebNodeJs/node18/trelo_project/front_end/node_modules/@handsontable/formulajs/lib/lookup-reference.js"],"sourcesContent":["var error = require('./utils/error');\nvar utils = require('./utils/common');\n\nexports.MATCH = function(lookupValue, lookupArray, matchType) {\n  if (!lookupValue && !lookupArray) {\n    return error.na;\n  }\n\n  if (arguments.length === 2) {\n    matchType = 1;\n  }\n  if (!(lookupArray instanceof Array)) {\n    return error.na;\n  }\n\n  if (matchType !== -1 && matchType !== 0 && matchType !== 1) {\n    return error.na;\n  }\n  var index;\n  var indexValue;\n  for (var idx = 0; idx < lookupArray.length; idx++) {\n    if (matchType === 1) {\n      if (lookupArray[idx] === lookupValue) {\n        return idx + 1;\n      } else if (lookupArray[idx] < lookupValue) {\n        if (!indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        } else if (lookupArray[idx] > indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        }\n      }\n    } else if (matchType === 0) {\n      if (typeof lookupValue === 'string') {\n        lookupValue = lookupValue.replace(/\\?/g, '.');\n        if (lookupArray[idx].toLowerCase().match(lookupValue.toLowerCase())) {\n          return idx + 1;\n        }\n      } else {\n        if (lookupArray[idx] === lookupValue) {\n          return idx + 1;\n        }\n      }\n    } else if (matchType === -1) {\n      if (lookupArray[idx] === lookupValue) {\n        return idx + 1;\n      } else if (lookupArray[idx] > lookupValue) {\n        if (!indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        } else if (lookupArray[idx] < indexValue) {\n          index = idx + 1;\n          indexValue = lookupArray[idx];\n        }\n      }\n    }\n  }\n\n  return index ? index : error.na;\n};\n\nexports.VLOOKUP = function (needle, table, index, rangeLookup) {\n  if (!needle || !table || !index) {\n    return error.na;\n  }\n\n  rangeLookup = rangeLookup || false;\n  for (var i = 0; i < table.length; i++) {\n    var row = table[i];\n    if ((!rangeLookup && row[0] === needle) ||\n      ((row[0] === needle) ||\n        (rangeLookup && typeof row[0] === \"string\" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1))) {\n      return (index < (row.length + 1) ? row[index - 1] : error.ref);\n    }\n  }\n\n  return error.na;\n};\n\nexports.HLOOKUP = function (needle, table, index, rangeLookup) {\n  if (!needle || !table || !index) {\n    return error.na;\n  }\n\n  rangeLookup = rangeLookup || false;\n\n  var transposedTable = utils.transpose(table);\n\n  for (var i = 0; i < transposedTable.length; i++) {\n    var row = transposedTable[i];\n    if ((!rangeLookup && row[0] === needle) ||\n      ((row[0] === needle) ||\n        (rangeLookup && typeof row[0] === \"string\" && row[0].toLowerCase().indexOf(needle.toLowerCase()) !== -1))) {\n      return (index < (row.length + 1) ? row[index - 1] : error.ref);\n    }\n  }\n\n  return error.na;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}