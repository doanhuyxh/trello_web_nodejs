{"ast":null,"code":"/**\n * Convert value into number.\n *\n * @param {String|Number} number\n * @returns {*}\n */\nexport function toNumber(number) {\n  var result;\n  if (typeof number === 'number') {\n    result = number;\n  } else if (typeof number === 'string') {\n    result = number.indexOf('.') > -1 ? parseFloat(number) : parseInt(number, 10);\n  }\n  return result;\n}\n/**\n * Invert provided number.\n *\n * @param {Number} number\n * @returns {Number} Returns inverted number.\n */\n\nexport function invertNumber(number) {\n  return -1 * toNumber(number);\n}","map":{"version":3,"names":["toNumber","number","result","indexOf","parseFloat","parseInt","invertNumber"],"sources":["D:/WebNodeJs/node18/trelo_project/front_end/node_modules/hot-formula-parser/helper/number.mjs"],"sourcesContent":["/**\n * Convert value into number.\n *\n * @param {String|Number} number\n * @returns {*}\n */\nexport function toNumber(number) {\n  var result;\n\n  if (typeof number === 'number') {\n    result = number;\n  } else if (typeof number === 'string') {\n    result = number.indexOf('.') > -1 ? parseFloat(number) : parseInt(number, 10);\n  }\n\n  return result;\n}\n/**\n * Invert provided number.\n *\n * @param {Number} number\n * @returns {Number} Returns inverted number.\n */\n\nexport function invertNumber(number) {\n  return -1 * toNumber(number);\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,QAAQA,CAACC,MAAM,EAAE;EAC/B,IAAIC,MAAM;EAEV,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;IAC9BC,MAAM,GAAGD,MAAM;EACjB,CAAC,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IACrCC,MAAM,GAAGD,MAAM,CAACE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGC,UAAU,CAACH,MAAM,CAAC,GAAGI,QAAQ,CAACJ,MAAM,EAAE,EAAE,CAAC;EAC/E;EAEA,OAAOC,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASI,YAAYA,CAACL,MAAM,EAAE;EACnC,OAAO,CAAC,CAAC,GAAGD,QAAQ,CAACC,MAAM,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}