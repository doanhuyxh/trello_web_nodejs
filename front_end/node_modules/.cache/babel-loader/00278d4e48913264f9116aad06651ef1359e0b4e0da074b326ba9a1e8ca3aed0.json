{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport Emitter from 'tiny-emitter';\nimport evaluateByOperator from \"./evaluate-by-operator/evaluate-by-operator.mjs\";\nimport { Parser as GrammarParser } from \"./grammar-parser/grammar-parser.mjs\";\nimport { trimEdges } from \"./helper/string.mjs\";\nimport { toNumber, invertNumber } from \"./helper/number.mjs\";\nimport errorParser, { isValidStrict as isErrorValid, ERROR, ERROR_NAME } from \"./error.mjs\";\nimport { extractLabel, toLabel } from \"./helper/cell.mjs\";\n/**\n * @class Parser\n */\n\nvar Parser = /*#__PURE__*/function (_Emitter) {\n  _inherits(Parser, _Emitter);\n  var _super = _createSuper(Parser);\n  function Parser() {\n    var _this;\n    _classCallCheck(this, Parser);\n    _this = _super.call(this);\n    _this.parser = new GrammarParser();\n    _this.parser.yy = {\n      toNumber: toNumber,\n      trimEdges: trimEdges,\n      invertNumber: invertNumber,\n      throwError: function throwError(errorName) {\n        return _this._throwError(errorName);\n      },\n      callVariable: function callVariable(variable) {\n        return _this._callVariable(variable);\n      },\n      evaluateByOperator: evaluateByOperator,\n      callFunction: function callFunction(name, params) {\n        return _this._callFunction(name, params);\n      },\n      cellValue: function cellValue(value) {\n        return _this._callCellValue(value);\n      },\n      rangeValue: function rangeValue(start, end) {\n        return _this._callRangeValue(start, end);\n      }\n    };\n    _this.variables = Object.create(null);\n    _this.functions = Object.create(null);\n    _this.setVariable('TRUE', true).setVariable('FALSE', false).setVariable('NULL', null);\n    return _this;\n  }\n  /**\n   * Parse formula expression.\n   *\n   * @param {String} expression to parse.\n   * @return {*} Returns an object with tow properties `error` and `result`.\n   */\n\n  _createClass(Parser, [{\n    key: \"parse\",\n    value: function parse(expression) {\n      var result = null;\n      var error = null;\n      try {\n        if (expression === '') {\n          result = '';\n        } else {\n          result = this.parser.parse(expression);\n        }\n      } catch (ex) {\n        var message = errorParser(ex.message);\n        if (message) {\n          error = message;\n        } else {\n          error = errorParser(ERROR);\n        }\n      }\n      if (result instanceof Error) {\n        error = errorParser(result.message) || errorParser(ERROR);\n        result = null;\n      }\n      return {\n        error: error,\n        result: result\n      };\n    }\n    /**\n     * Set predefined variable name which can be visible while parsing formula expression.\n     *\n     * @param {String} name Variable name.\n     * @param {*} value Variable value.\n     * @returns {Parser}\n     */\n  }, {\n    key: \"setVariable\",\n    value: function setVariable(name, value) {\n      this.variables[name] = value;\n      return this;\n    }\n    /**\n     * Get variable name.\n     *\n     * @param {String} name Variable name.\n     * @returns {*}\n     */\n  }, {\n    key: \"getVariable\",\n    value: function getVariable(name) {\n      return this.variables[name];\n    }\n    /**\n     * Retrieve variable value by its name.\n     *\n     * @param name Variable name.\n     * @returns {*}\n     * @private\n     */\n  }, {\n    key: \"_callVariable\",\n    value: function _callVariable(name) {\n      var value = this.getVariable(name);\n      this.emit('callVariable', name, function (newValue) {\n        if (newValue !== void 0) {\n          value = newValue;\n        }\n      });\n      if (value === void 0) {\n        throw Error(ERROR_NAME);\n      }\n      return value;\n    }\n    /**\n     * Set custom function which can be visible while parsing formula expression.\n     *\n     * @param {String} name Custom function name.\n     * @param {Function} fn Custom function.\n     * @returns {Parser}\n     */\n  }, {\n    key: \"setFunction\",\n    value: function setFunction(name, fn) {\n      this.functions[name] = fn;\n      return this;\n    }\n    /**\n     * Get custom function.\n     *\n     * @param {String} name Custom function name.\n     * @returns {*}\n     */\n  }, {\n    key: \"getFunction\",\n    value: function getFunction(name) {\n      return this.functions[name];\n    }\n    /**\n     * Call function with provided params.\n     *\n     * @param name Function name.\n     * @param params Function params.\n     * @returns {*}\n     * @private\n     */\n  }, {\n    key: \"_callFunction\",\n    value: function _callFunction(name) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var fn = this.getFunction(name);\n      var value;\n      if (fn) {\n        value = fn(params);\n      }\n      this.emit('callFunction', name, params, function (newValue) {\n        if (newValue !== void 0) {\n          value = newValue;\n        }\n      });\n      return value === void 0 ? evaluateByOperator(name, params) : value;\n    }\n    /**\n     * Retrieve value by its label (`B3`, `B$3`, `B$3`, `$B$3`).\n     *\n     * @param {String} label Coordinates.\n     * @returns {*}\n     * @private\n     */\n  }, {\n    key: \"_callCellValue\",\n    value: function _callCellValue(label) {\n      label = label.toUpperCase();\n      var _extractLabel = extractLabel(label),\n        _extractLabel2 = _slicedToArray(_extractLabel, 2),\n        row = _extractLabel2[0],\n        column = _extractLabel2[1];\n      var value = void 0;\n      this.emit('callCellValue', {\n        label: label,\n        row: row,\n        column: column\n      }, function (_value) {\n        value = _value;\n      });\n      return value;\n    }\n    /**\n     * Retrieve value by its label (`B3:A1`, `B$3:A1`, `B$3:$A1`, `$B$3:A$1`).\n     *\n     * @param {String} startLabel Coordinates of the first cell.\n     * @param {String} endLabel Coordinates of the last cell.\n     * @returns {Array} Returns an array of mixed values.\n     * @private\n     */\n  }, {\n    key: \"_callRangeValue\",\n    value: function _callRangeValue(startLabel, endLabel) {\n      startLabel = startLabel.toUpperCase();\n      endLabel = endLabel.toUpperCase();\n      var _extractLabel3 = extractLabel(startLabel),\n        _extractLabel4 = _slicedToArray(_extractLabel3, 2),\n        startRow = _extractLabel4[0],\n        startColumn = _extractLabel4[1];\n      var _extractLabel5 = extractLabel(endLabel),\n        _extractLabel6 = _slicedToArray(_extractLabel5, 2),\n        endRow = _extractLabel6[0],\n        endColumn = _extractLabel6[1];\n      var startCell = {};\n      var endCell = {};\n      if (startRow.index <= endRow.index) {\n        startCell.row = startRow;\n        endCell.row = endRow;\n      } else {\n        startCell.row = endRow;\n        endCell.row = startRow;\n      }\n      if (startColumn.index <= endColumn.index) {\n        startCell.column = startColumn;\n        endCell.column = endColumn;\n      } else {\n        startCell.column = endColumn;\n        endCell.column = startColumn;\n      }\n      startCell.label = toLabel(startCell.row, startCell.column);\n      endCell.label = toLabel(endCell.row, endCell.column);\n      var value = [];\n      this.emit('callRangeValue', startCell, endCell, function () {\n        var _value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        value = _value;\n      });\n      return value;\n    }\n    /**\n     * Try to throw error by its name.\n     *\n     * @param {String} errorName Error name.\n     * @returns {String}\n     * @private\n     */\n  }, {\n    key: \"_throwError\",\n    value: function _throwError(errorName) {\n      if (isErrorValid(errorName)) {\n        throw Error(errorName);\n      }\n      throw Error(ERROR);\n    }\n  }]);\n  return Parser;\n}(Emitter);\nexport default Parser;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","len","length","arr2","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","e","getPrototypeOf","Emitter","evaluateByOperator","Parser","GrammarParser","trimEdges","toNumber","invertNumber","errorParser","isValidStrict","isErrorValid","ERROR","ERROR_NAME","extractLabel","toLabel","_Emitter","_super","_this","parser","yy","throwError","errorName","_throwError","callVariable","variable","_callVariable","callFunction","params","_callFunction","cellValue","_callCellValue","rangeValue","start","end","_callRangeValue","variables","functions","setVariable","parse","expression","error","ex","message","Error","getVariable","emit","newValue","setFunction","fn","getFunction","label","toUpperCase","_extractLabel","_extractLabel2","row","column","_value","startLabel","endLabel","_extractLabel3","_extractLabel4","startRow","startColumn","_extractLabel5","_extractLabel6","endRow","endColumn","startCell","endCell","index"],"sources":["D:/WebNodeJs/node18/trelo_project/front_end/node_modules/hot-formula-parser/parser.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport Emitter from 'tiny-emitter';\nimport evaluateByOperator from \"./evaluate-by-operator/evaluate-by-operator.mjs\";\nimport { Parser as GrammarParser } from \"./grammar-parser/grammar-parser.mjs\";\nimport { trimEdges } from \"./helper/string.mjs\";\nimport { toNumber, invertNumber } from \"./helper/number.mjs\";\nimport errorParser, { isValidStrict as isErrorValid, ERROR, ERROR_NAME } from \"./error.mjs\";\nimport { extractLabel, toLabel } from \"./helper/cell.mjs\";\n/**\n * @class Parser\n */\n\nvar Parser = /*#__PURE__*/function (_Emitter) {\n  _inherits(Parser, _Emitter);\n\n  var _super = _createSuper(Parser);\n\n  function Parser() {\n    var _this;\n\n    _classCallCheck(this, Parser);\n\n    _this = _super.call(this);\n    _this.parser = new GrammarParser();\n    _this.parser.yy = {\n      toNumber: toNumber,\n      trimEdges: trimEdges,\n      invertNumber: invertNumber,\n      throwError: function throwError(errorName) {\n        return _this._throwError(errorName);\n      },\n      callVariable: function callVariable(variable) {\n        return _this._callVariable(variable);\n      },\n      evaluateByOperator: evaluateByOperator,\n      callFunction: function callFunction(name, params) {\n        return _this._callFunction(name, params);\n      },\n      cellValue: function cellValue(value) {\n        return _this._callCellValue(value);\n      },\n      rangeValue: function rangeValue(start, end) {\n        return _this._callRangeValue(start, end);\n      }\n    };\n    _this.variables = Object.create(null);\n    _this.functions = Object.create(null);\n\n    _this.setVariable('TRUE', true).setVariable('FALSE', false).setVariable('NULL', null);\n\n    return _this;\n  }\n  /**\n   * Parse formula expression.\n   *\n   * @param {String} expression to parse.\n   * @return {*} Returns an object with tow properties `error` and `result`.\n   */\n\n\n  _createClass(Parser, [{\n    key: \"parse\",\n    value: function parse(expression) {\n      var result = null;\n      var error = null;\n\n      try {\n        if (expression === '') {\n          result = '';\n        } else {\n          result = this.parser.parse(expression);\n        }\n      } catch (ex) {\n        var message = errorParser(ex.message);\n\n        if (message) {\n          error = message;\n        } else {\n          error = errorParser(ERROR);\n        }\n      }\n\n      if (result instanceof Error) {\n        error = errorParser(result.message) || errorParser(ERROR);\n        result = null;\n      }\n\n      return {\n        error: error,\n        result: result\n      };\n    }\n    /**\n     * Set predefined variable name which can be visible while parsing formula expression.\n     *\n     * @param {String} name Variable name.\n     * @param {*} value Variable value.\n     * @returns {Parser}\n     */\n\n  }, {\n    key: \"setVariable\",\n    value: function setVariable(name, value) {\n      this.variables[name] = value;\n      return this;\n    }\n    /**\n     * Get variable name.\n     *\n     * @param {String} name Variable name.\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getVariable\",\n    value: function getVariable(name) {\n      return this.variables[name];\n    }\n    /**\n     * Retrieve variable value by its name.\n     *\n     * @param name Variable name.\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: \"_callVariable\",\n    value: function _callVariable(name) {\n      var value = this.getVariable(name);\n      this.emit('callVariable', name, function (newValue) {\n        if (newValue !== void 0) {\n          value = newValue;\n        }\n      });\n\n      if (value === void 0) {\n        throw Error(ERROR_NAME);\n      }\n\n      return value;\n    }\n    /**\n     * Set custom function which can be visible while parsing formula expression.\n     *\n     * @param {String} name Custom function name.\n     * @param {Function} fn Custom function.\n     * @returns {Parser}\n     */\n\n  }, {\n    key: \"setFunction\",\n    value: function setFunction(name, fn) {\n      this.functions[name] = fn;\n      return this;\n    }\n    /**\n     * Get custom function.\n     *\n     * @param {String} name Custom function name.\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getFunction\",\n    value: function getFunction(name) {\n      return this.functions[name];\n    }\n    /**\n     * Call function with provided params.\n     *\n     * @param name Function name.\n     * @param params Function params.\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: \"_callFunction\",\n    value: function _callFunction(name) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var fn = this.getFunction(name);\n      var value;\n\n      if (fn) {\n        value = fn(params);\n      }\n\n      this.emit('callFunction', name, params, function (newValue) {\n        if (newValue !== void 0) {\n          value = newValue;\n        }\n      });\n      return value === void 0 ? evaluateByOperator(name, params) : value;\n    }\n    /**\n     * Retrieve value by its label (`B3`, `B$3`, `B$3`, `$B$3`).\n     *\n     * @param {String} label Coordinates.\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: \"_callCellValue\",\n    value: function _callCellValue(label) {\n      label = label.toUpperCase();\n\n      var _extractLabel = extractLabel(label),\n          _extractLabel2 = _slicedToArray(_extractLabel, 2),\n          row = _extractLabel2[0],\n          column = _extractLabel2[1];\n\n      var value = void 0;\n      this.emit('callCellValue', {\n        label: label,\n        row: row,\n        column: column\n      }, function (_value) {\n        value = _value;\n      });\n      return value;\n    }\n    /**\n     * Retrieve value by its label (`B3:A1`, `B$3:A1`, `B$3:$A1`, `$B$3:A$1`).\n     *\n     * @param {String} startLabel Coordinates of the first cell.\n     * @param {String} endLabel Coordinates of the last cell.\n     * @returns {Array} Returns an array of mixed values.\n     * @private\n     */\n\n  }, {\n    key: \"_callRangeValue\",\n    value: function _callRangeValue(startLabel, endLabel) {\n      startLabel = startLabel.toUpperCase();\n      endLabel = endLabel.toUpperCase();\n\n      var _extractLabel3 = extractLabel(startLabel),\n          _extractLabel4 = _slicedToArray(_extractLabel3, 2),\n          startRow = _extractLabel4[0],\n          startColumn = _extractLabel4[1];\n\n      var _extractLabel5 = extractLabel(endLabel),\n          _extractLabel6 = _slicedToArray(_extractLabel5, 2),\n          endRow = _extractLabel6[0],\n          endColumn = _extractLabel6[1];\n\n      var startCell = {};\n      var endCell = {};\n\n      if (startRow.index <= endRow.index) {\n        startCell.row = startRow;\n        endCell.row = endRow;\n      } else {\n        startCell.row = endRow;\n        endCell.row = startRow;\n      }\n\n      if (startColumn.index <= endColumn.index) {\n        startCell.column = startColumn;\n        endCell.column = endColumn;\n      } else {\n        startCell.column = endColumn;\n        endCell.column = startColumn;\n      }\n\n      startCell.label = toLabel(startCell.row, startCell.column);\n      endCell.label = toLabel(endCell.row, endCell.column);\n      var value = [];\n      this.emit('callRangeValue', startCell, endCell, function () {\n        var _value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        value = _value;\n      });\n      return value;\n    }\n    /**\n     * Try to throw error by its name.\n     *\n     * @param {String} errorName Error name.\n     * @returns {String}\n     * @private\n     */\n\n  }, {\n    key: \"_throwError\",\n    value: function _throwError(errorName) {\n      if (isErrorValid(errorName)) {\n        throw Error(errorName);\n      }\n\n      throw Error(ERROR);\n    }\n  }]);\n\n  return Parser;\n}(Emitter);\n\nexport default Parser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}