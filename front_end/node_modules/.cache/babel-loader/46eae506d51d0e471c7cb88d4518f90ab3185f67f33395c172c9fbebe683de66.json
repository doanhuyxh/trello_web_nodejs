{"ast":null,"code":"var utils = require('./utils/common');\nvar error = require('./utils/error');\n\n//TODO\nexports.ASC = function () {\n  throw new Error('ASC is not implemented');\n};\n\n//TODO\nexports.BAHTTEXT = function () {\n  throw new Error('BAHTTEXT is not implemented');\n};\nexports.CHAR = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return String.fromCharCode(number);\n};\nexports.CLEAN = function (text) {\n  text = text || '';\n  var re = /[\\0-\\x1F]/g;\n  return text.replace(re, \"\");\n};\nexports.CODE = function (text) {\n  text = text || '';\n  var result = text.charCodeAt(0);\n  if (isNaN(result)) {\n    result = error.na;\n  }\n  return result;\n};\nexports.CONCATENATE = function () {\n  var args = utils.flatten(arguments);\n  var trueFound = 0;\n  while ((trueFound = args.indexOf(true)) > -1) {\n    args[trueFound] = 'TRUE';\n  }\n  var falseFound = 0;\n  while ((falseFound = args.indexOf(false)) > -1) {\n    args[falseFound] = 'FALSE';\n  }\n  return args.join('');\n};\n\n//TODO\nexports.DBCS = function () {\n  throw new Error('DBCS is not implemented');\n};\n\n//TODO\nexports.DOLLAR = function () {\n  throw new Error('DOLLAR is not implemented');\n};\nexports.EXACT = function (text1, text2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  return text1 === text2;\n};\nexports.FIND = function (find_text, within_text, position) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  position = position === undefined ? 0 : position;\n  return within_text ? within_text.indexOf(find_text, position - 1) + 1 : null;\n};\n\n//TODO\nexports.FIXED = function () {\n  throw new Error('FIXED is not implemented');\n};\nexports.HTML2TEXT = function (value) {\n  var result = '';\n  if (value) {\n    if (value instanceof Array) {\n      value.forEach(function (line) {\n        if (result !== '') {\n          result += '\\n';\n        }\n        result += line.replace(/<(?:.|\\n)*?>/gm, '');\n      });\n    } else {\n      result = value.replace(/<(?:.|\\n)*?>/gm, '');\n    }\n  }\n  return result;\n};\nexports.LEFT = function (text, number) {\n  number = number === undefined ? 1 : number;\n  number = utils.parseNumber(number);\n  if (number instanceof Error || typeof text !== 'string') {\n    return error.value;\n  }\n  return text ? text.substring(0, number) : null;\n};\nexports.LEN = function (text) {\n  if (arguments.length === 0) {\n    return error.error;\n  }\n  if (typeof text === 'string') {\n    return text ? text.length : 0;\n  }\n  if (text.length) {\n    return text.length;\n  }\n  return error.value;\n};\nexports.LOWER = function (text) {\n  if (typeof text !== 'string') {\n    return error.value;\n  }\n  return text ? text.toLowerCase() : text;\n};\nexports.MID = function (text, start, number) {\n  start = utils.parseNumber(start);\n  number = utils.parseNumber(number);\n  if (utils.anyIsError(start, number) || typeof text !== 'string') {\n    return number;\n  }\n  var begin = start - 1;\n  var end = begin + number;\n  return text.substring(begin, end);\n};\n\n// TODO\nexports.NUMBERVALUE = function (text, decimal_separator, group_separator) {\n  decimal_separator = typeof decimal_separator === 'undefined' ? '.' : decimal_separator;\n  group_separator = typeof group_separator === 'undefined' ? ',' : group_separator;\n  return Number(text.replace(decimal_separator, '.').replace(group_separator, ''));\n};\n\n// TODO\nexports.PRONETIC = function () {\n  throw new Error('PRONETIC is not implemented');\n};\nexports.PROPER = function (text) {\n  if (text === undefined || text.length === 0) {\n    return error.value;\n  }\n  if (text === true) {\n    text = 'TRUE';\n  }\n  if (text === false) {\n    text = 'FALSE';\n  }\n  if (isNaN(text) && typeof text === 'number') {\n    return error.value;\n  }\n  if (typeof text === 'number') {\n    text = '' + text;\n  }\n  return text.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\nexports.REGEXEXTRACT = function (text, regular_expression) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  var match = text.match(new RegExp(regular_expression));\n  return match ? match[match.length > 1 ? match.length - 1 : 0] : null;\n};\nexports.REGEXMATCH = function (text, regular_expression, full) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  var match = text.match(new RegExp(regular_expression));\n  return full ? match : !!match;\n};\nexports.REGEXREPLACE = function (text, regular_expression, replacement) {\n  if (arguments.length < 3) {\n    return error.na;\n  }\n  return text.replace(new RegExp(regular_expression), replacement);\n};\nexports.REPLACE = function (text, position, length, new_text) {\n  position = utils.parseNumber(position);\n  length = utils.parseNumber(length);\n  if (utils.anyIsError(position, length) || typeof text !== 'string' || typeof new_text !== 'string') {\n    return error.value;\n  }\n  return text.substr(0, position - 1) + new_text + text.substr(position - 1 + length);\n};\nexports.REPT = function (text, number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return new Array(number + 1).join(text);\n};\nexports.RIGHT = function (text, number) {\n  number = number === undefined ? 1 : number;\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return text ? text.substring(text.length - number) : error.na;\n};\nexports.SEARCH = function (find_text, within_text, position) {\n  var foundAt;\n  if (typeof find_text !== 'string' || typeof within_text !== 'string') {\n    return error.value;\n  }\n  position = position === undefined ? 0 : position;\n  foundAt = within_text.toLowerCase().indexOf(find_text.toLowerCase(), position - 1) + 1;\n  return foundAt === 0 ? error.value : foundAt;\n};\nexports.SPLIT = function (text, separator) {\n  return text.split(separator);\n};\nexports.SUBSTITUTE = function (text, old_text, new_text, occurrence) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  if (!text || !old_text || !new_text) {\n    return text;\n  } else if (occurrence === undefined) {\n    return text.replace(new RegExp(old_text, 'g'), new_text);\n  } else {\n    var index = 0;\n    var i = 0;\n    while (text.indexOf(old_text, index) > 0) {\n      index = text.indexOf(old_text, index + 1);\n      i++;\n      if (i === occurrence) {\n        return text.substring(0, index) + new_text + text.substring(index + old_text.length);\n      }\n    }\n  }\n};\nexports.T = function (value) {\n  return typeof value === \"string\" ? value : '';\n};\n\n// TODO incomplete implementation\nexports.TEXT = function () {\n  throw new Error('TEXT is not implemented');\n};\nexports.TRIM = function (text) {\n  if (typeof text !== 'string') {\n    return error.value;\n  }\n  return text.replace(/ +/g, ' ').trim();\n};\nexports.UNICHAR = exports.CHAR;\nexports.UNICODE = exports.CODE;\nexports.UPPER = function (text) {\n  if (typeof text !== 'string') {\n    return error.value;\n  }\n  return text.toUpperCase();\n};\n\n//TODO\nexports.VALUE = function () {\n  throw new Error('VALUE is not implemented');\n};","map":{"version":3,"names":["utils","require","error","exports","ASC","Error","BAHTTEXT","CHAR","number","parseNumber","String","fromCharCode","CLEAN","text","re","replace","CODE","result","charCodeAt","isNaN","na","CONCATENATE","args","flatten","arguments","trueFound","indexOf","falseFound","join","DBCS","DOLLAR","EXACT","text1","text2","length","FIND","find_text","within_text","position","undefined","FIXED","HTML2TEXT","value","Array","forEach","line","LEFT","substring","LEN","LOWER","toLowerCase","MID","start","anyIsError","begin","end","NUMBERVALUE","decimal_separator","group_separator","Number","PRONETIC","PROPER","txt","charAt","toUpperCase","substr","REGEXEXTRACT","regular_expression","match","RegExp","REGEXMATCH","full","REGEXREPLACE","replacement","REPLACE","new_text","REPT","RIGHT","SEARCH","foundAt","SPLIT","separator","split","SUBSTITUTE","old_text","occurrence","index","i","T","TEXT","TRIM","trim","UNICHAR","UNICODE","UPPER","VALUE"],"sources":["D:/WebNodeJs/node18/trelo_project/front_end/node_modules/@handsontable/formulajs/lib/text.js"],"sourcesContent":["var utils = require('./utils/common');\nvar error = require('./utils/error');\n\n//TODO\nexports.ASC = function() {\n  throw new Error('ASC is not implemented');\n};\n\n//TODO\nexports.BAHTTEXT = function() {\n  throw new Error('BAHTTEXT is not implemented');\n};\n\nexports.CHAR = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return String.fromCharCode(number);\n};\n\nexports.CLEAN = function(text) {\n  text = text || '';\n  var re = /[\\0-\\x1F]/g;\n  return text.replace(re, \"\");\n};\n\nexports.CODE = function(text) {\n  text = text || '';\n  var result = text.charCodeAt(0);\n\n  if (isNaN(result)) {\n    result = error.na;\n  }\n  return result;\n};\n\nexports.CONCATENATE = function() {\n  var args = utils.flatten(arguments);\n\n  var trueFound = 0;\n  while ((trueFound = args.indexOf(true)) > -1) {\n    args[trueFound] = 'TRUE';\n  }\n\n  var falseFound = 0;\n  while ((falseFound = args.indexOf(false)) > -1) {\n    args[falseFound] = 'FALSE';\n  }\n\n  return args.join('');\n};\n\n//TODO\nexports.DBCS = function() {\n  throw new Error('DBCS is not implemented');\n};\n\n//TODO\nexports.DOLLAR = function() {\n  throw new Error('DOLLAR is not implemented');\n};\n\nexports.EXACT = function(text1, text2) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  return text1 === text2;\n};\n\nexports.FIND = function(find_text, within_text, position) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  position = (position === undefined) ? 0 : position;\n  return within_text ? within_text.indexOf(find_text, position - 1) + 1 : null;\n};\n\n//TODO\nexports.FIXED = function() {\n  throw new Error('FIXED is not implemented');\n};\n\nexports.HTML2TEXT = function (value) {\n  var result = '';\n\n  if (value) {\n    if (value instanceof Array) {\n      value.forEach(function (line) {\n        if (result !== '') {\n          result += '\\n';\n        }\n        result += (line.replace(/<(?:.|\\n)*?>/gm, ''));\n      });\n    } else {\n      result = value.replace(/<(?:.|\\n)*?>/gm, '');\n    }\n  }\n\n  return result;\n};\n\nexports.LEFT = function(text, number) {\n  number = (number === undefined) ? 1 : number;\n  number = utils.parseNumber(number);\n  if (number instanceof Error || typeof text !== 'string') {\n    return error.value;\n  }\n  return text ? text.substring(0, number) : null;\n};\n\nexports.LEN = function(text) {\n  if (arguments.length === 0) {\n    return error.error;\n  }\n\n  if (typeof text === 'string') {\n    return text ? text.length : 0;\n  }\n\n  if (text.length) {\n    return text.length;\n  }\n\n  return error.value;\n};\n\nexports.LOWER = function(text) {\n  if (typeof text !== 'string') {\n    return error.value;\n  }\n  return text ? text.toLowerCase() : text;\n};\n\nexports.MID = function(text, start, number) {\n  start = utils.parseNumber(start);\n  number = utils.parseNumber(number);\n  if (utils.anyIsError(start, number) || typeof text !== 'string') {\n    return number;\n  }\n\n  var begin = start - 1;\n  var end = begin + number;\n\n  return text.substring(begin, end);\n};\n\n// TODO\nexports.NUMBERVALUE = function (text, decimal_separator, group_separator)  {\n  decimal_separator = (typeof decimal_separator === 'undefined') ? '.' : decimal_separator;\n  group_separator = (typeof group_separator === 'undefined') ? ',' : group_separator;\n  return Number(text.replace(decimal_separator, '.').replace(group_separator, ''));\n};\n\n// TODO\nexports.PRONETIC = function() {\n  throw new Error('PRONETIC is not implemented');\n};\n\nexports.PROPER = function(text) {\n  if (text === undefined || text.length === 0) {\n    return error.value;\n  }\n  if (text === true) {\n    text = 'TRUE';\n  }\n  if (text === false) {\n    text = 'FALSE';\n  }\n  if (isNaN(text) && typeof text === 'number') {\n    return error.value;\n  }\n  if (typeof text === 'number') {\n    text = '' + text;\n  }\n\n  return text.replace(/\\w\\S*/g, function(txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nexports.REGEXEXTRACT = function (text, regular_expression) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  var match = text.match(new RegExp(regular_expression));\n  return match ? (match[match.length > 1 ? match.length - 1 : 0]) : null;\n};\n\nexports.REGEXMATCH = function (text, regular_expression, full) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  var match = text.match(new RegExp(regular_expression));\n  return full ? match : !!match;\n};\n\nexports.REGEXREPLACE = function (text, regular_expression, replacement) {\n  if (arguments.length < 3) {\n    return error.na;\n  }\n  return text.replace(new RegExp(regular_expression), replacement);\n};\n\nexports.REPLACE = function(text, position, length, new_text) {\n  position = utils.parseNumber(position);\n  length = utils.parseNumber(length);\n  if (utils.anyIsError(position, length) ||\n    typeof text !== 'string' ||\n    typeof new_text !== 'string') {\n    return error.value;\n  }\n  return text.substr(0, position - 1) + new_text + text.substr(position - 1 + length);\n};\n\nexports.REPT = function(text, number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return new Array(number + 1).join(text);\n};\n\nexports.RIGHT = function(text, number) {\n  number = (number === undefined) ? 1 : number;\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return text ? text.substring(text.length - number) : error.na;\n};\n\nexports.SEARCH = function(find_text, within_text, position) {\n  var foundAt;\n  if (typeof find_text !== 'string' || typeof within_text !== 'string') {\n    return error.value;\n  }\n  position = (position === undefined) ? 0 : position;\n  foundAt = within_text.toLowerCase().indexOf(find_text.toLowerCase(), position - 1)+1;\n  return (foundAt === 0)?error.value:foundAt;\n};\n\nexports.SPLIT = function (text, separator) {\n  return text.split(separator);\n};\n\nexports.SUBSTITUTE = function(text, old_text, new_text, occurrence) {\n  if (arguments.length < 2) {\n    return error.na;\n  }\n  if (!text || !old_text || !new_text) {\n    return text;\n  } else if (occurrence === undefined) {\n    return text.replace(new RegExp(old_text, 'g'), new_text);\n  } else {\n    var index = 0;\n    var i = 0;\n    while (text.indexOf(old_text, index) > 0) {\n      index = text.indexOf(old_text, index + 1);\n      i++;\n      if (i === occurrence) {\n        return text.substring(0, index) + new_text + text.substring(index + old_text.length);\n      }\n    }\n  }\n};\n\nexports.T = function(value) {\n  return (typeof value === \"string\") ? value : '';\n};\n\n// TODO incomplete implementation\nexports.TEXT = function() {\n  throw new Error('TEXT is not implemented');\n};\n\nexports.TRIM = function(text) {\n  if (typeof text !== 'string') {\n    return error.value;\n  }\n  return text.replace(/ +/g, ' ').trim();\n};\n\nexports.UNICHAR = exports.CHAR;\n\nexports.UNICODE = exports.CODE;\n\nexports.UPPER = function(text) {\n  if (typeof text !== 'string') {\n    return error.value;\n  }\n  return text.toUpperCase();\n};\n\n//TODO\nexports.VALUE = function() {\n  throw new Error('VALUE is not implemented');\n};\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACrC,IAAIC,KAAK,GAAGD,OAAO,CAAC,eAAe,CAAC;;AAEpC;AACAE,OAAO,CAACC,GAAG,GAAG,YAAW;EACvB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;AAC3C,CAAC;;AAED;AACAF,OAAO,CAACG,QAAQ,GAAG,YAAW;EAC5B,MAAM,IAAID,KAAK,CAAC,6BAA6B,CAAC;AAChD,CAAC;AAEDF,OAAO,CAACI,IAAI,GAAG,UAASC,MAAM,EAAE;EAC9BA,MAAM,GAAGR,KAAK,CAACS,WAAW,CAACD,MAAM,CAAC;EAClC,IAAIA,MAAM,YAAYH,KAAK,EAAE;IAC3B,OAAOG,MAAM;EACf;EACA,OAAOE,MAAM,CAACC,YAAY,CAACH,MAAM,CAAC;AACpC,CAAC;AAEDL,OAAO,CAACS,KAAK,GAAG,UAASC,IAAI,EAAE;EAC7BA,IAAI,GAAGA,IAAI,IAAI,EAAE;EACjB,IAAIC,EAAE,GAAG,YAAY;EACrB,OAAOD,IAAI,CAACE,OAAO,CAACD,EAAE,EAAE,EAAE,CAAC;AAC7B,CAAC;AAEDX,OAAO,CAACa,IAAI,GAAG,UAASH,IAAI,EAAE;EAC5BA,IAAI,GAAGA,IAAI,IAAI,EAAE;EACjB,IAAII,MAAM,GAAGJ,IAAI,CAACK,UAAU,CAAC,CAAC,CAAC;EAE/B,IAAIC,KAAK,CAACF,MAAM,CAAC,EAAE;IACjBA,MAAM,GAAGf,KAAK,CAACkB,EAAE;EACnB;EACA,OAAOH,MAAM;AACf,CAAC;AAEDd,OAAO,CAACkB,WAAW,GAAG,YAAW;EAC/B,IAAIC,IAAI,GAAGtB,KAAK,CAACuB,OAAO,CAACC,SAAS,CAAC;EAEnC,IAAIC,SAAS,GAAG,CAAC;EACjB,OAAO,CAACA,SAAS,GAAGH,IAAI,CAACI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;IAC5CJ,IAAI,CAACG,SAAS,CAAC,GAAG,MAAM;EAC1B;EAEA,IAAIE,UAAU,GAAG,CAAC;EAClB,OAAO,CAACA,UAAU,GAAGL,IAAI,CAACI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE;IAC9CJ,IAAI,CAACK,UAAU,CAAC,GAAG,OAAO;EAC5B;EAEA,OAAOL,IAAI,CAACM,IAAI,CAAC,EAAE,CAAC;AACtB,CAAC;;AAED;AACAzB,OAAO,CAAC0B,IAAI,GAAG,YAAW;EACxB,MAAM,IAAIxB,KAAK,CAAC,yBAAyB,CAAC;AAC5C,CAAC;;AAED;AACAF,OAAO,CAAC2B,MAAM,GAAG,YAAW;EAC1B,MAAM,IAAIzB,KAAK,CAAC,2BAA2B,CAAC;AAC9C,CAAC;AAEDF,OAAO,CAAC4B,KAAK,GAAG,UAASC,KAAK,EAAEC,KAAK,EAAE;EACrC,IAAIT,SAAS,CAACU,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAOhC,KAAK,CAACkB,EAAE;EACjB;EACA,OAAOY,KAAK,KAAKC,KAAK;AACxB,CAAC;AAED9B,OAAO,CAACgC,IAAI,GAAG,UAASC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,EAAE;EACxD,IAAId,SAAS,CAACU,MAAM,GAAG,CAAC,EAAE;IACxB,OAAOhC,KAAK,CAACkB,EAAE;EACjB;EACAkB,QAAQ,GAAIA,QAAQ,KAAKC,SAAS,GAAI,CAAC,GAAGD,QAAQ;EAClD,OAAOD,WAAW,GAAGA,WAAW,CAACX,OAAO,CAACU,SAAS,EAAEE,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI;AAC9E,CAAC;;AAED;AACAnC,OAAO,CAACqC,KAAK,GAAG,YAAW;EACzB,MAAM,IAAInC,KAAK,CAAC,0BAA0B,CAAC;AAC7C,CAAC;AAEDF,OAAO,CAACsC,SAAS,GAAG,UAAUC,KAAK,EAAE;EACnC,IAAIzB,MAAM,GAAG,EAAE;EAEf,IAAIyB,KAAK,EAAE;IACT,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1BD,KAAK,CAACE,OAAO,CAAC,UAAUC,IAAI,EAAE;QAC5B,IAAI5B,MAAM,KAAK,EAAE,EAAE;UACjBA,MAAM,IAAI,IAAI;QAChB;QACAA,MAAM,IAAK4B,IAAI,CAAC9B,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAE;MAChD,CAAC,CAAC;IACJ,CAAC,MAAM;MACLE,MAAM,GAAGyB,KAAK,CAAC3B,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;IAC9C;EACF;EAEA,OAAOE,MAAM;AACf,CAAC;AAEDd,OAAO,CAAC2C,IAAI,GAAG,UAASjC,IAAI,EAAEL,MAAM,EAAE;EACpCA,MAAM,GAAIA,MAAM,KAAK+B,SAAS,GAAI,CAAC,GAAG/B,MAAM;EAC5CA,MAAM,GAAGR,KAAK,CAACS,WAAW,CAACD,MAAM,CAAC;EAClC,IAAIA,MAAM,YAAYH,KAAK,IAAI,OAAOQ,IAAI,KAAK,QAAQ,EAAE;IACvD,OAAOX,KAAK,CAACwC,KAAK;EACpB;EACA,OAAO7B,IAAI,GAAGA,IAAI,CAACkC,SAAS,CAAC,CAAC,EAAEvC,MAAM,CAAC,GAAG,IAAI;AAChD,CAAC;AAEDL,OAAO,CAAC6C,GAAG,GAAG,UAASnC,IAAI,EAAE;EAC3B,IAAIW,SAAS,CAACU,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAOhC,KAAK,CAACA,KAAK;EACpB;EAEA,IAAI,OAAOW,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOA,IAAI,GAAGA,IAAI,CAACqB,MAAM,GAAG,CAAC;EAC/B;EAEA,IAAIrB,IAAI,CAACqB,MAAM,EAAE;IACf,OAAOrB,IAAI,CAACqB,MAAM;EACpB;EAEA,OAAOhC,KAAK,CAACwC,KAAK;AACpB,CAAC;AAEDvC,OAAO,CAAC8C,KAAK,GAAG,UAASpC,IAAI,EAAE;EAC7B,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOX,KAAK,CAACwC,KAAK;EACpB;EACA,OAAO7B,IAAI,GAAGA,IAAI,CAACqC,WAAW,CAAC,CAAC,GAAGrC,IAAI;AACzC,CAAC;AAEDV,OAAO,CAACgD,GAAG,GAAG,UAAStC,IAAI,EAAEuC,KAAK,EAAE5C,MAAM,EAAE;EAC1C4C,KAAK,GAAGpD,KAAK,CAACS,WAAW,CAAC2C,KAAK,CAAC;EAChC5C,MAAM,GAAGR,KAAK,CAACS,WAAW,CAACD,MAAM,CAAC;EAClC,IAAIR,KAAK,CAACqD,UAAU,CAACD,KAAK,EAAE5C,MAAM,CAAC,IAAI,OAAOK,IAAI,KAAK,QAAQ,EAAE;IAC/D,OAAOL,MAAM;EACf;EAEA,IAAI8C,KAAK,GAAGF,KAAK,GAAG,CAAC;EACrB,IAAIG,GAAG,GAAGD,KAAK,GAAG9C,MAAM;EAExB,OAAOK,IAAI,CAACkC,SAAS,CAACO,KAAK,EAAEC,GAAG,CAAC;AACnC,CAAC;;AAED;AACApD,OAAO,CAACqD,WAAW,GAAG,UAAU3C,IAAI,EAAE4C,iBAAiB,EAAEC,eAAe,EAAG;EACzED,iBAAiB,GAAI,OAAOA,iBAAiB,KAAK,WAAW,GAAI,GAAG,GAAGA,iBAAiB;EACxFC,eAAe,GAAI,OAAOA,eAAe,KAAK,WAAW,GAAI,GAAG,GAAGA,eAAe;EAClF,OAAOC,MAAM,CAAC9C,IAAI,CAACE,OAAO,CAAC0C,iBAAiB,EAAE,GAAG,CAAC,CAAC1C,OAAO,CAAC2C,eAAe,EAAE,EAAE,CAAC,CAAC;AAClF,CAAC;;AAED;AACAvD,OAAO,CAACyD,QAAQ,GAAG,YAAW;EAC5B,MAAM,IAAIvD,KAAK,CAAC,6BAA6B,CAAC;AAChD,CAAC;AAEDF,OAAO,CAAC0D,MAAM,GAAG,UAAShD,IAAI,EAAE;EAC9B,IAAIA,IAAI,KAAK0B,SAAS,IAAI1B,IAAI,CAACqB,MAAM,KAAK,CAAC,EAAE;IAC3C,OAAOhC,KAAK,CAACwC,KAAK;EACpB;EACA,IAAI7B,IAAI,KAAK,IAAI,EAAE;IACjBA,IAAI,GAAG,MAAM;EACf;EACA,IAAIA,IAAI,KAAK,KAAK,EAAE;IAClBA,IAAI,GAAG,OAAO;EAChB;EACA,IAAIM,KAAK,CAACN,IAAI,CAAC,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC3C,OAAOX,KAAK,CAACwC,KAAK;EACpB;EACA,IAAI,OAAO7B,IAAI,KAAK,QAAQ,EAAE;IAC5BA,IAAI,GAAG,EAAE,GAAGA,IAAI;EAClB;EAEA,OAAOA,IAAI,CAACE,OAAO,CAAC,QAAQ,EAAE,UAAS+C,GAAG,EAAE;IAC1C,OAAOA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC,CAACf,WAAW,CAAC,CAAC;EAClE,CAAC,CAAC;AACJ,CAAC;AAED/C,OAAO,CAAC+D,YAAY,GAAG,UAAUrD,IAAI,EAAEsD,kBAAkB,EAAE;EACzD,IAAI3C,SAAS,CAACU,MAAM,GAAG,CAAC,EAAE;IACxB,OAAOhC,KAAK,CAACkB,EAAE;EACjB;EACA,IAAIgD,KAAK,GAAGvD,IAAI,CAACuD,KAAK,CAAC,IAAIC,MAAM,CAACF,kBAAkB,CAAC,CAAC;EACtD,OAAOC,KAAK,GAAIA,KAAK,CAACA,KAAK,CAAClC,MAAM,GAAG,CAAC,GAAGkC,KAAK,CAAClC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAI,IAAI;AACxE,CAAC;AAED/B,OAAO,CAACmE,UAAU,GAAG,UAAUzD,IAAI,EAAEsD,kBAAkB,EAAEI,IAAI,EAAE;EAC7D,IAAI/C,SAAS,CAACU,MAAM,GAAG,CAAC,EAAE;IACxB,OAAOhC,KAAK,CAACkB,EAAE;EACjB;EACA,IAAIgD,KAAK,GAAGvD,IAAI,CAACuD,KAAK,CAAC,IAAIC,MAAM,CAACF,kBAAkB,CAAC,CAAC;EACtD,OAAOI,IAAI,GAAGH,KAAK,GAAG,CAAC,CAACA,KAAK;AAC/B,CAAC;AAEDjE,OAAO,CAACqE,YAAY,GAAG,UAAU3D,IAAI,EAAEsD,kBAAkB,EAAEM,WAAW,EAAE;EACtE,IAAIjD,SAAS,CAACU,MAAM,GAAG,CAAC,EAAE;IACxB,OAAOhC,KAAK,CAACkB,EAAE;EACjB;EACA,OAAOP,IAAI,CAACE,OAAO,CAAC,IAAIsD,MAAM,CAACF,kBAAkB,CAAC,EAAEM,WAAW,CAAC;AAClE,CAAC;AAEDtE,OAAO,CAACuE,OAAO,GAAG,UAAS7D,IAAI,EAAEyB,QAAQ,EAAEJ,MAAM,EAAEyC,QAAQ,EAAE;EAC3DrC,QAAQ,GAAGtC,KAAK,CAACS,WAAW,CAAC6B,QAAQ,CAAC;EACtCJ,MAAM,GAAGlC,KAAK,CAACS,WAAW,CAACyB,MAAM,CAAC;EAClC,IAAIlC,KAAK,CAACqD,UAAU,CAACf,QAAQ,EAAEJ,MAAM,CAAC,IACpC,OAAOrB,IAAI,KAAK,QAAQ,IACxB,OAAO8D,QAAQ,KAAK,QAAQ,EAAE;IAC9B,OAAOzE,KAAK,CAACwC,KAAK;EACpB;EACA,OAAO7B,IAAI,CAACoD,MAAM,CAAC,CAAC,EAAE3B,QAAQ,GAAG,CAAC,CAAC,GAAGqC,QAAQ,GAAG9D,IAAI,CAACoD,MAAM,CAAC3B,QAAQ,GAAG,CAAC,GAAGJ,MAAM,CAAC;AACrF,CAAC;AAED/B,OAAO,CAACyE,IAAI,GAAG,UAAS/D,IAAI,EAAEL,MAAM,EAAE;EACpCA,MAAM,GAAGR,KAAK,CAACS,WAAW,CAACD,MAAM,CAAC;EAClC,IAAIA,MAAM,YAAYH,KAAK,EAAE;IAC3B,OAAOG,MAAM;EACf;EACA,OAAO,IAAImC,KAAK,CAACnC,MAAM,GAAG,CAAC,CAAC,CAACoB,IAAI,CAACf,IAAI,CAAC;AACzC,CAAC;AAEDV,OAAO,CAAC0E,KAAK,GAAG,UAAShE,IAAI,EAAEL,MAAM,EAAE;EACrCA,MAAM,GAAIA,MAAM,KAAK+B,SAAS,GAAI,CAAC,GAAG/B,MAAM;EAC5CA,MAAM,GAAGR,KAAK,CAACS,WAAW,CAACD,MAAM,CAAC;EAClC,IAAIA,MAAM,YAAYH,KAAK,EAAE;IAC3B,OAAOG,MAAM;EACf;EACA,OAAOK,IAAI,GAAGA,IAAI,CAACkC,SAAS,CAAClC,IAAI,CAACqB,MAAM,GAAG1B,MAAM,CAAC,GAAGN,KAAK,CAACkB,EAAE;AAC/D,CAAC;AAEDjB,OAAO,CAAC2E,MAAM,GAAG,UAAS1C,SAAS,EAAEC,WAAW,EAAEC,QAAQ,EAAE;EAC1D,IAAIyC,OAAO;EACX,IAAI,OAAO3C,SAAS,KAAK,QAAQ,IAAI,OAAOC,WAAW,KAAK,QAAQ,EAAE;IACpE,OAAOnC,KAAK,CAACwC,KAAK;EACpB;EACAJ,QAAQ,GAAIA,QAAQ,KAAKC,SAAS,GAAI,CAAC,GAAGD,QAAQ;EAClDyC,OAAO,GAAG1C,WAAW,CAACa,WAAW,CAAC,CAAC,CAACxB,OAAO,CAACU,SAAS,CAACc,WAAW,CAAC,CAAC,EAAEZ,QAAQ,GAAG,CAAC,CAAC,GAAC,CAAC;EACpF,OAAQyC,OAAO,KAAK,CAAC,GAAE7E,KAAK,CAACwC,KAAK,GAACqC,OAAO;AAC5C,CAAC;AAED5E,OAAO,CAAC6E,KAAK,GAAG,UAAUnE,IAAI,EAAEoE,SAAS,EAAE;EACzC,OAAOpE,IAAI,CAACqE,KAAK,CAACD,SAAS,CAAC;AAC9B,CAAC;AAED9E,OAAO,CAACgF,UAAU,GAAG,UAAStE,IAAI,EAAEuE,QAAQ,EAAET,QAAQ,EAAEU,UAAU,EAAE;EAClE,IAAI7D,SAAS,CAACU,MAAM,GAAG,CAAC,EAAE;IACxB,OAAOhC,KAAK,CAACkB,EAAE;EACjB;EACA,IAAI,CAACP,IAAI,IAAI,CAACuE,QAAQ,IAAI,CAACT,QAAQ,EAAE;IACnC,OAAO9D,IAAI;EACb,CAAC,MAAM,IAAIwE,UAAU,KAAK9C,SAAS,EAAE;IACnC,OAAO1B,IAAI,CAACE,OAAO,CAAC,IAAIsD,MAAM,CAACe,QAAQ,EAAE,GAAG,CAAC,EAAET,QAAQ,CAAC;EAC1D,CAAC,MAAM;IACL,IAAIW,KAAK,GAAG,CAAC;IACb,IAAIC,CAAC,GAAG,CAAC;IACT,OAAO1E,IAAI,CAACa,OAAO,CAAC0D,QAAQ,EAAEE,KAAK,CAAC,GAAG,CAAC,EAAE;MACxCA,KAAK,GAAGzE,IAAI,CAACa,OAAO,CAAC0D,QAAQ,EAAEE,KAAK,GAAG,CAAC,CAAC;MACzCC,CAAC,EAAE;MACH,IAAIA,CAAC,KAAKF,UAAU,EAAE;QACpB,OAAOxE,IAAI,CAACkC,SAAS,CAAC,CAAC,EAAEuC,KAAK,CAAC,GAAGX,QAAQ,GAAG9D,IAAI,CAACkC,SAAS,CAACuC,KAAK,GAAGF,QAAQ,CAAClD,MAAM,CAAC;MACtF;IACF;EACF;AACF,CAAC;AAED/B,OAAO,CAACqF,CAAC,GAAG,UAAS9C,KAAK,EAAE;EAC1B,OAAQ,OAAOA,KAAK,KAAK,QAAQ,GAAIA,KAAK,GAAG,EAAE;AACjD,CAAC;;AAED;AACAvC,OAAO,CAACsF,IAAI,GAAG,YAAW;EACxB,MAAM,IAAIpF,KAAK,CAAC,yBAAyB,CAAC;AAC5C,CAAC;AAEDF,OAAO,CAACuF,IAAI,GAAG,UAAS7E,IAAI,EAAE;EAC5B,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOX,KAAK,CAACwC,KAAK;EACpB;EACA,OAAO7B,IAAI,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC4E,IAAI,CAAC,CAAC;AACxC,CAAC;AAEDxF,OAAO,CAACyF,OAAO,GAAGzF,OAAO,CAACI,IAAI;AAE9BJ,OAAO,CAAC0F,OAAO,GAAG1F,OAAO,CAACa,IAAI;AAE9Bb,OAAO,CAAC2F,KAAK,GAAG,UAASjF,IAAI,EAAE;EAC7B,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOX,KAAK,CAACwC,KAAK;EACpB;EACA,OAAO7B,IAAI,CAACmD,WAAW,CAAC,CAAC;AAC3B,CAAC;;AAED;AACA7D,OAAO,CAAC4F,KAAK,GAAG,YAAW;EACzB,MAAM,IAAI1F,KAAK,CAAC,0BAA0B,CAAC;AAC7C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}