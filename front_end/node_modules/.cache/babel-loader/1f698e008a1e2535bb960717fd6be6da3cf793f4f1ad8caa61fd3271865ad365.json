{"ast":null,"code":"var mathTrig = require('./math-trig');\nvar text = require('./text');\nvar jStat = require('jstat');\nvar utils = require('./utils/common');\nvar evalExpression = require('./utils/criteria-eval');\nvar error = require('./utils/error');\nvar misc = require('./miscellaneous');\nvar SQRT2PI = 2.5066282746310002;\nexports.AVEDEV = function () {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  return jStat.sum(jStat(range).subtract(jStat.mean(range)).abs()[0]) / range.length;\n};\nexports.AVERAGE = function () {\n  var range = utils.numbers(utils.flatten(arguments));\n  var n = range.length;\n  var sum = 0;\n  var count = 0;\n  var result;\n  for (var i = 0; i < n; i++) {\n    sum += range[i];\n    count += 1;\n  }\n  result = sum / count;\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.AVERAGEA = function () {\n  var range = utils.flatten(arguments);\n  var n = range.length;\n  var sum = 0;\n  var count = 0;\n  var result;\n  for (var i = 0; i < n; i++) {\n    var el = range[i];\n    if (typeof el === 'number') {\n      sum += el;\n    }\n    if (el === true) {\n      sum++;\n    }\n    if (el !== null) {\n      count++;\n    }\n  }\n  result = sum / count;\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.AVERAGEIF = function (range, criteria, average_range) {\n  if (arguments.length <= 1) {\n    return error.na;\n  }\n  average_range = average_range || range;\n  range = utils.flatten(range);\n  average_range = utils.parseNumberArray(utils.flatten(average_range));\n  if (average_range instanceof Error) {\n    return average_range;\n  }\n  var average_count = 0;\n  var result = 0;\n  var isWildcard = criteria === void 0 || criteria === '*';\n  var tokenizedCriteria = isWildcard ? null : evalExpression.parse(criteria + '');\n  for (var i = 0; i < range.length; i++) {\n    var value = range[i];\n    if (isWildcard) {\n      result += average_range[i];\n      average_count++;\n    } else {\n      var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n      if (evalExpression.compute(tokens)) {\n        result += average_range[i];\n        average_count++;\n      }\n    }\n  }\n  return result / average_count;\n};\nexports.AVERAGEIFS = function () {\n  // Does not work with multi dimensional ranges yet!\n  //http://office.microsoft.com/en-001/excel-help/averageifs-function-HA010047493.aspx\n  var args = utils.argsToArray(arguments);\n  var criteriaLength = (args.length - 1) / 2;\n  var range = utils.flatten(args[0]);\n  var count = 0;\n  var result = 0;\n  for (var i = 0; i < range.length; i++) {\n    var isMeetCondition = false;\n    for (var j = 0; j < criteriaLength; j++) {\n      var value = args[2 * j + 1][i];\n      var criteria = args[2 * j + 2];\n      var isWildcard = criteria === void 0 || criteria === '*';\n      var computedResult = false;\n      if (isWildcard) {\n        computedResult = true;\n      } else {\n        var tokenizedCriteria = evalExpression.parse(criteria + '');\n        var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n        computedResult = evalExpression.compute(tokens);\n      }\n\n      // Criterias are calculated as AND so any `false` breakes the loop as unmeet condition\n      if (!computedResult) {\n        isMeetCondition = false;\n        break;\n      }\n      isMeetCondition = true;\n    }\n    if (isMeetCondition) {\n      result += range[i];\n      count++;\n    }\n  }\n  var average = result / count;\n  if (isNaN(average)) {\n    return 0;\n  } else {\n    return average;\n  }\n};\nexports.BETA = {};\nexports.BETA.DIST = function (x, alpha, beta, cumulative, A, B) {\n  if (arguments.length < 4) {\n    return error.value;\n  }\n  A = A === undefined ? 0 : A;\n  B = B === undefined ? 1 : B;\n  x = utils.parseNumber(x);\n  alpha = utils.parseNumber(alpha);\n  beta = utils.parseNumber(beta);\n  A = utils.parseNumber(A);\n  B = utils.parseNumber(B);\n  if (utils.anyIsError(x, alpha, beta, A, B)) {\n    return error.value;\n  }\n  x = (x - A) / (B - A);\n  return cumulative ? jStat.beta.cdf(x, alpha, beta) : jStat.beta.pdf(x, alpha, beta);\n};\nexports.BETA.INV = function (probability, alpha, beta, A, B) {\n  A = A === undefined ? 0 : A;\n  B = B === undefined ? 1 : B;\n  probability = utils.parseNumber(probability);\n  alpha = utils.parseNumber(alpha);\n  beta = utils.parseNumber(beta);\n  A = utils.parseNumber(A);\n  B = utils.parseNumber(B);\n  if (utils.anyIsError(probability, alpha, beta, A, B)) {\n    return error.value;\n  }\n  return jStat.beta.inv(probability, alpha, beta) * (B - A) + A;\n};\nexports.BINOM = {};\nexports.BINOM.DIST = function (successes, trials, probability, cumulative) {\n  successes = utils.parseNumber(successes);\n  trials = utils.parseNumber(trials);\n  probability = utils.parseNumber(probability);\n  cumulative = utils.parseNumber(cumulative);\n  if (utils.anyIsError(successes, trials, probability, cumulative)) {\n    return error.value;\n  }\n  return cumulative ? jStat.binomial.cdf(successes, trials, probability) : jStat.binomial.pdf(successes, trials, probability);\n};\nexports.BINOM.DIST.RANGE = function (trials, probability, successes, successes2) {\n  successes2 = successes2 === undefined ? successes : successes2;\n  trials = utils.parseNumber(trials);\n  probability = utils.parseNumber(probability);\n  successes = utils.parseNumber(successes);\n  successes2 = utils.parseNumber(successes2);\n  if (utils.anyIsError(trials, probability, successes, successes2)) {\n    return error.value;\n  }\n  var result = 0;\n  for (var i = successes; i <= successes2; i++) {\n    result += mathTrig.COMBIN(trials, i) * Math.pow(probability, i) * Math.pow(1 - probability, trials - i);\n  }\n  return result;\n};\nexports.BINOM.INV = function (trials, probability, alpha) {\n  trials = utils.parseNumber(trials);\n  probability = utils.parseNumber(probability);\n  alpha = utils.parseNumber(alpha);\n  if (utils.anyIsError(trials, probability, alpha)) {\n    return error.value;\n  }\n  var x = 0;\n  while (x <= trials) {\n    if (jStat.binomial.cdf(x, trials, probability) >= alpha) {\n      return x;\n    }\n    x++;\n  }\n};\nexports.CHISQ = {};\nexports.CHISQ.DIST = function (x, k, cumulative) {\n  x = utils.parseNumber(x);\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(x, k)) {\n    return error.value;\n  }\n  return cumulative ? jStat.chisquare.cdf(x, k) : jStat.chisquare.pdf(x, k);\n};\nexports.CHISQ.DIST.RT = function (x, k) {\n  if (!x | !k) {\n    return error.na;\n  }\n  if (x < 1 || k > Math.pow(10, 10)) {\n    return error.num;\n  }\n  if (typeof x !== 'number' || typeof k !== 'number') {\n    return error.value;\n  }\n  return 1 - jStat.chisquare.cdf(x, k);\n};\nexports.CHISQ.INV = function (probability, k) {\n  probability = utils.parseNumber(probability);\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(probability, k)) {\n    return error.value;\n  }\n  return jStat.chisquare.inv(probability, k);\n};\nexports.CHISQ.INV.RT = function (p, k) {\n  if (!p | !k) {\n    return error.na;\n  }\n  if (p < 0 || p > 1 || k < 1 || k > Math.pow(10, 10)) {\n    return error.num;\n  }\n  if (typeof p !== 'number' || typeof k !== 'number') {\n    return error.value;\n  }\n  return jStat.chisquare.inv(1.0 - p, k);\n};\nexports.CHISQ.TEST = function (observed, expected) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  if (!(observed instanceof Array) || !(expected instanceof Array)) {\n    return error.value;\n  }\n  if (observed.length !== expected.length) {\n    return error.value;\n  }\n  if (observed[0] && expected[0] && observed[0].length !== expected[0].length) {\n    return error.value;\n  }\n  var row = observed.length;\n  var tmp, i, j;\n\n  // Convert single-dimension array into two-dimension array\n  for (i = 0; i < row; i++) {\n    if (!(observed[i] instanceof Array)) {\n      tmp = observed[i];\n      observed[i] = [];\n      observed[i].push(tmp);\n    }\n    if (!(expected[i] instanceof Array)) {\n      tmp = expected[i];\n      expected[i] = [];\n      expected[i].push(tmp);\n    }\n  }\n  var col = observed[0].length;\n  var dof = col === 1 ? row - 1 : (row - 1) * (col - 1);\n  var xsqr = 0;\n  var Pi = Math.PI;\n  for (i = 0; i < row; i++) {\n    for (j = 0; j < col; j++) {\n      xsqr += Math.pow(observed[i][j] - expected[i][j], 2) / expected[i][j];\n    }\n  }\n\n  // Get independency by X square and its degree of freedom\n  function ChiSq(xsqr, dof) {\n    var p = Math.exp(-0.5 * xsqr);\n    if (dof % 2 === 1) {\n      p = p * Math.sqrt(2 * xsqr / Pi);\n    }\n    var k = dof;\n    while (k >= 2) {\n      p = p * xsqr / k;\n      k = k - 2;\n    }\n    var t = p;\n    var a = dof;\n    while (t > 0.0000000001 * p) {\n      a = a + 2;\n      t = t * xsqr / a;\n      p = p + t;\n    }\n    return 1 - p;\n  }\n  return Math.round(ChiSq(xsqr, dof) * 1000000) / 1000000;\n};\nexports.COLUMN = function (matrix, index) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  if (index < 0) {\n    return error.num;\n  }\n  if (!(matrix instanceof Array) || typeof index !== 'number') {\n    return error.value;\n  }\n  if (matrix.length === 0) {\n    return undefined;\n  }\n  return jStat.col(matrix, index);\n};\nexports.COLUMNS = function (matrix) {\n  if (arguments.length !== 1) {\n    return error.na;\n  }\n  if (!(matrix instanceof Array)) {\n    return error.value;\n  }\n  if (matrix.length === 0) {\n    return 0;\n  }\n  return jStat.cols(matrix);\n};\nexports.CONFIDENCE = {};\nexports.CONFIDENCE.NORM = function (alpha, sd, n) {\n  alpha = utils.parseNumber(alpha);\n  sd = utils.parseNumber(sd);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(alpha, sd, n)) {\n    return error.value;\n  }\n  return jStat.normalci(1, alpha, sd, n)[1] - 1;\n};\nexports.CONFIDENCE.T = function (alpha, sd, n) {\n  alpha = utils.parseNumber(alpha);\n  sd = utils.parseNumber(sd);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(alpha, sd, n)) {\n    return error.value;\n  }\n  return jStat.tci(1, alpha, sd, n)[1] - 1;\n};\nexports.CORREL = function (array1, array2) {\n  array1 = utils.parseNumberArray(utils.flatten(array1));\n  array2 = utils.parseNumberArray(utils.flatten(array2));\n  if (utils.anyIsError(array1, array2)) {\n    return error.value;\n  }\n  return jStat.corrcoeff(array1, array2);\n};\nexports.COUNT = function () {\n  return utils.numbers(utils.flatten(arguments)).length;\n};\nexports.COUNTA = function () {\n  var range = utils.flatten(arguments);\n  return range.length - exports.COUNTBLANK(range);\n};\nexports.COUNTIN = function (range, value) {\n  var result = 0;\n  range = utils.flatten(range);\n  for (var i = 0; i < range.length; i++) {\n    if (range[i] === value) {\n      result++;\n    }\n  }\n  return result;\n};\nexports.COUNTBLANK = function () {\n  var range = utils.flatten(arguments);\n  var blanks = 0;\n  var element;\n  for (var i = 0; i < range.length; i++) {\n    element = range[i];\n    if (element === null || element === '') {\n      blanks++;\n    }\n  }\n  return blanks;\n};\nexports.COUNTIF = function (range, criteria) {\n  range = utils.flatten(range);\n  var isWildcard = criteria === void 0 || criteria === '*';\n  if (isWildcard) {\n    return range.length;\n  }\n  var matches = 0;\n  var tokenizedCriteria = evalExpression.parse(criteria + '');\n  for (var i = 0; i < range.length; i++) {\n    var value = range[i];\n    var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n    if (evalExpression.compute(tokens)) {\n      matches++;\n    }\n  }\n  return matches;\n};\nexports.COUNTIFS = function () {\n  var args = utils.argsToArray(arguments);\n  var results = new Array(utils.flatten(args[0]).length);\n  for (var i = 0; i < results.length; i++) {\n    results[i] = true;\n  }\n  for (i = 0; i < args.length; i += 2) {\n    var range = utils.flatten(args[i]);\n    var criteria = args[i + 1];\n    var isWildcard = criteria === void 0 || criteria === '*';\n    if (!isWildcard) {\n      var tokenizedCriteria = evalExpression.parse(criteria + '');\n      for (var j = 0; j < range.length; j++) {\n        var value = range[j];\n        var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n        results[j] = results[j] && evalExpression.compute(tokens);\n      }\n    }\n  }\n  var result = 0;\n  for (i = 0; i < results.length; i++) {\n    if (results[i]) {\n      result++;\n    }\n  }\n  return result;\n};\nexports.COUNTUNIQUE = function () {\n  return misc.UNIQUE.apply(null, utils.flatten(arguments)).length;\n};\nexports.COVARIANCE = {};\nexports.COVARIANCE.P = function (array1, array2) {\n  array1 = utils.parseNumberArray(utils.flatten(array1));\n  array2 = utils.parseNumberArray(utils.flatten(array2));\n  if (utils.anyIsError(array1, array2)) {\n    return error.value;\n  }\n  var mean1 = jStat.mean(array1);\n  var mean2 = jStat.mean(array2);\n  var result = 0;\n  var n = array1.length;\n  for (var i = 0; i < n; i++) {\n    result += (array1[i] - mean1) * (array2[i] - mean2);\n  }\n  return result / n;\n};\nexports.COVARIANCE.S = function (array1, array2) {\n  array1 = utils.parseNumberArray(utils.flatten(array1));\n  array2 = utils.parseNumberArray(utils.flatten(array2));\n  if (utils.anyIsError(array1, array2)) {\n    return error.value;\n  }\n  return jStat.covariance(array1, array2);\n};\nexports.DEVSQ = function () {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var result = 0;\n  for (var i = 0; i < range.length; i++) {\n    result += Math.pow(range[i] - mean, 2);\n  }\n  return result;\n};\nexports.EXPON = {};\nexports.EXPON.DIST = function (x, lambda, cumulative) {\n  x = utils.parseNumber(x);\n  lambda = utils.parseNumber(lambda);\n  if (utils.anyIsError(x, lambda)) {\n    return error.value;\n  }\n  return cumulative ? jStat.exponential.cdf(x, lambda) : jStat.exponential.pdf(x, lambda);\n};\nexports.F = {};\nexports.F.DIST = function (x, d1, d2, cumulative) {\n  x = utils.parseNumber(x);\n  d1 = utils.parseNumber(d1);\n  d2 = utils.parseNumber(d2);\n  if (utils.anyIsError(x, d1, d2)) {\n    return error.value;\n  }\n  return cumulative ? jStat.centralF.cdf(x, d1, d2) : jStat.centralF.pdf(x, d1, d2);\n};\nexports.F.DIST.RT = function (x, d1, d2) {\n  if (arguments.length !== 3) {\n    return error.na;\n  }\n  if (x < 0 || d1 < 1 || d2 < 1) {\n    return error.num;\n  }\n  if (typeof x !== 'number' || typeof d1 !== 'number' || typeof d2 !== 'number') {\n    return error.value;\n  }\n  return 1 - jStat.centralF.cdf(x, d1, d2);\n};\nexports.F.INV = function (probability, d1, d2) {\n  probability = utils.parseNumber(probability);\n  d1 = utils.parseNumber(d1);\n  d2 = utils.parseNumber(d2);\n  if (utils.anyIsError(probability, d1, d2)) {\n    return error.value;\n  }\n  if (probability <= 0.0 || probability > 1.0) {\n    return error.num;\n  }\n  return jStat.centralF.inv(probability, d1, d2);\n};\nexports.F.INV.RT = function (p, d1, d2) {\n  if (arguments.length !== 3) {\n    return error.na;\n  }\n  if (p < 0 || p > 1 || d1 < 1 || d1 > Math.pow(10, 10) || d2 < 1 || d2 > Math.pow(10, 10)) {\n    return error.num;\n  }\n  if (typeof p !== 'number' || typeof d1 !== 'number' || typeof d2 !== 'number') {\n    return error.value;\n  }\n  return jStat.centralF.inv(1.0 - p, d1, d2);\n};\nexports.F.TEST = function (array1, array2) {\n  if (!array1 || !array2) {\n    return error.na;\n  }\n  if (!(array1 instanceof Array) || !(array2 instanceof Array)) {\n    return error.na;\n  }\n  if (array1.length < 2 || array2.length < 2) {\n    return error.div0;\n  }\n  var sumOfSquares = function (values, x1) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n      sum += Math.pow(values[i] - x1, 2);\n    }\n    return sum;\n  };\n  var x1 = mathTrig.SUM(array1) / array1.length;\n  var x2 = mathTrig.SUM(array2) / array2.length;\n  var sum1 = sumOfSquares(array1, x1) / (array1.length - 1);\n  var sum2 = sumOfSquares(array2, x2) / (array2.length - 1);\n  return sum1 / sum2;\n};\nexports.FISHER = function (x) {\n  x = utils.parseNumber(x);\n  if (x instanceof Error) {\n    return x;\n  }\n  return Math.log((1 + x) / (1 - x)) / 2;\n};\nexports.FISHERINV = function (y) {\n  y = utils.parseNumber(y);\n  if (y instanceof Error) {\n    return y;\n  }\n  var e2y = Math.exp(2 * y);\n  return (e2y - 1) / (e2y + 1);\n};\nexports.FORECAST = function (x, data_y, data_x) {\n  x = utils.parseNumber(x);\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(x, data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  var b = num / den;\n  var a = ymean - b * xmean;\n  return a + b * x;\n};\nexports.FREQUENCY = function (data, bins) {\n  data = utils.parseNumberArray(utils.flatten(data));\n  bins = utils.parseNumberArray(utils.flatten(bins));\n  if (utils.anyIsError(data, bins)) {\n    return error.value;\n  }\n  var n = data.length;\n  var b = bins.length;\n  var r = [];\n  for (var i = 0; i <= b; i++) {\n    r[i] = 0;\n    for (var j = 0; j < n; j++) {\n      if (i === 0) {\n        if (data[j] <= bins[0]) {\n          r[0] += 1;\n        }\n      } else if (i < b) {\n        if (data[j] > bins[i - 1] && data[j] <= bins[i]) {\n          r[i] += 1;\n        }\n      } else if (i === b) {\n        if (data[j] > bins[b - 1]) {\n          r[b] += 1;\n        }\n      }\n    }\n  }\n  return r;\n};\nexports.GAMMA = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  if (number === 0) {\n    return error.num;\n  }\n  if (parseInt(number, 10) === number && number < 0) {\n    return error.num;\n  }\n  return jStat.gammafn(number);\n};\nexports.GAMMA.DIST = function (value, alpha, beta, cumulative) {\n  if (arguments.length !== 4) {\n    return error.na;\n  }\n  if (value < 0 || alpha <= 0 || beta <= 0) {\n    return error.value;\n  }\n  if (typeof value !== 'number' || typeof alpha !== 'number' || typeof beta !== 'number') {\n    return error.value;\n  }\n  return cumulative ? jStat.gamma.cdf(value, alpha, beta, true) : jStat.gamma.pdf(value, alpha, beta, false);\n};\nexports.GAMMA.INV = function (probability, alpha, beta) {\n  if (arguments.length !== 3) {\n    return error.na;\n  }\n  if (probability < 0 || probability > 1 || alpha <= 0 || beta <= 0) {\n    return error.num;\n  }\n  if (typeof probability !== 'number' || typeof alpha !== 'number' || typeof beta !== 'number') {\n    return error.value;\n  }\n  return jStat.gamma.inv(probability, alpha, beta);\n};\nexports.GAMMALN = function (number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return jStat.gammaln(number);\n};\nexports.GAMMALN.PRECISE = function (x) {\n  if (arguments.length !== 1) {\n    return error.na;\n  }\n  if (x <= 0) {\n    return error.num;\n  }\n  if (typeof x !== 'number') {\n    return error.value;\n  }\n  return jStat.gammaln(x);\n};\nexports.GAUSS = function (z) {\n  z = utils.parseNumber(z);\n  if (z instanceof Error) {\n    return z;\n  }\n  return jStat.normal.cdf(z, 0, 1) - 0.5;\n};\nexports.GEOMEAN = function () {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n  return jStat.geomean(args);\n};\nexports.GROWTH = function (known_y, known_x, new_x, use_const) {\n  // Credits: Ilmari Karonen (http://stackoverflow.com/questions/14161990/how-to-implement-growth-function-in-javascript)\n\n  known_y = utils.parseNumberArray(known_y);\n  if (known_y instanceof Error) {\n    return known_y;\n  }\n\n  // Default values for optional parameters:\n  var i;\n  if (known_x === undefined) {\n    known_x = [];\n    for (i = 1; i <= known_y.length; i++) {\n      known_x.push(i);\n    }\n  }\n  if (new_x === undefined) {\n    new_x = [];\n    for (i = 1; i <= known_y.length; i++) {\n      new_x.push(i);\n    }\n  }\n  known_x = utils.parseNumberArray(known_x);\n  new_x = utils.parseNumberArray(new_x);\n  if (utils.anyIsError(known_x, new_x)) {\n    return error.value;\n  }\n  if (use_const === undefined) {\n    use_const = true;\n  }\n\n  // Calculate sums over the data:\n  var n = known_y.length;\n  var avg_x = 0;\n  var avg_y = 0;\n  var avg_xy = 0;\n  var avg_xx = 0;\n  for (i = 0; i < n; i++) {\n    var x = known_x[i];\n    var y = Math.log(known_y[i]);\n    avg_x += x;\n    avg_y += y;\n    avg_xy += x * y;\n    avg_xx += x * x;\n  }\n  avg_x /= n;\n  avg_y /= n;\n  avg_xy /= n;\n  avg_xx /= n;\n\n  // Compute linear regression coefficients:\n  var beta;\n  var alpha;\n  if (use_const) {\n    beta = (avg_xy - avg_x * avg_y) / (avg_xx - avg_x * avg_x);\n    alpha = avg_y - beta * avg_x;\n  } else {\n    beta = avg_xy / avg_xx;\n    alpha = 0;\n  }\n\n  // Compute and return result array:\n  var new_y = [];\n  for (i = 0; i < new_x.length; i++) {\n    new_y.push(Math.exp(alpha + beta * new_x[i]));\n  }\n  return new_y;\n};\nexports.HARMEAN = function () {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var n = range.length;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    den += 1 / range[i];\n  }\n  return n / den;\n};\nexports.HYPGEOM = {};\nexports.HYPGEOM.DIST = function (x, n, M, N, cumulative) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  M = utils.parseNumber(M);\n  N = utils.parseNumber(N);\n  if (utils.anyIsError(x, n, M, N)) {\n    return error.value;\n  }\n  function pdf(x, n, M, N) {\n    return mathTrig.COMBIN(M, x) * mathTrig.COMBIN(N - M, n - x) / mathTrig.COMBIN(N, n);\n  }\n  function cdf(x, n, M, N) {\n    var result = 0;\n    for (var i = 0; i <= x; i++) {\n      result += pdf(i, n, M, N);\n    }\n    return result;\n  }\n  return cumulative ? cdf(x, n, M, N) : pdf(x, n, M, N);\n};\nexports.INTERCEPT = function (known_y, known_x) {\n  known_y = utils.parseNumberArray(known_y);\n  known_x = utils.parseNumberArray(known_x);\n  if (utils.anyIsError(known_y, known_x)) {\n    return error.value;\n  }\n  if (known_y.length !== known_x.length) {\n    return error.na;\n  }\n  return exports.FORECAST(0, known_y, known_x);\n};\nexports.KURT = function () {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var n = range.length;\n  var sigma = 0;\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 4);\n  }\n  sigma = sigma / Math.pow(jStat.stdev(range, true), 4);\n  return n * (n + 1) / ((n - 1) * (n - 2) * (n - 3)) * sigma - 3 * (n - 1) * (n - 1) / ((n - 2) * (n - 3));\n};\nexports.LARGE = function (range, k) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(range, k)) {\n    return range;\n  }\n  return range.sort(function (a, b) {\n    return b - a;\n  })[k - 1];\n};\nexports.LINEST = function (data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var ymean = jStat.mean(data_y);\n  var xmean = jStat.mean(data_x);\n  var n = data_x.length;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  var m = num / den;\n  var b = ymean - m * xmean;\n  return [m, b];\n};\n\n// According to Microsoft:\n// http://office.microsoft.com/en-us/starter-help/logest-function-HP010342665.aspx\n// LOGEST returns are based on the following linear model:\n// ln y = x1 ln m1 + ... + xn ln mn + ln b\nexports.LOGEST = function (data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  for (var i = 0; i < data_y.length; i++) {\n    data_y[i] = Math.log(data_y[i]);\n  }\n  var result = exports.LINEST(data_y, data_x);\n  result[0] = Math.round(Math.exp(result[0]) * 1000000) / 1000000;\n  result[1] = Math.round(Math.exp(result[1]) * 1000000) / 1000000;\n  return result;\n};\nexports.LOGNORM = {};\nexports.LOGNORM.DIST = function (x, mean, sd, cumulative) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(x, mean, sd)) {\n    return error.value;\n  }\n  return cumulative ? jStat.lognormal.cdf(x, mean, sd) : jStat.lognormal.pdf(x, mean, sd);\n};\nexports.LOGNORM.INV = function (probability, mean, sd) {\n  probability = utils.parseNumber(probability);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(probability, mean, sd)) {\n    return error.value;\n  }\n  return jStat.lognormal.inv(probability, mean, sd);\n};\nexports.MAX = function () {\n  var range = utils.numbers(utils.flatten(arguments));\n  return range.length === 0 ? 0 : Math.max.apply(Math, range);\n};\nexports.MAXA = function () {\n  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));\n  return range.length === 0 ? 0 : Math.max.apply(Math, range);\n};\nexports.MEDIAN = function () {\n  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));\n  var result = jStat.median(range);\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.MIN = function () {\n  var range = utils.numbers(utils.flatten(arguments));\n  return range.length === 0 ? 0 : Math.min.apply(Math, range);\n};\nexports.MINA = function () {\n  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));\n  return range.length === 0 ? 0 : Math.min.apply(Math, range);\n};\nexports.MODE = {};\nexports.MODE.MULT = function () {\n  // Credits: Roönaän\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var n = range.length;\n  var count = {};\n  var maxItems = [];\n  var max = 0;\n  var currentItem;\n  for (var i = 0; i < n; i++) {\n    currentItem = range[i];\n    count[currentItem] = count[currentItem] ? count[currentItem] + 1 : 1;\n    if (count[currentItem] > max) {\n      max = count[currentItem];\n      maxItems = [];\n    }\n    if (count[currentItem] === max) {\n      maxItems[maxItems.length] = currentItem;\n    }\n  }\n  return maxItems;\n};\nexports.MODE.SNGL = function () {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  return exports.MODE.MULT(range).sort(function (a, b) {\n    return a - b;\n  })[0];\n};\nexports.NEGBINOM = {};\nexports.NEGBINOM.DIST = function (k, r, p, cumulative) {\n  k = utils.parseNumber(k);\n  r = utils.parseNumber(r);\n  p = utils.parseNumber(p);\n  if (utils.anyIsError(k, r, p)) {\n    return error.value;\n  }\n  return cumulative ? jStat.negbin.cdf(k, r, p) : jStat.negbin.pdf(k, r, p);\n};\nexports.NORM = {};\nexports.NORM.DIST = function (x, mean, sd, cumulative) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(x, mean, sd)) {\n    return error.value;\n  }\n  if (sd <= 0) {\n    return error.num;\n  }\n\n  // Return normal distribution computed by jStat [http://jstat.org]\n  return cumulative ? jStat.normal.cdf(x, mean, sd) : jStat.normal.pdf(x, mean, sd);\n};\nexports.NORM.INV = function (probability, mean, sd) {\n  probability = utils.parseNumber(probability);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(probability, mean, sd)) {\n    return error.value;\n  }\n  return jStat.normal.inv(probability, mean, sd);\n};\nexports.NORM.S = {};\nexports.NORM.S.DIST = function (z, cumulative) {\n  z = utils.parseNumber(z);\n  if (z instanceof Error) {\n    return error.value;\n  }\n  return cumulative ? jStat.normal.cdf(z, 0, 1) : jStat.normal.pdf(z, 0, 1);\n};\nexports.NORM.S.INV = function (probability) {\n  probability = utils.parseNumber(probability);\n  if (probability instanceof Error) {\n    return error.value;\n  }\n  return jStat.normal.inv(probability, 0, 1);\n};\nexports.PEARSON = function (data_x, data_y) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var num = 0;\n  var den1 = 0;\n  var den2 = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den1 += Math.pow(data_x[i] - xmean, 2);\n    den2 += Math.pow(data_y[i] - ymean, 2);\n  }\n  return num / Math.sqrt(den1 * den2);\n};\nexports.PERCENTILE = {};\nexports.PERCENTILE.EXC = function (array, k) {\n  array = utils.parseNumberArray(utils.flatten(array));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(array, k)) {\n    return error.value;\n  }\n  array = array.sort(function (a, b) {\n    {\n      return a - b;\n    }\n  });\n  var n = array.length;\n  if (k < 1 / (n + 1) || k > 1 - 1 / (n + 1)) {\n    return error.num;\n  }\n  var l = k * (n + 1) - 1;\n  var fl = Math.floor(l);\n  return utils.cleanFloat(l === fl ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));\n};\nexports.PERCENTILE.INC = function (array, k) {\n  array = utils.parseNumberArray(utils.flatten(array));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(array, k)) {\n    return error.value;\n  }\n  array = array.sort(function (a, b) {\n    return a - b;\n  });\n  var n = array.length;\n  var l = k * (n - 1);\n  var fl = Math.floor(l);\n  return utils.cleanFloat(l === fl ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));\n};\nexports.PERCENTRANK = {};\nexports.PERCENTRANK.EXC = function (array, x, significance) {\n  significance = significance === undefined ? 3 : significance;\n  array = utils.parseNumberArray(utils.flatten(array));\n  x = utils.parseNumber(x);\n  significance = utils.parseNumber(significance);\n  if (utils.anyIsError(array, x, significance)) {\n    return error.value;\n  }\n  array = array.sort(function (a, b) {\n    return a - b;\n  });\n  var uniques = misc.UNIQUE.apply(null, array);\n  var n = array.length;\n  var m = uniques.length;\n  var power = Math.pow(10, significance);\n  var result = 0;\n  var match = false;\n  var i = 0;\n  while (!match && i < m) {\n    if (x === uniques[i]) {\n      result = (array.indexOf(uniques[i]) + 1) / (n + 1);\n      match = true;\n    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n      result = (array.indexOf(uniques[i]) + 1 + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n + 1);\n      match = true;\n    }\n    i++;\n  }\n  return Math.floor(result * power) / power;\n};\nexports.PERCENTRANK.INC = function (array, x, significance) {\n  significance = significance === undefined ? 3 : significance;\n  array = utils.parseNumberArray(utils.flatten(array));\n  x = utils.parseNumber(x);\n  significance = utils.parseNumber(significance);\n  if (utils.anyIsError(array, x, significance)) {\n    return error.value;\n  }\n  array = array.sort(function (a, b) {\n    return a - b;\n  });\n  var uniques = misc.UNIQUE.apply(null, array);\n  var n = array.length;\n  var m = uniques.length;\n  var power = Math.pow(10, significance);\n  var result = 0;\n  var match = false;\n  var i = 0;\n  while (!match && i < m) {\n    if (x === uniques[i]) {\n      result = array.indexOf(uniques[i]) / (n - 1);\n      match = true;\n    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n      result = (array.indexOf(uniques[i]) + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n - 1);\n      match = true;\n    }\n    i++;\n  }\n  return Math.floor(result * power) / power;\n};\nexports.PERMUT = function (number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return mathTrig.FACT(number) / mathTrig.FACT(number - number_chosen);\n};\nexports.PERMUTATIONA = function (number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return Math.pow(number, number_chosen);\n};\nexports.PHI = function (x) {\n  x = utils.parseNumber(x);\n  if (x instanceof Error) {\n    return error.value;\n  }\n  return Math.exp(-0.5 * x * x) / SQRT2PI;\n};\nexports.POISSON = {};\nexports.POISSON.DIST = function (x, mean, cumulative) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  if (utils.anyIsError(x, mean)) {\n    return error.value;\n  }\n  return cumulative ? jStat.poisson.cdf(x, mean) : jStat.poisson.pdf(x, mean);\n};\nexports.PROB = function (range, probability, lower, upper) {\n  if (lower === undefined) {\n    return 0;\n  }\n  upper = upper === undefined ? lower : upper;\n  range = utils.parseNumberArray(utils.flatten(range));\n  probability = utils.parseNumberArray(utils.flatten(probability));\n  lower = utils.parseNumber(lower);\n  upper = utils.parseNumber(upper);\n  if (utils.anyIsError(range, probability, lower, upper)) {\n    return error.value;\n  }\n  if (lower === upper) {\n    return range.indexOf(lower) >= 0 ? probability[range.indexOf(lower)] : 0;\n  }\n  var sorted = range.sort(function (a, b) {\n    return a - b;\n  });\n  var n = sorted.length;\n  var result = 0;\n  for (var i = 0; i < n; i++) {\n    if (sorted[i] >= lower && sorted[i] <= upper) {\n      result += probability[range.indexOf(sorted[i])];\n    }\n  }\n  return result;\n};\nexports.QUARTILE = {};\nexports.QUARTILE.EXC = function (range, quart) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  quart = utils.parseNumber(quart);\n  if (utils.anyIsError(range, quart)) {\n    return error.value;\n  }\n  switch (quart) {\n    case 1:\n      return exports.PERCENTILE.EXC(range, 0.25);\n    case 2:\n      return exports.PERCENTILE.EXC(range, 0.5);\n    case 3:\n      return exports.PERCENTILE.EXC(range, 0.75);\n    default:\n      return error.num;\n  }\n};\nexports.QUARTILE.INC = function (range, quart) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  quart = utils.parseNumber(quart);\n  if (utils.anyIsError(range, quart)) {\n    return error.value;\n  }\n  switch (quart) {\n    case 1:\n      return exports.PERCENTILE.INC(range, 0.25);\n    case 2:\n      return exports.PERCENTILE.INC(range, 0.5);\n    case 3:\n      return exports.PERCENTILE.INC(range, 0.75);\n    default:\n      return error.num;\n  }\n};\nexports.RANK = {};\nexports.RANK.AVG = function (number, range, order) {\n  number = utils.parseNumber(number);\n  range = utils.parseNumberArray(utils.flatten(range));\n  if (utils.anyIsError(number, range)) {\n    return error.value;\n  }\n  range = utils.flatten(range);\n  order = order || false;\n  var sort = order ? function (a, b) {\n    return a - b;\n  } : function (a, b) {\n    return b - a;\n  };\n  range = range.sort(sort);\n  var length = range.length;\n  var count = 0;\n  for (var i = 0; i < length; i++) {\n    if (range[i] === number) {\n      count++;\n    }\n  }\n  return count > 1 ? (2 * range.indexOf(number) + count + 1) / 2 : range.indexOf(number) + 1;\n};\nexports.RANK.EQ = function (number, range, order) {\n  number = utils.parseNumber(number);\n  range = utils.parseNumberArray(utils.flatten(range));\n  if (utils.anyIsError(number, range)) {\n    return error.value;\n  }\n  order = order || false;\n  var sort = order ? function (a, b) {\n    return a - b;\n  } : function (a, b) {\n    return b - a;\n  };\n  range = range.sort(sort);\n  return range.indexOf(number) + 1;\n};\nexports.ROW = function (matrix, index) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  if (index < 0) {\n    return error.num;\n  }\n  if (!(matrix instanceof Array) || typeof index !== 'number') {\n    return error.value;\n  }\n  if (matrix.length === 0) {\n    return undefined;\n  }\n  return jStat.row(matrix, index);\n};\nexports.ROWS = function (matrix) {\n  if (arguments.length !== 1) {\n    return error.na;\n  }\n  if (!(matrix instanceof Array)) {\n    return error.value;\n  }\n  if (matrix.length === 0) {\n    return 0;\n  }\n  return jStat.rows(matrix);\n};\nexports.RSQ = function (data_x, data_y) {\n  // no need to flatten here, PEARSON will take care of that\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  if (utils.anyIsError(data_x, data_y)) {\n    return error.value;\n  }\n  return Math.pow(exports.PEARSON(data_x, data_y), 2);\n};\nexports.SKEW = function () {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var n = range.length;\n  var sigma = 0;\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 3);\n  }\n  return n * sigma / ((n - 1) * (n - 2) * Math.pow(jStat.stdev(range, true), 3));\n};\nexports.SKEW.P = function () {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var n = range.length;\n  var m2 = 0;\n  var m3 = 0;\n  for (var i = 0; i < n; i++) {\n    m3 += Math.pow(range[i] - mean, 3);\n    m2 += Math.pow(range[i] - mean, 2);\n  }\n  m3 = m3 / n;\n  m2 = m2 / n;\n  return m3 / Math.pow(m2, 3 / 2);\n};\nexports.SLOPE = function (data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  return num / den;\n};\nexports.SMALL = function (range, k) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(range, k)) {\n    return range;\n  }\n  return range.sort(function (a, b) {\n    return a - b;\n  })[k - 1];\n};\nexports.STANDARDIZE = function (x, mean, sd) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(x, mean, sd)) {\n    return error.value;\n  }\n  return (x - mean) / sd;\n};\nexports.STDEV = {};\nexports.STDEV.P = function () {\n  var v = exports.VAR.P.apply(this, arguments);\n  var result = Math.sqrt(v);\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.STDEV.S = function () {\n  var v = exports.VAR.S.apply(this, arguments);\n  var result = Math.sqrt(v);\n  return result;\n};\nexports.STDEVA = function () {\n  var v = exports.VARA.apply(this, arguments);\n  var result = Math.sqrt(v);\n  return result;\n};\nexports.STDEVPA = function () {\n  var v = exports.VARPA.apply(this, arguments);\n  var result = Math.sqrt(v);\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.STEYX = function (data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var lft = 0;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    lft += Math.pow(data_y[i] - ymean, 2);\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  return Math.sqrt((lft - num * num / den) / (n - 2));\n};\nexports.TRANSPOSE = function (matrix) {\n  if (!matrix) {\n    return error.na;\n  }\n  return jStat.transpose(matrix);\n};\nexports.T = text.T;\nexports.T.DIST = function (x, df, cumulative) {\n  x = utils.parseNumber(x);\n  df = utils.parseNumber(df);\n  if (utils.anyIsError(x, df)) {\n    return error.value;\n  }\n  return cumulative ? jStat.studentt.cdf(x, df) : jStat.studentt.pdf(x, df);\n};\nexports.T.DIST['2T'] = function (x, df) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  if (x < 0 || df < 1) {\n    return error.num;\n  }\n  if (typeof x !== 'number' || typeof df !== 'number') {\n    return error.value;\n  }\n  return (1 - jStat.studentt.cdf(x, df)) * 2;\n};\nexports.T.DIST.RT = function (x, df) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n  if (x < 0 || df < 1) {\n    return error.num;\n  }\n  if (typeof x !== 'number' || typeof df !== 'number') {\n    return error.value;\n  }\n  return 1 - jStat.studentt.cdf(x, df);\n};\nexports.T.INV = function (probability, df) {\n  probability = utils.parseNumber(probability);\n  df = utils.parseNumber(df);\n  if (utils.anyIsError(probability, df)) {\n    return error.value;\n  }\n  return jStat.studentt.inv(probability, df);\n};\nexports.T.INV['2T'] = function (probability, df) {\n  probability = utils.parseNumber(probability);\n  df = utils.parseNumber(df);\n  if (probability <= 0 || probability > 1 || df < 1) {\n    return error.num;\n  }\n  if (utils.anyIsError(probability, df)) {\n    return error.value;\n  }\n  return Math.abs(jStat.studentt.inv(probability / 2, df));\n};\n\n// The algorithm can be found here:\n// http://www.chem.uoa.gr/applets/AppletTtest/Appl_Ttest2.html\nexports.T.TEST = function (data_x, data_y) {\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  if (utils.anyIsError(data_x, data_y)) {\n    return error.value;\n  }\n  var mean_x = jStat.mean(data_x);\n  var mean_y = jStat.mean(data_y);\n  var s_x = 0;\n  var s_y = 0;\n  var i;\n  for (i = 0; i < data_x.length; i++) {\n    s_x += Math.pow(data_x[i] - mean_x, 2);\n  }\n  for (i = 0; i < data_y.length; i++) {\n    s_y += Math.pow(data_y[i] - mean_y, 2);\n  }\n  s_x = s_x / (data_x.length - 1);\n  s_y = s_y / (data_y.length - 1);\n  var t = Math.abs(mean_x - mean_y) / Math.sqrt(s_x / data_x.length + s_y / data_y.length);\n  return exports.T.DIST['2T'](t, data_x.length + data_y.length - 2);\n};\nexports.TREND = function (data_y, data_x, new_data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  new_data_x = utils.parseNumberArray(utils.flatten(new_data_x));\n  if (utils.anyIsError(data_y, data_x, new_data_x)) {\n    return error.value;\n  }\n  var linest = exports.LINEST(data_y, data_x);\n  var m = linest[0];\n  var b = linest[1];\n  var result = [];\n  new_data_x.forEach(function (x) {\n    result.push(m * x + b);\n  });\n  return result;\n};\nexports.TRIMMEAN = function (range, percent) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  percent = utils.parseNumber(percent);\n  if (utils.anyIsError(range, percent)) {\n    return error.value;\n  }\n  var trim = mathTrig.FLOOR(range.length * percent, 2) / 2;\n  return jStat.mean(utils.initial(utils.rest(range.sort(function (a, b) {\n    return a - b;\n  }), trim), trim));\n};\nexports.VAR = {};\nexports.VAR.P = function () {\n  var range = utils.numbers(utils.flatten(arguments));\n  var n = range.length;\n  var sigma = 0;\n  var mean = exports.AVERAGE(range);\n  var result;\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 2);\n  }\n  result = sigma / n;\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.VAR.S = function () {\n  var range = utils.numbers(utils.flatten(arguments));\n  var n = range.length;\n  var sigma = 0;\n  var mean = exports.AVERAGE(range);\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 2);\n  }\n  return sigma / (n - 1);\n};\nexports.VARA = function () {\n  var range = utils.flatten(arguments);\n  var n = range.length;\n  var sigma = 0;\n  var count = 0;\n  var mean = exports.AVERAGEA(range);\n  for (var i = 0; i < n; i++) {\n    var el = range[i];\n    if (typeof el === 'number') {\n      sigma += Math.pow(el - mean, 2);\n    } else if (el === true) {\n      sigma += Math.pow(1 - mean, 2);\n    } else {\n      sigma += Math.pow(0 - mean, 2);\n    }\n    if (el !== null) {\n      count++;\n    }\n  }\n  return sigma / (count - 1);\n};\nexports.VARPA = function () {\n  var range = utils.flatten(arguments);\n  var n = range.length;\n  var sigma = 0;\n  var count = 0;\n  var mean = exports.AVERAGEA(range);\n  var result;\n  for (var i = 0; i < n; i++) {\n    var el = range[i];\n    if (typeof el === 'number') {\n      sigma += Math.pow(el - mean, 2);\n    } else if (el === true) {\n      sigma += Math.pow(1 - mean, 2);\n    } else {\n      sigma += Math.pow(0 - mean, 2);\n    }\n    if (el !== null) {\n      count++;\n    }\n  }\n  result = sigma / count;\n  if (isNaN(result)) {\n    result = error.num;\n  }\n  return result;\n};\nexports.WEIBULL = {};\nexports.WEIBULL.DIST = function (x, alpha, beta, cumulative) {\n  x = utils.parseNumber(x);\n  alpha = utils.parseNumber(alpha);\n  beta = utils.parseNumber(beta);\n  if (utils.anyIsError(x, alpha, beta)) {\n    return error.value;\n  }\n  return cumulative ? 1 - Math.exp(-Math.pow(x / beta, alpha)) : Math.pow(x, alpha - 1) * Math.exp(-Math.pow(x / beta, alpha)) * alpha / Math.pow(beta, alpha);\n};\nexports.Z = {};\nexports.Z.TEST = function (range, x, sd) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  x = utils.parseNumber(x);\n  if (utils.anyIsError(range, x)) {\n    return error.value;\n  }\n  sd = sd || exports.STDEV.S(range);\n  var n = range.length;\n  return 1 - exports.NORM.S.DIST((exports.AVERAGE(range) - x) / (sd / Math.sqrt(n)), true);\n};","map":{"version":3,"names":["mathTrig","require","text","jStat","utils","evalExpression","error","misc","SQRT2PI","exports","AVEDEV","range","parseNumberArray","flatten","arguments","Error","sum","subtract","mean","abs","length","AVERAGE","numbers","n","count","result","i","isNaN","num","AVERAGEA","el","AVERAGEIF","criteria","average_range","na","average_count","isWildcard","tokenizedCriteria","parse","value","tokens","createToken","TOKEN_TYPE_LITERAL","concat","compute","AVERAGEIFS","args","argsToArray","criteriaLength","isMeetCondition","j","computedResult","average","BETA","DIST","x","alpha","beta","cumulative","A","B","undefined","parseNumber","anyIsError","cdf","pdf","INV","probability","inv","BINOM","successes","trials","binomial","RANGE","successes2","COMBIN","Math","pow","CHISQ","k","chisquare","RT","p","TEST","observed","expected","Array","row","tmp","push","col","dof","xsqr","Pi","PI","ChiSq","exp","sqrt","t","a","round","COLUMN","matrix","index","COLUMNS","cols","CONFIDENCE","NORM","sd","normalci","T","tci","CORREL","array1","array2","corrcoeff","COUNT","COUNTA","COUNTBLANK","COUNTIN","blanks","element","COUNTIF","matches","COUNTIFS","results","COUNTUNIQUE","UNIQUE","apply","COVARIANCE","P","mean1","mean2","S","covariance","DEVSQ","EXPON","lambda","exponential","F","d1","d2","centralF","div0","sumOfSquares","values","x1","SUM","x2","sum1","sum2","FISHER","log","FISHERINV","y","e2y","FORECAST","data_y","data_x","xmean","ymean","den","b","FREQUENCY","data","bins","r","GAMMA","number","parseInt","gammafn","gamma","GAMMALN","gammaln","PRECISE","GAUSS","z","normal","GEOMEAN","geomean","GROWTH","known_y","known_x","new_x","use_const","avg_x","avg_y","avg_xy","avg_xx","new_y","HARMEAN","HYPGEOM","M","N","INTERCEPT","KURT","sigma","stdev","LARGE","sort","LINEST","m","LOGEST","LOGNORM","lognormal","MAX","max","MAXA","arrayValuesToNumbers","MEDIAN","median","MIN","min","MINA","MODE","MULT","maxItems","currentItem","SNGL","NEGBINOM","negbin","PEARSON","den1","den2","PERCENTILE","EXC","array","l","fl","floor","cleanFloat","INC","PERCENTRANK","significance","uniques","power","match","indexOf","PERMUT","number_chosen","FACT","PERMUTATIONA","PHI","POISSON","poisson","PROB","lower","upper","sorted","QUARTILE","quart","RANK","AVG","order","EQ","ROW","ROWS","rows","RSQ","SKEW","m2","m3","SLOPE","SMALL","STANDARDIZE","STDEV","v","VAR","STDEVA","VARA","STDEVPA","VARPA","STEYX","lft","TRANSPOSE","transpose","df","studentt","mean_x","mean_y","s_x","s_y","TREND","new_data_x","linest","forEach","TRIMMEAN","percent","trim","FLOOR","initial","rest","WEIBULL","Z"],"sources":["D:/WebNodeJs/node18/trelo_project/front_end/node_modules/@handsontable/formulajs/lib/statistical.js"],"sourcesContent":["var mathTrig = require('./math-trig');\nvar text = require('./text');\nvar jStat = require('jstat');\nvar utils = require('./utils/common');\nvar evalExpression = require('./utils/criteria-eval');\nvar error = require('./utils/error');\nvar misc = require('./miscellaneous');\n\nvar SQRT2PI = 2.5066282746310002;\n\nexports.AVEDEV = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  return jStat.sum(jStat(range).subtract(jStat.mean(range)).abs()[0]) / range.length;\n};\n\nexports.AVERAGE = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  var n = range.length;\n  var sum = 0;\n  var count = 0;\n  var result;\n\n  for (var i = 0; i < n; i++) {\n    sum += range[i];\n    count += 1;\n  }\n  result = sum / count;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.AVERAGEA = function() {\n  var range = utils.flatten(arguments);\n  var n = range.length;\n  var sum = 0;\n  var count = 0;\n  var result;\n  for (var i = 0; i < n; i++) {\n    var el = range[i];\n    if (typeof el === 'number') {\n      sum += el;\n    }\n    if (el === true) {\n      sum++;\n    }\n    if (el !== null) {\n      count++;\n    }\n  }\n  result = sum / count;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.AVERAGEIF = function(range, criteria, average_range) {\n  if (arguments.length <= 1) {\n    return error.na;\n  }\n  average_range = average_range || range;\n  range = utils.flatten(range);\n  average_range = utils.parseNumberArray(utils.flatten(average_range));\n\n  if (average_range instanceof Error) {\n    return average_range;\n  }\n  var average_count = 0;\n  var result = 0;\n  var isWildcard = criteria === void 0 || criteria === '*';\n  var tokenizedCriteria = isWildcard ? null : evalExpression.parse(criteria + '');\n\n  for (var i = 0; i < range.length; i++) {\n    var value = range[i];\n\n    if (isWildcard) {\n      result += average_range[i];\n      average_count++;\n    } else {\n      var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n      if (evalExpression.compute(tokens)) {\n        result += average_range[i];\n        average_count++;\n      }\n    }\n  }\n\n  return result / average_count;\n};\n\nexports.AVERAGEIFS = function() {\n  // Does not work with multi dimensional ranges yet!\n  //http://office.microsoft.com/en-001/excel-help/averageifs-function-HA010047493.aspx\n  var args = utils.argsToArray(arguments);\n  var criteriaLength = (args.length - 1) / 2;\n  var range = utils.flatten(args[0]);\n  var count = 0;\n  var result = 0;\n\n  for (var i = 0; i < range.length; i++) {\n    var isMeetCondition = false;\n\n    for (var j = 0; j < criteriaLength; j++) {\n      var value = args[2 * j + 1][i];\n      var criteria = args[2 * j + 2];\n      var isWildcard = criteria === void 0 || criteria === '*';\n      var computedResult = false;\n\n      if (isWildcard) {\n        computedResult = true;\n      } else {\n        var tokenizedCriteria = evalExpression.parse(criteria + '');\n        var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n        computedResult = evalExpression.compute(tokens);\n      }\n\n      // Criterias are calculated as AND so any `false` breakes the loop as unmeet condition\n      if (!computedResult) {\n        isMeetCondition = false;\n        break;\n      }\n\n      isMeetCondition = true;\n    }\n\n    if (isMeetCondition) {\n      result += range[i];\n      count++;\n    }\n  }\n\n  var average = result / count;\n\n  if (isNaN(average)) {\n    return 0;\n  } else {\n    return average;\n  }\n};\n\nexports.BETA = {};\n\nexports.BETA.DIST = function(x, alpha, beta, cumulative, A, B) {\n  if (arguments.length < 4) {\n    return error.value;\n  }\n\n  A = (A === undefined) ? 0 : A;\n  B = (B === undefined) ? 1 : B;\n\n  x = utils.parseNumber(x);\n  alpha = utils.parseNumber(alpha);\n  beta = utils.parseNumber(beta);\n  A = utils.parseNumber(A);\n  B = utils.parseNumber(B);\n  if (utils.anyIsError(x, alpha, beta, A, B)) {\n    return error.value;\n  }\n\n  x = (x - A) / (B - A);\n  return (cumulative) ? jStat.beta.cdf(x, alpha, beta) : jStat.beta.pdf(x, alpha, beta);\n};\n\nexports.BETA.INV = function(probability, alpha, beta, A, B) {\n  A = (A === undefined) ? 0 : A;\n  B = (B === undefined) ? 1 : B;\n\n  probability = utils.parseNumber(probability);\n  alpha = utils.parseNumber(alpha);\n  beta = utils.parseNumber(beta);\n  A = utils.parseNumber(A);\n  B = utils.parseNumber(B);\n  if (utils.anyIsError(probability, alpha, beta, A, B)) {\n    return error.value;\n  }\n\n  return jStat.beta.inv(probability, alpha, beta) * (B - A) + A;\n};\n\nexports.BINOM = {};\n\nexports.BINOM.DIST = function(successes, trials, probability, cumulative) {\n  successes = utils.parseNumber(successes);\n  trials = utils.parseNumber(trials);\n  probability = utils.parseNumber(probability);\n  cumulative = utils.parseNumber(cumulative);\n  if (utils.anyIsError(successes, trials, probability, cumulative)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.binomial.cdf(successes, trials, probability) : jStat.binomial.pdf(successes, trials, probability);\n};\n\nexports.BINOM.DIST.RANGE = function(trials, probability, successes, successes2) {\n  successes2 = (successes2 === undefined) ? successes : successes2;\n\n  trials = utils.parseNumber(trials);\n  probability = utils.parseNumber(probability);\n  successes = utils.parseNumber(successes);\n  successes2 = utils.parseNumber(successes2);\n  if (utils.anyIsError(trials, probability, successes, successes2)) {\n    return error.value;\n  }\n\n  var result = 0;\n  for (var i = successes; i <= successes2; i++) {\n    result += mathTrig.COMBIN(trials, i) * Math.pow(probability, i) * Math.pow(1 - probability, trials - i);\n  }\n  return result;\n};\n\nexports.BINOM.INV = function(trials, probability, alpha) {\n  trials = utils.parseNumber(trials);\n  probability = utils.parseNumber(probability);\n  alpha = utils.parseNumber(alpha);\n  if (utils.anyIsError(trials, probability, alpha)) {\n    return error.value;\n  }\n\n  var x = 0;\n  while (x <= trials) {\n    if (jStat.binomial.cdf(x, trials, probability) >= alpha) {\n      return x;\n    }\n    x++;\n  }\n};\n\nexports.CHISQ = {};\n\nexports.CHISQ.DIST = function(x, k, cumulative) {\n  x = utils.parseNumber(x);\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(x, k)) {\n    return error.value;\n  }\n\n  return (cumulative) ? jStat.chisquare.cdf(x, k) : jStat.chisquare.pdf(x, k);\n};\n\nexports.CHISQ.DIST.RT = function(x, k) {\n  if (!x | !k) {\n    return error.na;\n  }\n\n  if (x < 1 || k > Math.pow(10, 10)) {\n    return error.num;\n  }\n\n  if ((typeof x !== 'number') || (typeof k !== 'number')) {\n    return error.value;\n  }\n\n  return 1 -  jStat.chisquare.cdf(x, k);\n};\n\nexports.CHISQ.INV = function(probability, k) {\n  probability = utils.parseNumber(probability);\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(probability, k)) {\n    return error.value;\n  }\n  return jStat.chisquare.inv(probability, k);\n};\n\nexports.CHISQ.INV.RT = function(p, k) {\n  if (!p | !k) {\n    return error.na;\n  }\n\n  if (p < 0 || p > 1 || k < 1 || k > Math.pow(10, 10)) {\n    return error.num;\n  }\n\n  if ((typeof p !== 'number') || (typeof k !== 'number')) {\n    return error.value;\n  }\n\n  return jStat.chisquare.inv(1.0 - p, k);\n};\n\nexports.CHISQ.TEST = function(observed, expected) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if ((!(observed instanceof Array)) || (!(expected instanceof Array))) {\n    return error.value;\n  }\n\n  if (observed.length !== expected.length) {\n    return error.value;\n  }\n\n  if (observed[0] && expected[0] &&\n    observed[0].length !== expected[0].length) {\n    return error.value;\n  }\n\n  var row = observed.length;\n  var tmp, i, j;\n\n  // Convert single-dimension array into two-dimension array\n  for (i = 0; i < row; i ++) {\n    if (!(observed[i] instanceof Array)) {\n      tmp = observed[i];\n      observed[i] = [];\n      observed[i].push(tmp);\n    }\n    if (!(expected[i] instanceof Array)) {\n      tmp = expected[i];\n      expected[i] = [];\n      expected[i].push(tmp);\n    }\n  }\n\n  var col = observed[0].length;\n  var dof = (col === 1) ? row-1 : (row-1)*(col-1);\n  var xsqr = 0;\n  var Pi =Math.PI;\n\n  for (i = 0; i < row; i ++) {\n    for (j = 0; j < col; j ++) {\n      xsqr += Math.pow((observed[i][j] - expected[i][j]), 2) / expected[i][j];\n    }\n  }\n\n  // Get independency by X square and its degree of freedom\n  function ChiSq(xsqr, dof) {\n    var p = Math.exp(-0.5 * xsqr);\n    if((dof%2) === 1) {\n      p = p * Math.sqrt(2 * xsqr/Pi);\n    }\n    var k = dof;\n    while(k >= 2) {\n      p = p * xsqr/k;\n      k = k - 2;\n    }\n    var t = p;\n    var a = dof;\n    while (t > 0.0000000001*p) {\n      a = a + 2;\n      t = t * xsqr/a;\n      p = p + t;\n    }\n    return 1-p;\n  }\n\n  return Math.round(ChiSq(xsqr, dof) * 1000000) / 1000000;\n};\n\nexports.COLUMN = function(matrix, index) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if (index < 0) {\n    return error.num;\n  }\n\n  if (!(matrix instanceof Array) || (typeof index !== 'number')) {\n    return error.value;\n  }\n\n  if (matrix.length === 0) {\n    return undefined;\n  }\n\n  return jStat.col(matrix, index);\n};\n\nexports.COLUMNS = function(matrix) {\n  if (arguments.length !== 1) {\n    return error.na;\n  }\n\n  if (!(matrix instanceof Array)) {\n    return error.value;\n  }\n\n  if (matrix.length === 0) {\n    return 0;\n  }\n\n  return jStat.cols(matrix);\n};\n\nexports.CONFIDENCE = {};\n\nexports.CONFIDENCE.NORM = function(alpha, sd, n) {\n  alpha = utils.parseNumber(alpha);\n  sd = utils.parseNumber(sd);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(alpha, sd, n)) {\n    return error.value;\n  }\n  return jStat.normalci(1, alpha, sd, n)[1] - 1;\n};\n\nexports.CONFIDENCE.T = function(alpha, sd, n) {\n  alpha = utils.parseNumber(alpha);\n  sd = utils.parseNumber(sd);\n  n = utils.parseNumber(n);\n  if (utils.anyIsError(alpha, sd, n)) {\n    return error.value;\n  }\n  return jStat.tci(1, alpha, sd, n)[1] - 1;\n};\n\nexports.CORREL = function(array1, array2) {\n  array1 = utils.parseNumberArray(utils.flatten(array1));\n  array2 = utils.parseNumberArray(utils.flatten(array2));\n  if (utils.anyIsError(array1, array2)) {\n    return error.value;\n  }\n  return jStat.corrcoeff(array1, array2);\n};\n\nexports.COUNT = function() {\n  return utils.numbers(utils.flatten(arguments)).length;\n};\n\nexports.COUNTA = function() {\n  var range = utils.flatten(arguments);\n  return range.length - exports.COUNTBLANK(range);\n};\n\nexports.COUNTIN = function (range, value) {\n  var result = 0;\n\n  range = utils.flatten(range);\n\n  for (var i = 0; i < range.length; i++) {\n    if (range[i] === value) {\n      result++;\n    }\n  }\n  return result;\n};\n\n\nexports.COUNTBLANK = function() {\n  var range = utils.flatten(arguments);\n  var blanks = 0;\n  var element;\n  for (var i = 0; i < range.length; i++) {\n    element = range[i];\n    if (element === null || element === '') {\n      blanks++;\n    }\n  }\n  return blanks;\n};\n\nexports.COUNTIF = function(range, criteria) {\n  range = utils.flatten(range);\n\n  var isWildcard = criteria === void 0 || criteria === '*';\n\n  if (isWildcard) {\n    return range.length;\n  }\n\n  var matches = 0;\n  var tokenizedCriteria = evalExpression.parse(criteria + '');\n\n  for (var i = 0; i < range.length; i++) {\n    var value = range[i];\n    var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n    if (evalExpression.compute(tokens)) {\n      matches++;\n    }\n  }\n\n  return matches;\n};\n\nexports.COUNTIFS = function() {\n  var args = utils.argsToArray(arguments);\n  var results = new Array(utils.flatten(args[0]).length);\n\n  for (var i = 0; i < results.length; i++) {\n    results[i] = true;\n  }\n  for (i = 0; i < args.length; i += 2) {\n    var range = utils.flatten(args[i]);\n    var criteria = args[i + 1];\n    var isWildcard = criteria === void 0 || criteria === '*';\n\n    if (!isWildcard) {\n      var tokenizedCriteria = evalExpression.parse(criteria + '');\n\n      for (var j = 0; j < range.length; j++) {\n        var value = range[j];\n        var tokens = [evalExpression.createToken(value, evalExpression.TOKEN_TYPE_LITERAL)].concat(tokenizedCriteria);\n\n        results[j] = results[j] && evalExpression.compute(tokens);\n      }\n    }\n  }\n  var result = 0;\n  for (i = 0; i < results.length; i++) {\n    if (results[i]) {\n      result++;\n    }\n  }\n\n  return result;\n};\n\nexports.COUNTUNIQUE = function () {\n  return misc.UNIQUE.apply(null, utils.flatten(arguments)).length;\n};\n\nexports.COVARIANCE = {};\n\nexports.COVARIANCE.P = function(array1, array2) {\n  array1 = utils.parseNumberArray(utils.flatten(array1));\n  array2 = utils.parseNumberArray(utils.flatten(array2));\n  if (utils.anyIsError(array1, array2)) {\n    return error.value;\n  }\n  var mean1 = jStat.mean(array1);\n  var mean2 = jStat.mean(array2);\n  var result = 0;\n  var n = array1.length;\n  for (var i = 0; i < n; i++) {\n    result += (array1[i] - mean1) * (array2[i] - mean2);\n  }\n  return result / n;\n};\n\nexports.COVARIANCE.S = function(array1, array2) {\n  array1 = utils.parseNumberArray(utils.flatten(array1));\n  array2 = utils.parseNumberArray(utils.flatten(array2));\n  if (utils.anyIsError(array1, array2)) {\n    return error.value;\n  }\n  return jStat.covariance(array1, array2);\n};\n\nexports.DEVSQ = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var result = 0;\n  for (var i = 0; i < range.length; i++) {\n    result += Math.pow((range[i] - mean), 2);\n  }\n  return result;\n};\n\nexports.EXPON = {};\n\nexports.EXPON.DIST = function(x, lambda, cumulative) {\n  x = utils.parseNumber(x);\n  lambda = utils.parseNumber(lambda);\n  if (utils.anyIsError(x, lambda)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.exponential.cdf(x, lambda) : jStat.exponential.pdf(x, lambda);\n};\n\nexports.F = {};\n\nexports.F.DIST = function(x, d1, d2, cumulative) {\n  x = utils.parseNumber(x);\n  d1 = utils.parseNumber(d1);\n  d2 = utils.parseNumber(d2);\n  if (utils.anyIsError(x, d1, d2)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.centralF.cdf(x, d1, d2) : jStat.centralF.pdf(x, d1, d2);\n};\n\nexports.F.DIST.RT = function(x, d1, d2) {\n  if (arguments.length !== 3) {\n    return error.na;\n  }\n\n  if (x < 0 || d1 < 1 || d2 < 1) {\n    return error.num;\n  }\n\n  if ((typeof x !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {\n    return error.value;\n  }\n\n  return 1 - jStat.centralF.cdf(x, d1, d2);\n};\n\nexports.F.INV = function(probability, d1, d2) {\n  probability = utils.parseNumber(probability);\n  d1 = utils.parseNumber(d1);\n  d2 = utils.parseNumber(d2);\n  if (utils.anyIsError(probability, d1, d2)) {\n    return error.value;\n  }\n  if (probability <= 0.0 || probability > 1.0) {\n    return error.num;\n  }\n\n  return jStat.centralF.inv(probability, d1, d2);\n};\n\nexports.F.INV.RT = function(p, d1, d2) {\n  if (arguments.length !== 3) {\n    return error.na;\n  }\n\n  if (p < 0 || p > 1 || d1 < 1 || d1 > Math.pow(10, 10) || d2 < 1 || d2 > Math.pow(10, 10)) {\n    return error.num;\n  }\n\n  if ((typeof p !== 'number') || (typeof d1 !== 'number') || (typeof d2 !== 'number')) {\n    return error.value;\n  }\n\n  return jStat.centralF.inv(1.0 - p, d1, d2);\n};\n\nexports.F.TEST = function(array1, array2) {\n  if (!array1 || !array2) {\n    return error.na;\n  }\n\n  if (!(array1 instanceof Array) || !(array2 instanceof Array)) {\n    return error.na;\n  }\n\n  if (array1.length < 2 || array2.length < 2) {\n    return error.div0;\n  }\n\n  var sumOfSquares = function(values, x1) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n      sum +=Math.pow((values[i] - x1), 2);\n    }\n    return sum;\n  };\n\n  var x1 = mathTrig.SUM(array1) / array1.length;\n  var x2 = mathTrig.SUM(array2) / array2.length;\n  var sum1 = sumOfSquares(array1, x1) / (array1.length - 1);\n  var sum2 = sumOfSquares(array2, x2) / (array2.length - 1);\n\n  return sum1 / sum2;\n};\n\nexports.FISHER = function(x) {\n  x = utils.parseNumber(x);\n  if (x instanceof Error) {\n    return x;\n  }\n  return Math.log((1 + x) / (1 - x)) / 2;\n};\n\nexports.FISHERINV = function(y) {\n  y = utils.parseNumber(y);\n  if (y instanceof Error) {\n    return y;\n  }\n  var e2y = Math.exp(2 * y);\n  return (e2y - 1) / (e2y + 1);\n};\n\nexports.FORECAST = function(x, data_y, data_x) {\n  x = utils.parseNumber(x);\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(x, data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  var b = num / den;\n  var a = ymean - b * xmean;\n  return a + b * x;\n};\n\nexports.FREQUENCY = function(data, bins) {\n  data = utils.parseNumberArray(utils.flatten(data));\n  bins = utils.parseNumberArray(utils.flatten(bins));\n  if (utils.anyIsError(data, bins)) {\n    return error.value;\n  }\n  var n = data.length;\n  var b = bins.length;\n  var r = [];\n  for (var i = 0; i <= b; i++) {\n    r[i] = 0;\n    for (var j = 0; j < n; j++) {\n      if (i === 0) {\n        if (data[j] <= bins[0]) {\n          r[0] += 1;\n        }\n      } else if (i < b) {\n        if (data[j] > bins[i - 1] && data[j] <= bins[i]) {\n          r[i] += 1;\n        }\n      } else if (i === b) {\n        if (data[j] > bins[b - 1]) {\n          r[b] += 1;\n        }\n      }\n    }\n  }\n  return r;\n};\n\n\nexports.GAMMA = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n\n  if (number === 0) {\n    return error.num;\n  }\n\n  if (parseInt(number, 10) === number && number < 0) {\n    return error.num;\n  }\n\n  return jStat.gammafn(number);\n};\n\nexports.GAMMA.DIST = function(value, alpha, beta, cumulative) {\n  if (arguments.length !== 4) {\n    return error.na;\n  }\n\n  if (value < 0 || alpha <= 0 || beta <= 0) {\n    return error.value;\n  }\n\n  if ((typeof value !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {\n    return error.value;\n  }\n\n  return cumulative ? jStat.gamma.cdf(value, alpha, beta, true) : jStat.gamma.pdf(value, alpha, beta, false);\n};\n\nexports.GAMMA.INV = function(probability, alpha, beta) {\n  if (arguments.length !== 3) {\n    return error.na;\n  }\n\n  if (probability < 0 || probability > 1 || alpha <= 0 || beta <= 0) {\n    return error.num;\n  }\n\n  if ((typeof probability !== 'number') || (typeof alpha !== 'number') || (typeof beta !== 'number')) {\n    return error.value;\n  }\n\n  return jStat.gamma.inv(probability, alpha, beta);\n};\n\nexports.GAMMALN = function(number) {\n  number = utils.parseNumber(number);\n  if (number instanceof Error) {\n    return number;\n  }\n  return jStat.gammaln(number);\n};\n\nexports.GAMMALN.PRECISE = function(x) {\n  if (arguments.length !== 1) {\n    return error.na;\n  }\n\n  if (x <= 0) {\n    return error.num;\n  }\n\n  if (typeof x !== 'number') {\n    return error.value;\n  }\n\n  return jStat.gammaln(x);\n};\n\nexports.GAUSS = function(z) {\n  z = utils.parseNumber(z);\n  if (z instanceof Error) {\n    return z;\n  }\n  return jStat.normal.cdf(z, 0, 1) - 0.5;\n};\n\nexports.GEOMEAN = function() {\n  var args = utils.parseNumberArray(utils.flatten(arguments));\n  if (args instanceof Error) {\n    return args;\n  }\n  return jStat.geomean(args);\n};\n\nexports.GROWTH = function(known_y, known_x, new_x, use_const) {\n  // Credits: Ilmari Karonen (http://stackoverflow.com/questions/14161990/how-to-implement-growth-function-in-javascript)\n\n  known_y = utils.parseNumberArray(known_y);\n  if (known_y instanceof Error) {\n    return known_y;\n  }\n\n  // Default values for optional parameters:\n  var i;\n  if (known_x === undefined) {\n    known_x = [];\n    for (i = 1; i <= known_y.length; i++) {\n      known_x.push(i);\n    }\n  }\n  if (new_x === undefined) {\n    new_x = [];\n    for (i = 1; i <= known_y.length; i++) {\n      new_x.push(i);\n    }\n  }\n\n  known_x = utils.parseNumberArray(known_x);\n  new_x = utils.parseNumberArray(new_x);\n  if (utils.anyIsError(known_x, new_x)) {\n    return error.value;\n  }\n\n\n  if (use_const === undefined) {\n    use_const = true;\n  }\n\n  // Calculate sums over the data:\n  var n = known_y.length;\n  var avg_x = 0;\n  var avg_y = 0;\n  var avg_xy = 0;\n  var avg_xx = 0;\n  for (i = 0; i < n; i++) {\n    var x = known_x[i];\n    var y = Math.log(known_y[i]);\n    avg_x += x;\n    avg_y += y;\n    avg_xy += x * y;\n    avg_xx += x * x;\n  }\n  avg_x /= n;\n  avg_y /= n;\n  avg_xy /= n;\n  avg_xx /= n;\n\n  // Compute linear regression coefficients:\n  var beta;\n  var alpha;\n  if (use_const) {\n    beta = (avg_xy - avg_x * avg_y) / (avg_xx - avg_x * avg_x);\n    alpha = avg_y - beta * avg_x;\n  } else {\n    beta = avg_xy / avg_xx;\n    alpha = 0;\n  }\n\n  // Compute and return result array:\n  var new_y = [];\n  for (i = 0; i < new_x.length; i++) {\n    new_y.push(Math.exp(alpha + beta * new_x[i]));\n  }\n  return new_y;\n};\n\nexports.HARMEAN = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var n = range.length;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    den += 1 / range[i];\n  }\n  return n / den;\n};\n\nexports.HYPGEOM = {};\n\nexports.HYPGEOM.DIST = function(x, n, M, N, cumulative) {\n  x = utils.parseNumber(x);\n  n = utils.parseNumber(n);\n  M = utils.parseNumber(M);\n  N = utils.parseNumber(N);\n  if (utils.anyIsError(x, n, M, N)) {\n    return error.value;\n  }\n\n  function pdf(x, n, M, N) {\n    return mathTrig.COMBIN(M, x) * mathTrig.COMBIN(N - M, n - x) / mathTrig.COMBIN(N, n);\n  }\n\n  function cdf(x, n, M, N) {\n    var result = 0;\n    for (var i = 0; i <= x; i++) {\n      result += pdf(i, n, M, N);\n    }\n    return result;\n  }\n\n  return (cumulative) ? cdf(x, n, M, N) : pdf(x, n, M, N);\n};\n\nexports.INTERCEPT = function(known_y, known_x) {\n  known_y = utils.parseNumberArray(known_y);\n  known_x = utils.parseNumberArray(known_x);\n  if (utils.anyIsError(known_y, known_x)) {\n    return error.value;\n  }\n  if (known_y.length !== known_x.length) {\n    return error.na;\n  }\n  return exports.FORECAST(0, known_y, known_x);\n};\n\nexports.KURT = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var n = range.length;\n  var sigma = 0;\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 4);\n  }\n  sigma = sigma / Math.pow(jStat.stdev(range, true), 4);\n  return ((n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3))) * sigma - 3 * (n - 1) * (n - 1) / ((n - 2) * (n - 3));\n};\n\nexports.LARGE = function(range, k) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(range, k)) {\n    return range;\n  }\n  return range.sort(function(a, b) {\n    return b - a;\n  })[k - 1];\n};\n\nexports.LINEST = function(data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var ymean = jStat.mean(data_y);\n  var xmean = jStat.mean(data_x);\n  var n = data_x.length;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  var m = num / den;\n  var b = ymean - m * xmean;\n  return [m, b];\n};\n\n// According to Microsoft:\n// http://office.microsoft.com/en-us/starter-help/logest-function-HP010342665.aspx\n// LOGEST returns are based on the following linear model:\n// ln y = x1 ln m1 + ... + xn ln mn + ln b\nexports.LOGEST = function(data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  for (var i = 0; i < data_y.length; i ++) {\n    data_y[i] = Math.log(data_y[i]);\n  }\n\n  var result = exports.LINEST(data_y, data_x);\n  result[0] = Math.round(Math.exp(result[0])*1000000)/1000000;\n  result[1] = Math.round(Math.exp(result[1])*1000000)/1000000;\n  return result;\n};\n\nexports.LOGNORM = {};\n\nexports.LOGNORM.DIST = function(x, mean, sd, cumulative) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(x, mean, sd)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.lognormal.cdf(x, mean, sd) : jStat.lognormal.pdf(x, mean, sd);\n};\n\nexports.LOGNORM.INV = function(probability, mean, sd) {\n  probability = utils.parseNumber(probability);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(probability, mean, sd)) {\n    return error.value;\n  }\n  return jStat.lognormal.inv(probability, mean, sd);\n};\n\nexports.MAX = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  return (range.length === 0) ? 0 : Math.max.apply(Math, range);\n};\n\nexports.MAXA = function() {\n  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));\n  return (range.length === 0) ? 0 : Math.max.apply(Math, range);\n};\n\nexports.MEDIAN = function() {\n  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));\n  var result = jStat.median(range);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.MIN = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  return (range.length === 0) ? 0 : Math.min.apply(Math, range);\n};\n\nexports.MINA = function() {\n  var range = utils.arrayValuesToNumbers(utils.flatten(arguments));\n  return (range.length === 0) ? 0 : Math.min.apply(Math, range);\n};\n\nexports.MODE = {};\n\nexports.MODE.MULT = function() {\n  // Credits: Roönaän\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var n = range.length;\n  var count = {};\n  var maxItems = [];\n  var max = 0;\n  var currentItem;\n\n  for (var i = 0; i < n; i++) {\n    currentItem = range[i];\n    count[currentItem] = count[currentItem] ? count[currentItem] + 1 : 1;\n    if (count[currentItem] > max) {\n      max = count[currentItem];\n      maxItems = [];\n    }\n    if (count[currentItem] === max) {\n      maxItems[maxItems.length] = currentItem;\n    }\n  }\n  return maxItems;\n};\n\nexports.MODE.SNGL = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  return exports.MODE.MULT(range).sort(function(a, b) {\n    return a - b;\n  })[0];\n};\n\nexports.NEGBINOM = {};\n\nexports.NEGBINOM.DIST = function(k, r, p, cumulative) {\n  k = utils.parseNumber(k);\n  r = utils.parseNumber(r);\n  p = utils.parseNumber(p);\n  if (utils.anyIsError(k, r, p)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.negbin.cdf(k, r, p) : jStat.negbin.pdf(k, r, p);\n};\n\nexports.NORM = {};\n\nexports.NORM.DIST = function(x, mean, sd, cumulative) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(x, mean, sd)) {\n    return error.value;\n  }\n  if (sd <= 0) {\n    return error.num;\n  }\n\n  // Return normal distribution computed by jStat [http://jstat.org]\n  return (cumulative) ? jStat.normal.cdf(x, mean, sd) : jStat.normal.pdf(x, mean, sd);\n};\n\nexports.NORM.INV = function(probability, mean, sd) {\n  probability = utils.parseNumber(probability);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(probability, mean, sd)) {\n    return error.value;\n  }\n  return jStat.normal.inv(probability, mean, sd);\n};\n\nexports.NORM.S = {};\n\nexports.NORM.S.DIST = function(z, cumulative) {\n  z = utils.parseNumber(z);\n  if (z instanceof Error) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.normal.cdf(z, 0, 1) : jStat.normal.pdf(z, 0, 1);\n};\n\nexports.NORM.S.INV = function(probability) {\n  probability = utils.parseNumber(probability);\n  if (probability instanceof Error) {\n    return error.value;\n  }\n  return jStat.normal.inv(probability, 0, 1);\n};\n\nexports.PEARSON = function(data_x, data_y) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var num = 0;\n  var den1 = 0;\n  var den2 = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den1 += Math.pow(data_x[i] - xmean, 2);\n    den2 += Math.pow(data_y[i] - ymean, 2);\n  }\n  return num / Math.sqrt(den1 * den2);\n};\n\nexports.PERCENTILE = {};\n\nexports.PERCENTILE.EXC = function(array, k) {\n  array = utils.parseNumberArray(utils.flatten(array));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(array, k)) {\n    return error.value;\n  }\n  array = array.sort(function(a, b) {\n    {\n      return a - b;\n    }\n  });\n  var n = array.length;\n  if (k < 1 / (n + 1) || k > 1 - 1 / (n + 1)) {\n    return error.num;\n  }\n  var l = k * (n + 1) - 1;\n  var fl = Math.floor(l);\n  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));\n};\n\nexports.PERCENTILE.INC = function(array, k) {\n  array = utils.parseNumberArray(utils.flatten(array));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(array, k)) {\n    return error.value;\n  }\n  array = array.sort(function(a, b) {\n    return a - b;\n  });\n  var n = array.length;\n  var l = k * (n - 1);\n  var fl = Math.floor(l);\n  return utils.cleanFloat((l === fl) ? array[l] : array[fl] + (l - fl) * (array[fl + 1] - array[fl]));\n};\n\nexports.PERCENTRANK = {};\n\nexports.PERCENTRANK.EXC = function(array, x, significance) {\n  significance = (significance === undefined) ? 3 : significance;\n  array = utils.parseNumberArray(utils.flatten(array));\n  x = utils.parseNumber(x);\n  significance = utils.parseNumber(significance);\n  if (utils.anyIsError(array, x, significance)) {\n    return error.value;\n  }\n  array = array.sort(function(a, b) {\n    return a - b;\n  });\n  var uniques = misc.UNIQUE.apply(null, array);\n  var n = array.length;\n  var m = uniques.length;\n  var power = Math.pow(10, significance);\n  var result = 0;\n  var match = false;\n  var i = 0;\n  while (!match && i < m) {\n    if (x === uniques[i]) {\n      result = (array.indexOf(uniques[i]) + 1) / (n + 1);\n      match = true;\n    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n      result = (array.indexOf(uniques[i]) + 1 + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n + 1);\n      match = true;\n    }\n    i++;\n  }\n  return Math.floor(result * power) / power;\n};\n\nexports.PERCENTRANK.INC = function(array, x, significance) {\n  significance = (significance === undefined) ? 3 : significance;\n  array = utils.parseNumberArray(utils.flatten(array));\n  x = utils.parseNumber(x);\n  significance = utils.parseNumber(significance);\n  if (utils.anyIsError(array, x, significance)) {\n    return error.value;\n  }\n  array = array.sort(function(a, b) {\n    return a - b;\n  });\n  var uniques = misc.UNIQUE.apply(null, array);\n  var n = array.length;\n  var m = uniques.length;\n  var power = Math.pow(10, significance);\n  var result = 0;\n  var match = false;\n  var i = 0;\n  while (!match && i < m) {\n    if (x === uniques[i]) {\n      result = array.indexOf(uniques[i]) / (n - 1);\n      match = true;\n    } else if (x >= uniques[i] && (x < uniques[i + 1] || i === m - 1)) {\n      result = (array.indexOf(uniques[i]) + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n - 1);\n      match = true;\n    }\n    i++;\n  }\n  return Math.floor(result * power) / power;\n};\n\nexports.PERMUT = function(number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return mathTrig.FACT(number) / mathTrig.FACT(number - number_chosen);\n};\n\nexports.PERMUTATIONA = function(number, number_chosen) {\n  number = utils.parseNumber(number);\n  number_chosen = utils.parseNumber(number_chosen);\n  if (utils.anyIsError(number, number_chosen)) {\n    return error.value;\n  }\n  return Math.pow(number, number_chosen);\n};\n\nexports.PHI = function(x) {\n  x = utils.parseNumber(x);\n  if (x instanceof Error) {\n    return error.value;\n  }\n  return Math.exp(-0.5 * x * x) / SQRT2PI;\n};\n\nexports.POISSON = {};\n\nexports.POISSON.DIST = function(x, mean, cumulative) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  if (utils.anyIsError(x, mean)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.poisson.cdf(x, mean) : jStat.poisson.pdf(x, mean);\n};\n\nexports.PROB = function(range, probability, lower, upper) {\n  if (lower === undefined) {\n    return 0;\n  }\n  upper = (upper === undefined) ? lower : upper;\n\n  range = utils.parseNumberArray(utils.flatten(range));\n  probability = utils.parseNumberArray(utils.flatten(probability));\n  lower = utils.parseNumber(lower);\n  upper = utils.parseNumber(upper);\n  if (utils.anyIsError(range, probability, lower, upper)) {\n    return error.value;\n  }\n\n  if (lower === upper) {\n    return (range.indexOf(lower) >= 0) ? probability[range.indexOf(lower)] : 0;\n  }\n\n  var sorted = range.sort(function(a, b) {\n    return a - b;\n  });\n  var n = sorted.length;\n  var result = 0;\n  for (var i = 0; i < n; i++) {\n    if (sorted[i] >= lower && sorted[i] <= upper) {\n      result += probability[range.indexOf(sorted[i])];\n    }\n  }\n  return result;\n};\n\nexports.QUARTILE = {};\n\nexports.QUARTILE.EXC = function(range, quart) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  quart = utils.parseNumber(quart);\n  if (utils.anyIsError(range, quart)) {\n    return error.value;\n  }\n  switch (quart) {\n    case 1:\n      return exports.PERCENTILE.EXC(range, 0.25);\n    case 2:\n      return exports.PERCENTILE.EXC(range, 0.5);\n    case 3:\n      return exports.PERCENTILE.EXC(range, 0.75);\n    default:\n      return error.num;\n  }\n};\n\nexports.QUARTILE.INC = function(range, quart) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  quart = utils.parseNumber(quart);\n  if (utils.anyIsError(range, quart)) {\n    return error.value;\n  }\n  switch (quart) {\n    case 1:\n      return exports.PERCENTILE.INC(range, 0.25);\n    case 2:\n      return exports.PERCENTILE.INC(range, 0.5);\n    case 3:\n      return exports.PERCENTILE.INC(range, 0.75);\n    default:\n      return error.num;\n  }\n};\n\nexports.RANK = {};\n\nexports.RANK.AVG = function(number, range, order) {\n  number = utils.parseNumber(number);\n  range = utils.parseNumberArray(utils.flatten(range));\n  if (utils.anyIsError(number, range)) {\n    return error.value;\n  }\n  range = utils.flatten(range);\n  order = order || false;\n  var sort = (order) ? function(a, b) {\n    return a - b;\n  } : function(a, b) {\n    return b - a;\n  };\n  range = range.sort(sort);\n\n  var length = range.length;\n  var count = 0;\n  for (var i = 0; i < length; i++) {\n    if (range[i] === number) {\n      count++;\n    }\n  }\n\n  return (count > 1) ? (2 * range.indexOf(number) + count + 1) / 2 : range.indexOf(number) + 1;\n};\n\nexports.RANK.EQ = function(number, range, order) {\n  number = utils.parseNumber(number);\n  range = utils.parseNumberArray(utils.flatten(range));\n  if (utils.anyIsError(number, range)) {\n    return error.value;\n  }\n  order = order || false;\n  var sort = (order) ? function(a, b) {\n    return a - b;\n  } : function(a, b) {\n    return b - a;\n  };\n  range = range.sort(sort);\n  return range.indexOf(number) + 1;\n};\n\nexports.ROW = function(matrix, index) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if (index < 0) {\n    return error.num;\n  }\n\n  if (!(matrix instanceof Array) || (typeof index !== 'number')) {\n    return error.value;\n  }\n\n  if (matrix.length === 0) {\n    return undefined;\n  }\n\n  return jStat.row(matrix, index);\n};\n\nexports.ROWS = function(matrix) {\n  if (arguments.length !== 1) {\n    return error.na;\n  }\n\n  if (!(matrix instanceof Array)) {\n    return error.value;\n  }\n\n  if (matrix.length === 0) {\n    return 0;\n  }\n\n  return jStat.rows(matrix);\n};\n\nexports.RSQ = function(data_x, data_y) { // no need to flatten here, PEARSON will take care of that\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  if (utils.anyIsError(data_x, data_y)) {\n    return error.value;\n  }\n  return Math.pow(exports.PEARSON(data_x, data_y), 2);\n};\n\nexports.SKEW = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var n = range.length;\n  var sigma = 0;\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 3);\n  }\n  return n * sigma / ((n - 1) * (n - 2) * Math.pow(jStat.stdev(range, true), 3));\n};\n\nexports.SKEW.P = function() {\n  var range = utils.parseNumberArray(utils.flatten(arguments));\n  if (range instanceof Error) {\n    return range;\n  }\n  var mean = jStat.mean(range);\n  var n = range.length;\n  var m2 = 0;\n  var m3 = 0;\n  for (var i = 0; i < n; i++) {\n    m3 += Math.pow(range[i] - mean, 3);\n    m2 += Math.pow(range[i] - mean, 2);\n  }\n  m3 = m3 / n;\n  m2 = m2 / n;\n  return m3 / Math.pow(m2, 3 / 2);\n};\n\nexports.SLOPE = function(data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  return num / den;\n};\n\nexports.SMALL = function(range, k) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  k = utils.parseNumber(k);\n  if (utils.anyIsError(range, k)) {\n    return range;\n  }\n  return range.sort(function(a, b) {\n    return a - b;\n  })[k - 1];\n};\n\nexports.STANDARDIZE = function(x, mean, sd) {\n  x = utils.parseNumber(x);\n  mean = utils.parseNumber(mean);\n  sd = utils.parseNumber(sd);\n  if (utils.anyIsError(x, mean, sd)) {\n    return error.value;\n  }\n  return (x - mean) / sd;\n};\n\nexports.STDEV = {};\n\nexports.STDEV.P = function() {\n  var v = exports.VAR.P.apply(this, arguments);\n  var result = Math.sqrt(v);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.STDEV.S = function() {\n  var v = exports.VAR.S.apply(this, arguments);\n  var result = Math.sqrt(v);\n\n  return result;\n};\n\nexports.STDEVA = function() {\n  var v = exports.VARA.apply(this, arguments);\n  var result = Math.sqrt(v);\n\n  return result;\n};\n\nexports.STDEVPA = function() {\n  var v = exports.VARPA.apply(this, arguments);\n  var result = Math.sqrt(v);\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\n\nexports.STEYX = function(data_y, data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  if (utils.anyIsError(data_y, data_x)) {\n    return error.value;\n  }\n  var xmean = jStat.mean(data_x);\n  var ymean = jStat.mean(data_y);\n  var n = data_x.length;\n  var lft = 0;\n  var num = 0;\n  var den = 0;\n  for (var i = 0; i < n; i++) {\n    lft += Math.pow(data_y[i] - ymean, 2);\n    num += (data_x[i] - xmean) * (data_y[i] - ymean);\n    den += Math.pow(data_x[i] - xmean, 2);\n  }\n  return Math.sqrt((lft - num * num / den) / (n - 2));\n};\n\nexports.TRANSPOSE = function(matrix) {\n  if (!matrix) {\n    return error.na;\n  }\n  return jStat.transpose(matrix);\n};\n\nexports.T = text.T;\n\nexports.T.DIST = function(x, df, cumulative) {\n  x = utils.parseNumber(x);\n  df = utils.parseNumber(df);\n  if (utils.anyIsError(x, df)) {\n    return error.value;\n  }\n  return (cumulative) ? jStat.studentt.cdf(x, df) : jStat.studentt.pdf(x, df);\n};\n\nexports.T.DIST['2T'] = function(x, df) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if (x < 0 || df < 1) {\n    return error.num;\n  }\n\n  if ((typeof x !== 'number') || (typeof df !== 'number')) {\n    return error.value;\n  }\n\n  return (1 - jStat.studentt.cdf(x , df)) * 2;\n};\n\nexports.T.DIST.RT = function(x, df) {\n  if (arguments.length !== 2) {\n    return error.na;\n  }\n\n  if (x < 0 || df < 1) {\n    return error.num;\n  }\n\n  if ((typeof x !== 'number') || (typeof df !== 'number')) {\n    return error.value;\n  }\n\n  return 1 - jStat.studentt.cdf(x , df);\n};\n\nexports.T.INV = function(probability, df) {\n  probability = utils.parseNumber(probability);\n  df = utils.parseNumber(df);\n  if (utils.anyIsError(probability, df)) {\n    return error.value;\n  }\n  return jStat.studentt.inv(probability, df);\n};\n\nexports.T.INV['2T'] = function(probability, df) {\n  probability = utils.parseNumber(probability);\n  df = utils.parseNumber(df);\n  if (probability <= 0 || probability > 1 || df < 1) {\n    return error.num;\n  }\n  if (utils.anyIsError(probability, df)) {\n    return error.value;\n  }\n  return Math.abs(jStat.studentt.inv(probability/2, df));\n};\n\n// The algorithm can be found here:\n// http://www.chem.uoa.gr/applets/AppletTtest/Appl_Ttest2.html\nexports.T.TEST = function(data_x, data_y) {\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  if (utils.anyIsError(data_x, data_y)) {\n    return error.value;\n  }\n\n  var mean_x = jStat.mean(data_x);\n  var mean_y = jStat.mean(data_y);\n  var s_x = 0;\n  var s_y = 0;\n  var i;\n\n  for (i = 0; i < data_x.length; i++) {\n    s_x += Math.pow(data_x[i] - mean_x, 2);\n  }\n  for (i = 0; i < data_y.length; i++) {\n    s_y += Math.pow(data_y[i] - mean_y, 2);\n  }\n\n  s_x = s_x / (data_x.length-1);\n  s_y = s_y / (data_y.length-1);\n\n  var t = Math.abs(mean_x - mean_y) / Math.sqrt(s_x/data_x.length + s_y/data_y.length);\n\n  return exports.T.DIST['2T'](t, data_x.length+data_y.length-2);\n};\n\nexports.TREND = function(data_y, data_x, new_data_x) {\n  data_y = utils.parseNumberArray(utils.flatten(data_y));\n  data_x = utils.parseNumberArray(utils.flatten(data_x));\n  new_data_x = utils.parseNumberArray(utils.flatten(new_data_x));\n  if (utils.anyIsError(data_y, data_x, new_data_x)) {\n    return error.value;\n  }\n  var linest = exports.LINEST(data_y, data_x);\n  var m = linest[0];\n  var b = linest[1];\n  var result = [];\n\n  new_data_x.forEach(function(x) {\n    result.push(m * x + b);\n  });\n\n  return result;\n};\n\nexports.TRIMMEAN = function(range, percent) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  percent = utils.parseNumber(percent);\n  if (utils.anyIsError(range, percent)) {\n    return error.value;\n  }\n  var trim = mathTrig.FLOOR(range.length * percent, 2) / 2;\n  return jStat.mean(utils.initial(utils.rest(range.sort(function(a, b) {\n    return a - b;\n  }), trim), trim));\n};\n\nexports.VAR = {};\n\nexports.VAR.P = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  var n = range.length;\n  var sigma = 0;\n  var mean = exports.AVERAGE(range);\n  var result;\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 2);\n  }\n  result = sigma / n;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.VAR.S = function() {\n  var range = utils.numbers(utils.flatten(arguments));\n  var n = range.length;\n  var sigma = 0;\n  var mean = exports.AVERAGE(range);\n  for (var i = 0; i < n; i++) {\n    sigma += Math.pow(range[i] - mean, 2);\n  }\n  return sigma / (n - 1);\n};\n\nexports.VARA = function() {\n  var range = utils.flatten(arguments);\n  var n = range.length;\n  var sigma = 0;\n  var count = 0;\n  var mean = exports.AVERAGEA(range);\n  for (var i = 0; i < n; i++) {\n    var el = range[i];\n    if (typeof el === 'number') {\n      sigma += Math.pow(el - mean, 2);\n    } else if (el === true) {\n      sigma += Math.pow(1 - mean, 2);\n    } else {\n      sigma += Math.pow(0 - mean, 2);\n    }\n\n    if (el !== null) {\n      count++;\n    }\n  }\n  return sigma / (count - 1);\n};\n\nexports.VARPA = function() {\n  var range = utils.flatten(arguments);\n  var n = range.length;\n  var sigma = 0;\n  var count = 0;\n  var mean = exports.AVERAGEA(range);\n  var result;\n  for (var i = 0; i < n; i++) {\n    var el = range[i];\n    if (typeof el === 'number') {\n      sigma += Math.pow(el - mean, 2);\n    } else if (el === true) {\n      sigma += Math.pow(1 - mean, 2);\n    } else {\n      sigma += Math.pow(0 - mean, 2);\n    }\n\n    if (el !== null) {\n      count++;\n    }\n  }\n  result = sigma / count;\n\n  if (isNaN(result)) {\n    result = error.num;\n  }\n\n  return result;\n};\n\nexports.WEIBULL = {};\n\nexports.WEIBULL.DIST = function(x, alpha, beta, cumulative) {\n  x = utils.parseNumber(x);\n  alpha = utils.parseNumber(alpha);\n  beta = utils.parseNumber(beta);\n  if (utils.anyIsError(x, alpha, beta)) {\n    return error.value;\n  }\n  return (cumulative) ? 1 - Math.exp(-Math.pow(x / beta, alpha)) : Math.pow(x, alpha - 1) * Math.exp(-Math.pow(x / beta, alpha)) * alpha / Math.pow(beta, alpha);\n};\n\nexports.Z = {};\n\nexports.Z.TEST = function(range, x, sd) {\n  range = utils.parseNumberArray(utils.flatten(range));\n  x = utils.parseNumber(x);\n  if (utils.anyIsError(range, x)) {\n    return error.value;\n  }\n\n  sd = sd || exports.STDEV.S(range);\n  var n = range.length;\n  return 1 - exports.NORM.S.DIST((exports.AVERAGE(range) - x) / (sd / Math.sqrt(n)), true);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}